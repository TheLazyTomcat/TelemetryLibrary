var tipuesearch = {"pages": [
     {"title": "TelemetryCommon", "text": "<hr>        <p><b>TelemetryCommon</b>    <p>©2013-2015 František Milt, all rights reserved.    <p>This file is intended to provide types, constants, routines, etc. used throughout the Telemetry library (that is, in more than one unit).    <p>Last change: 2015-06-25    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2013-10-04 - First stable version.</p></li>    <li><p>2014-04-06 - TGameSupportInfo.GameID and <a class=\"normal\" href=\"TelemetryCommon.scs_value_localized_t.html#StringData\">scs_value_localized_t.StringData</a> fields type changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-04-18 - cConfigFieldsSeparator constant moved to <a class=\"normal\" href=\"TelemetryIDs.html\">TelemetryIDs</a> unit.</p></li>    <li><p>2014-04-20 - Added following types:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryCommon.scs_named_value_localized_t.html\">scs_named_value_localized_t</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryCommon.html#p_scs_named_value_localized_t\">p_scs_named_value_localized_t</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryCommon.scs_telemetry_configuration_localized_t.html\">scs_telemetry_configuration_localized_t</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryCommon.html#p_scs_telemetry_configuration_localized_t\">p_scs_telemetry_configuration_localized_t</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-20 - Functions <a class=\"normal\" href=\"TelemetryConversions.html#scs_value_localized\">scs_value_localized</a> and <a class=\"normal\" href=\"TelemetryConversions.html#scs_value\">scs_value</a> moved to <a class=\"normal\" href=\"TelemetryStreaming.html\">TelemetryStreaming</a> unit.</p></li>    <li><p>2014-05-05 - <a class=\"normal\" href=\"TelemetryCommon.TMulticastEvent.html\">TMulticastEvent</a> placeholder added.</p></li>    <li><p>2014-11-02 - Added types <code><a class=\"normal\" href=\"TelemetryCommon.html#PtrInt\">PtrInt</a></code> and <code><a class=\"normal\" href=\"TelemetryCommon.html#PtrUInt\">PtrUInt</a></code>.</p></li>    <li><p>2015-04-20 - Added <a class=\"normal\" href=\"TelemetryCommon.html#TMemSize\">TMemSize</a> type.</p></li>    <li><p>2015-04-20 - Constants <code>cEmptySCSValue</code> and <code>cEmptySCSValueLocalized</code> renamed to <code>EmptySCSValue</code> and <code>EmptySCSValueLocalized</code> respectively.</p></li>    <li><p>2015-06-25 - Removed <a class=\"normal\" href=\"TelemetryCommon.TMulticastEvent.html\">TMulticastEvent</a> placeholder.</p></li>    <li><p>2015-06-25 - Added <a class=\"normal\" href=\"TelemetryCommon.html#TStrSize\">TStrSize</a> type.</p></li>    <li><p>2015-06-25 - TGameSupportInfo changed to <a class=\"normal\" href=\"TelemetryCommon.TSupportedGame.html\">TSupportedGame</a>, PGameSupportInfo changed to <a class=\"normal\" href=\"TelemetryCommon.html#PSupportedGame\">PSupportedGame</a>.</p></li>    <li><p>2015-06-25 - Added list of supported API versions and list of supported games (<a class=\"normal\" href=\"TelemetryCommon.html#SupportedTelemetryVersions\">SupportedTelemetryVersions</a>, <a class=\"normal\" href=\"TelemetryCommon.html#SupportedGames\">SupportedGames</a>).</p></li>    <li><p>2015-06-25 - Renamed and completed following constants:</p>    <ul class=\"compact_spacing\">    <li><p><code>EmptySCSValue</code> renamed to <a class=\"normal\" href=\"TelemetryCommon.html#scs_value_empty\">scs_value_empty</a></p></li>    <li><p><code>EmptySCSValueLocalized</code> renamed to <a class=\"normal\" href=\"TelemetryCommon.html#scs_value_localized_empty\">scs_value_localized_empty</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-29 - Returned <a class=\"normal\" href=\"TelemetryCommon.TMulticastEvent.html\">TMulticastEvent</a> placeholder.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryCommon.html"},
     {"title": "TelemetryCommon.TMulticastEvent", "text": " Actual class is defined in unit MulticastEvent and is not included in documentation of telemetry library. Refer to mentioned unit located in folder <i>Source\\Libs</i> for details. ", "tags": "", "loc": "TelemetryCommon.TMulticastEvent.html"},
     {"title": "TelemetryCommon.TSupportedGame", "text": "    <p>  ", "tags": "", "loc": "TelemetryCommon.TSupportedGame.html"},
     {"title": "TelemetryCommon.TSupportedGame.GameID", "text": " ", "tags": "", "loc": "TelemetryCommon.TSupportedGame.html#GameID"},
     {"title": "TelemetryCommon.TSupportedGame.GameVersion", "text": " ", "tags": "", "loc": "TelemetryCommon.TSupportedGame.html#GameVersion"},
     {"title": "TelemetryCommon.scs_value_localized_t", "text": " <code>scs_value_t</code> is using pointers for some values, so it cannot be stored directly, as only reference and no actual data would be stored.<br> Use this structure along with call to <a class=\"normal\" href=\"TelemetryConversions.html#scs_value_localized\">scs_value_localized</a> function to store content of a variable of type <code>scs_value_t</code>.    <p>   ", "tags": "", "loc": "TelemetryCommon.scs_value_localized_t.html"},
     {"title": "TelemetryCommon.scs_value_localized_t.ValueType", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_value_localized_t.html#ValueType"},
     {"title": "TelemetryCommon.scs_value_localized_t.BinaryData", "text": " integers, floats). ", "tags": "", "loc": "TelemetryCommon.scs_value_localized_t.html#BinaryData"},
     {"title": "TelemetryCommon.scs_value_localized_t.StringData", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_value_localized_t.html#StringData"},
     {"title": "TelemetryCommon.scs_named_value_localized_t", "text": " <code>scs_named_value_t</code> is using pointers for some values, so it cannot be stored directly, as only reference and no actual data would be stored.<br> Use this structure along with call to <a class=\"normal\" href=\"TelemetryConversions.html#scs_named_value_localized\">scs_named_value_localized</a> function to store content of a variable of type <code>scs_named_value_t</code>.    <p>   ", "tags": "", "loc": "TelemetryCommon.scs_named_value_localized_t.html"},
     {"title": "TelemetryCommon.scs_named_value_localized_t.Name", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_named_value_localized_t.html#Name"},
     {"title": "TelemetryCommon.scs_named_value_localized_t.Index", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_named_value_localized_t.html#Index"},
     {"title": "TelemetryCommon.scs_named_value_localized_t.Value", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_named_value_localized_t.html#Value"},
     {"title": "TelemetryCommon.scs_telemetry_configuration_localized_t", "text": " <code>scs_telemetry_configuration_t</code> is using pointers for some values, so it cannot be stored directly, as only reference and no actual data would be stored.<br> Use this structure along with call to <a class=\"normal\" href=\"TelemetryConversions.html#scs_telemetry_configuration_localized\">scs_telemetry_configuration_localized</a> function to store content of a variable of type <code>scs_telemetry_configuration_t</code>.    <p>  ", "tags": "", "loc": "TelemetryCommon.scs_telemetry_configuration_localized_t.html"},
     {"title": "TelemetryCommon.scs_telemetry_configuration_localized_t.ID", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_telemetry_configuration_localized_t.html#ID"},
     {"title": "TelemetryCommon.scs_telemetry_configuration_localized_t.Attributes", "text": " ", "tags": "", "loc": "TelemetryCommon.scs_telemetry_configuration_localized_t.html#Attributes"},
     {"title": "TelemetryCommon.SupportedTelemetryVersions", "text": " ", "tags": "", "loc": "TelemetryCommon.html#SupportedTelemetryVersions"},
     {"title": "TelemetryCommon.SupportedGames", "text": " ", "tags": "", "loc": "TelemetryCommon.html#SupportedGames"},
     {"title": "TelemetryCommon.scs_value_empty", "text": " ", "tags": "", "loc": "TelemetryCommon.html#scs_value_empty"},
     {"title": "TelemetryCommon.scs_value_localized_empty", "text": " ", "tags": "", "loc": "TelemetryCommon.html#scs_value_localized_empty"},
     {"title": "TelemetryCommon.PtrInt", "text": " ", "tags": "", "loc": "TelemetryCommon.html#PtrInt"},
     {"title": "TelemetryCommon.PtrUInt", "text": " ", "tags": "", "loc": "TelemetryCommon.html#PtrUInt"},
     {"title": "TelemetryCommon.TMemSize", "text": " when allocating memory. ", "tags": "", "loc": "TelemetryCommon.html#TMemSize"},
     {"title": "TelemetryCommon.TStrSize", "text": " ", "tags": "", "loc": "TelemetryCommon.html#TStrSize"},
     {"title": "TelemetryCommon.PSupportedGame", "text": " ", "tags": "", "loc": "TelemetryCommon.html#PSupportedGame"},
     {"title": "TelemetryCommon.p_scs_value_localized_t", "text": " ", "tags": "", "loc": "TelemetryCommon.html#p_scs_value_localized_t"},
     {"title": "TelemetryCommon.p_scs_named_value_localized_t", "text": " ", "tags": "", "loc": "TelemetryCommon.html#p_scs_named_value_localized_t"},
     {"title": "TelemetryCommon.p_scs_telemetry_configuration_localized_t", "text": " ", "tags": "", "loc": "TelemetryCommon.html#p_scs_telemetry_configuration_localized_t"},
     {"title": "TelemetryConversions", "text": "<hr>        <p><b>TelemetryConversions</b>    <p>©2013-2015 František Milt, all rights reserved.    <p>This unit contains routines used for conversions between selected non-localized SDK types and their no-pointer alternatives.    <p>Last change: 2015-04-20    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-04-30 - First stable version.</p></li>    <li><p>2014-04-30 - Functions <a class=\"normal\" href=\"TelemetryConversions.html#scs_value_localized\">scs_value_localized</a> and <a class=\"normal\" href=\"TelemetryConversions.html#scs_value\">scs_value</a> were moved to this unit.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryConversions.html"},
     {"title": "TelemetryConversions.scs_value_localized", "text": "    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_value_localized"},
     {"title": "TelemetryConversions.scs_value", "text": " <b>Warning</b> - you have to manually free memory allocated for some fields when you are done with result of this function! Use function <a class=\"normal\" href=\"TelemetryConversions.html#scs_value_free\">scs_value_free</a> for this purpose.    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_value"},
     {"title": "TelemetryConversions.scs_value_free", "text": " <b>Warning</b> - do not use on variables returned from the API!    <p>  Value Value whose resources has to be freed.  ", "tags": "", "loc": "TelemetryConversions.html#scs_value_free"},
     {"title": "TelemetryConversions.scs_named_value_localized", "text": "    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_named_value_localized"},
     {"title": "TelemetryConversions.scs_named_value", "text": " <b>Warning</b> - you have to manually free memory allocated for some fields when you are done with result of this function! Use function <a class=\"normal\" href=\"TelemetryConversions.html#scs_named_value_free\">scs_named_value_free</a> for this purpose.    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_named_value"},
     {"title": "TelemetryConversions.scs_named_value_free", "text": " <b>Warning</b> - do not use on variables returned from the API!    <p>  Value Value whose resources has to be freed.  ", "tags": "", "loc": "TelemetryConversions.html#scs_named_value_free"},
     {"title": "TelemetryConversions.scs_telemetry_configuration_localized", "text": "    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_telemetry_configuration_localized"},
     {"title": "TelemetryConversions.scs_telemetry_configuration", "text": " <b>Warning</b> - you have to manually free memory allocated for some fields when you are done with result of this function! Use function <a class=\"normal\" href=\"TelemetryConversions.html#scs_telemetry_configuration_free\">scs_telemetry_configuration_free</a> for this purpose.    <p>    <p>  Value Value that has to be converted. Converted value. ", "tags": "", "loc": "TelemetryConversions.html#scs_telemetry_configuration"},
     {"title": "TelemetryConversions.scs_telemetry_configuration_free", "text": " <b>Warning</b> - do not use on variables returned from the API!    <p>   Value Value whose resources has to be freed. FreeAttributes When <code>True</code>, attributes array is freed completely, otherwise only attributes fields are freed.  ", "tags": "", "loc": "TelemetryConversions.html#scs_telemetry_configuration_free"},
     {"title": "TelemetryIDs", "text": "<hr>        <p><b>TelemetryIDs</b>    <p>©2013-2015 František Milt, all rights reserved.    <p>This unit contains definitions of identification number types, set of constants containing full configuration names, constants with IDs for individual configs and channel, as well as function used to obtain those IDs.    <p>Last change: 2015-04-20    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-04-15 - First stable version.</p></li>    <li><p>2014-04-15 - Function <a class=\"normal\" href=\"TelemetryIDs.html#GetItemID\">GetItemID</a> was moved to this unit.</p></li>    <li><p>2014-04-18 - Constant cConfigFieldsSeparator was moved to this unit.</p></li>    <li><p>2014-10-23 - Added support for eut2 1.9.</p></li>    <li><p>2014-10-23 - Added true constants when precomputed IDs are used (optional, can be reconfigured to use writeable constans instead).</p></li>    <li><p>2014-11-07 - Added support for eut2 1.10.</p></li>    <li><p>2015-04-20 - Constant cConfigFieldsSeparator renamed to <a class=\"normal\" href=\"TelemetryIDs.html#ConfigFieldsSeparator\">ConfigFieldsSeparator</a>.</p></li>    <li><p>2015-04-20 - Slight implementation changes.</p></li>  </ul>    <p>    <p><hr>    <p>Table of precomputed IDs for channel names.<br> IDs are stored in constans whose identifiers corresponds to indetifiers of constants containing string value. For example, for name stored in constant <code>SCS_TELEMETRY_CHANNEL_local_scale</code>, the ID is stored in constant <a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CHANNEL_ID_local_scale\">SCS_TELEMETRY_CHANNEL_ID_local_scale</a>. </p>    <table class=\"table_tag\">    <tr class=\"head\">      <th><p>Channel name constant identifier</p></th>      <th><p>String value</p></th>      <th><p>Precomputed ID (hexadecimal)</p></th>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_CHANNEL_local_scale</code></p></td>      <td><p><code>local.scale</code></p></td>      <td><p><code>33DE67E4</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_CHANNEL_game_time</code></p></td>      <td><p><code>game.time</code></p></td>      <td><p><code>40333D16</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_CHANNEL_next_rest_stop</code></p></td>      <td><p><code>rest.stop</code></p></td>      <td><p><code>0B878C8C</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_connected</code></p></td>      <td><p><code>trailer.connected</code></p></td>      <td><p><code>7007CCEE</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_world_placement</code></p></td>      <td><p><code>trailer.world.placement</code></p></td>      <td><p><code>3A729370</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_local_linear_velocity</code></p></td>      <td><p><code>trailer.velocity.linear</code></p></td>      <td><p><code>AE80C1D0</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_local_angular_velocity</code></p></td>      <td><p><code>trailer.velocity.angular</code></p></td>      <td><p><code>A2981BDF</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_local_linear_acceleration</code></p></td>      <td><p><code>trailer.acceleration.linear</code></p></td>      <td><p><code>99A57FA9</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_local_angular_acceleration</code></p></td>      <td><p><code>trailer.acceleration.angular</code></p></td>      <td><p><code>8B76F7F9</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wear_chassis</code></p></td>      <td><p><code>trailer.wear.chassis</code></p></td>      <td><p><code>E071BE1A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_susp_deflection</code></p></td>      <td><p><code>trailer.wheel.suspension.deflection</code></p></td>      <td><p><code>1E44DA91</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_on_ground</code></p></td>      <td><p><code>trailer.wheel.on_ground</code></p></td>      <td><p><code>9A68642F</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_substance</code></p></td>      <td><p><code>trailer.wheel.substance</code></p></td>      <td><p><code>1DFBFCF1</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_velocity</code></p></td>      <td><p><code>trailer.wheel.angular_velocity</code></p></td>      <td><p><code>C387243E</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_steering</code></p></td>      <td><p><code>trailer.wheel.steering</code></p></td>      <td><p><code>3B417600</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRAILER_CHANNEL_wheel_rotation</code></p></td>      <td><p><code>trailer.wheel.rotation</code></p></td>      <td><p><code>EA941F6D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_world_placement</code></p></td>      <td><p><code>truck.world.placement</code></p></td>      <td><p><code>6B48D06B</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_local_linear_velocity</code></p></td>      <td><p><code>truck.local.velocity.linear</code></p></td>      <td><p><code>5D9D7AB3</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_local_angular_velocity</code></p></td>      <td><p><code>truck.local.velocity.angular</code></p></td>      <td><p><code>76D03686</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_local_linear_acceleration</code></p></td>      <td><p><code>truck.local.acceleration.linear</code></p></td>      <td><p><code>A2E5F90F</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_local_angular_acceleration</code></p></td>      <td><p><code>truck.local.acceleration.angular</code></p></td>      <td><p><code>B4F8B1A2</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>*SCS_TELEMETRY_TRUCK_CHANNEL_cabin_orientation</code></p></td>      <td><p><code>truck.cabin.orientation</code></p></td>      <td><p><code>36F3F15D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_cabin_offset</code></p></td>      <td><p><code>truck.cabin.offset</code></p></td>      <td><p><code>303DEF2A</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_cabin_angular_velocity</code></p></td>      <td><p><code>truck.cabin.velocity.angular</code></p></td>      <td><p><code>10976F36</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_cabin_angular_acceleration</code></p></td>      <td><p><code>truck.cabin.acceleration.angular</code></p></td>      <td><p><code>D10EF7A8</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_head_offset</code></p></td>      <td><p><code>truck.head.offset</code></p></td>      <td><p><code>EEE287E8</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_speed</code></p></td>      <td><p><code>truck.speed</code></p></td>      <td><p><code>4E839148</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_engine_rpm</code></p></td>      <td><p><code>truck.engine.rpm</code></p></td>      <td><p><code>160E7B38</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_engine_gear</code></p></td>      <td><p><code>truck.engine.gear</code></p></td>      <td><p><code>9582C042</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_input_steering</code></p></td>      <td><p><code>truck.input.steering</code></p></td>      <td><p><code>DCFA7E3B</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_input_throttle</code></p></td>      <td><p><code>truck.input.throttle</code></p></td>      <td><p><code>CF8FC74B</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_input_brake</code></p></td>      <td><p><code>truck.input.brake</code></p></td>      <td><p><code>5EEDB702</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_input_clutch</code></p></td>      <td><p><code>truck.input.clutch</code></p></td>      <td><p><code>F5ECF339</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_effective_steering</code></p></td>      <td><p><code>truck.effective.steering</code></p></td>      <td><p><code>94181EAB</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_effective_throttle</code></p></td>      <td><p><code>truck.effective.throttle</code></p></td>      <td><p><code>876DA7DB</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_effective_brake</code></p></td>      <td><p><code>truck.effective.brake</code></p></td>      <td><p><code>47E5F7F0</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_effective_clutch</code></p></td>      <td><p><code>truck.effective.clutch</code></p></td>      <td><p><code>A6466849</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_cruise_control</code></p></td>      <td><p><code>truck.cruise_control</code></p></td>      <td><p><code>C31E2094</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_hshifter_slot</code></p></td>      <td><p><code>truck.hshifter.slot</code></p></td>      <td><p><code>36C98B9D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_hshifter_selector</code></p></td>      <td><p><code>truck.hshifter.select</code></p></td>      <td><p><code>E4A50350</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_parking_brake</code></p></td>      <td><p><code>truck.brake.parking</code></p></td>      <td><p><code>5664B035</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_motor_brake</code></p></td>      <td><p><code>truck.brake.motor</code></p></td>      <td><p><code>8E0C8ABA</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_retarder_level</code></p></td>      <td><p><code>truck.brake.retarder</code></p></td>      <td><p><code>A8D6B016</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_brake_air_pressure</code></p></td>      <td><p><code>truck.brake.air.pressure</code></p></td>      <td><p><code>9384DD05</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_brake_air_pressure_warning</code></p></td>      <td><p><code>truck.brake.air.pressure.warning</code></p></td>      <td><p><code>C58F8B5A</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_brake_air_pressure_emergency</code></p></td>      <td><p><code>truck.brake.air.pressure.emergency</code></p></td>      <td><p><code>78FAD40D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_brake_temperature</code></p></td>      <td><p><code>truck.brake.temperature</code></p></td>      <td><p><code>E1AE4E3F</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_fuel</code></p></td>      <td><p><code>truck.fuel.amount</code></p></td>      <td><p><code>C298DD2D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_fuel_warning</code></p></td>      <td><p><code>truck.fuel.warning</code></p></td>      <td><p><code>9D0FD9A2</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_fuel_average_consumption</code></p></td>      <td><p><code>truck.fuel.consumption.average</code></p></td>      <td><p><code>013149D4</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>**SCS_TELEMETRY_TRUCK_CHANNEL_adblue</code></p></td>      <td><p><code>truck.adblue</code></p></td>      <td><p><code>8D32829D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>**SCS_TELEMETRY_TRUCK_CHANNEL_adblue_warning</code></p></td>      <td><p><code>truck.adblue.warning</code></p></td>      <td><p><code>FF3464CB</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>**SCS_TELEMETRY_TRUCK_CHANNEL_adblue_average_consumption</code></p></td>      <td><p><code>truck.adblue.consumption.average</code></p></td>      <td><p><code>C253FC24</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_oil_pressure</code></p></td>      <td><p><code>truck.oil.pressure</code></p></td>      <td><p><code>A368F9A6</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_oil_pressure_warning</code></p></td>      <td><p><code>truck.oil.pressure.warning</code></p></td>      <td><p><code>1A1815C5</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_oil_temperature</code></p></td>      <td><p><code>truck.oil.temperature</code></p></td>      <td><p><code>405A67E9</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_water_temperature</code></p></td>      <td><p><code>truck.water.temperature</code></p></td>      <td><p><code>B8B46564</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_water_temperature_warning</code></p></td>      <td><p><code>truck.water.temperature.warning</code></p></td>      <td><p><code>783F3300</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_battery_voltage</code></p></td>      <td><p><code>truck.battery.voltage</code></p></td>      <td><p><code>91BB0105</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_battery_voltage_warning</code></p></td>      <td><p><code>truck.battery.voltage.warning</code></p></td>      <td><p><code>26000473</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_electric_enabled</code></p></td>      <td><p><code>truck.electric.enabled</code></p></td>      <td><p><code>9D4D7843</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_engine_enabled</code></p></td>      <td><p><code>truck.engine.enabled</code></p></td>      <td><p><code>FACA0BF9</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_lblinker</code></p></td>      <td><p><code>truck.lblinker</code></p></td>      <td><p><code>A7B8351B</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_rblinker</code></p></td>      <td><p><code>truck.rblinker</code></p></td>      <td><p><code>CE891602</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_lblinker</code></p></td>      <td><p><code>truck.light.lblinker</code></p></td>      <td><p><code>ECC0AC62</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_rblinker</code></p></td>      <td><p><code>truck.light.rblinker</code></p></td>      <td><p><code>85F18F7B</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_parking</code></p></td>      <td><p><code>truck.light.parking</code></p></td>      <td><p><code>6931D205</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_low_beam</code></p></td>      <td><p><code>truck.light.beam.low</code></p></td>      <td><p><code>612D677D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_high_beam</code></p></td>      <td><p><code>truck.light.beam.high</code></p></td>      <td><p><code>7E93DFB5</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_aux_front</code></p></td>      <td><p><code>truck.light.aux.front</code></p></td>      <td><p><code>D6464C43</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_aux_roof</code></p></td>      <td><p><code>truck.light.aux.roof</code></p></td>      <td><p><code>5ADBA32B</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_beacon</code></p></td>      <td><p><code>truck.light.beacon</code></p></td>      <td><p><code>990180CD</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_brake</code></p></td>      <td><p><code>truck.light.brake</code></p></td>      <td><p><code>E2790B7B</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_light_reverse</code></p></td>      <td><p><code>truck.light.reverse</code></p></td>      <td><p><code>71711168</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wipers</code></p></td>      <td><p><code>truck.wipers</code></p></td>      <td><p><code>EE7920A7</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_dashboard_backlight</code></p></td>      <td><p><code>truck.dashboard.backlight</code></p></td>      <td><p><code>91DA5D6D</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wear_engine</code></p></td>      <td><p><code>truck.wear.engine</code></p></td>      <td><p><code>D89A5F14</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wear_transmission</code></p></td>      <td><p><code>truck.wear.transmission</code></p></td>      <td><p><code>ABB45C97</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wear_cabin</code></p></td>      <td><p><code>truck.wear.cabin</code></p></td>      <td><p><code>49F699F6</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wear_chassis</code></p></td>      <td><p><code>truck.wear.chassis</code></p></td>      <td><p><code>BC2A6A7A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wear_wheels</code></p></td>      <td><p><code>truck.wear.wheels</code></p></td>      <td><p><code>7C35EF18</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_odometer</code></p></td>      <td><p><code>truck.odometer</code></p></td>      <td><p><code>F988B0E0</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_susp_deflection</code></p></td>      <td><p><code>truck.wheel.suspension.deflection</code></p></td>      <td><p><code>369CAB49</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_on_ground</code></p></td>      <td><p><code>truck.wheel.on_ground</code></p></td>      <td><p><code>CB522734</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_substance</code></p></td>      <td><p><code>truck.wheel.substance</code></p></td>      <td><p><code>4CC1BFEA</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_velocit</code></p></td>      <td><p><code>truck.wheel.angular_velocity</code></p></td>      <td><p><code>B7B25C28</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_steering</code></p></td>      <td><p><code>truck.wheel.steering</code></p></td>      <td><p><code>DF025731</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_rotation</code></p></td>      <td><p><code>truck.wheel.rotation</code></p></td>      <td><p><code>0ED73E5C</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_lift</code></p></td>      <td><p><code>truck.wheel.lift</code></p></td>      <td><p><code>F8BC370D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><code>SCS_TELEMETRY_TRUCK_CHANNEL_wheel_lift_offset</code></p></td>      <td><p><code>truck.wheel.lift.offset</code></p></td>      <td><p><code>046B7B44</code></p></td>    </tr>  </table>    <p> <code>*</code> - This constant does not actually exist (it was removed from telemetry SDK and replaced by <code>SCS_TELEMETRY_TRUCK_CHANNEL_cabin_offset</code> ).<br> <code>**</code> - These channels does not work in current SDK.<br> <br> Table of precomputed IDs for config names.<br> IDs are stored in constans whose identifiers corresponds to indetifiers of constants containing string value. For example, for name stored in constant <a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id\">SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id</a>, the ID is stored in constant <a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_substances_ATTRIBUTE_id\">SCS_TELEMETRY_CONFIG_ID_substances_ATTRIBUTE_id</a>. </p>    <table class=\"table_tag\">    <tr class=\"head\">      <th><p>Config name constant identifier</p></th>      <th><p>String value</p></th>      <th><p>Precomputed ID (hexadecimal)</p></th>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id\">SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id</a></p></td>      <td><p><code>substances.id</code></p></td>      <td><p><code>A1E920F4</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_controls_ATTRIBUTE_shifter_type\">SCS_TELEMETRY_CONFIG_controls_ATTRIBUTE_shifter_type</a></p></td>      <td><p><code>controls.shifter.type</code></p></td>      <td><p><code>37BA5313</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_selector_count\">SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_selector_count</a></p></td>      <td><p><code>hshifter.selector.count</code></p></td>      <td><p><code>AA57ECAD</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_gear\">SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_gear</a></p></td>      <td><p><code>hshifter.slot.gear</code></p></td>      <td><p><code>601E49BB</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_handle_position\">SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_handle_position</a></p></td>      <td><p><code>hshifter.slot.handle.position</code></p></td>      <td><p><code>4C2725D0</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_selectors\">SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_selectors</a></p></td>      <td><p><code>hshifter.slot.selectors</code></p></td>      <td><p><code>1705F155</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand_id\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand_id</a></p></td>      <td><p><code>truck.brand_id</code></p></td>      <td><p><code>CFEC235C</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand</a></p></td>      <td><p><code>truck.brand</code></p></td>      <td><p><code>5DF796E6</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_id\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_id</a></p></td>      <td><p><code>truck.id</code></p></td>      <td><p><code>93A67EA9</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_name\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_name</a></p></td>      <td><p><code>truck.name</code></p></td>      <td><p><code>FF36A0AD</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_capacity\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_capacity</a></p></td>      <td><p><code>truck.fuel.capacity</code></p></td>      <td><p><code>FFEA5570</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_warning_factor\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_warning_factor</a></p></td>      <td><p><code>truck.fuel.warning.factor</code></p></td>      <td><p><code>766BF114</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_adblue_capacity\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_adblue_capacity</a></p></td>      <td><p><code>truck.adblue.capacity</code></p></td>      <td><p><code>CBE6B731</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_warning\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_warning</a></p></td>      <td><p><code>truck.brake.air.pressure.warning</code></p></td>      <td><p><code>C58F8B5A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_emergency\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_emergency</a></p></td>      <td><p><code>truck.brake.air.pressure.emergency</code></p></td>      <td><p><code>78FAD40D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_oil_pressure_warning\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_oil_pressure_warning</a></p></td>      <td><p><code>truck.oil.pressure.warning</code></p></td>      <td><p><code>1A1815C5</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_water_temperature_warning\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_water_temperature_warning</a></p></td>      <td><p><code>truck.water.temperature.warning</code></p></td>      <td><p><code>783F3300</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_battery_voltage_warning\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_battery_voltage_warning</a></p></td>      <td><p><code>truck.battery.voltage.warning</code></p></td>      <td><p><code>26000473</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_rpm_limit\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_rpm_limit</a></p></td>      <td><p><code>truck.rpm.limit</code></p></td>      <td><p><code>96F2B46D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_forward_gear_count\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_forward_gear_count</a></p></td>      <td><p><code>truck.gears.forward</code></p></td>      <td><p><code>620CEB70</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_reverse_gear_count\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_reverse_gear_count</a></p></td>      <td><p><code>truck.gears.reverse</code></p></td>      <td><p><code>2FEA55E1</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_retarder_step_count\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_retarder_step_count</a></p></td>      <td><p><code>truck.retarder.steps</code></p></td>      <td><p><code>F8E36BF0</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_cabin_position\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_cabin_position</a></p></td>      <td><p><code>truck.cabin.position</code></p></td>      <td><p><code>E37B50B2</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_head_position\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_head_position</a></p></td>      <td><p><code>truck.head.position</code></p></td>      <td><p><code>59DED2CB</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_hook_position\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_hook_position</a></p></td>      <td><p><code>truck.hook.position</code></p></td>      <td><p><code>10944A21</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_count\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_count</a></p></td>      <td><p><code>truck.wheels.count</code></p></td>      <td><p><code>D634DC01</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_position\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_position</a></p></td>      <td><p><code>truck.wheel.position</code></p></td>      <td><p><code>61874258</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_steerable\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_steerable</a></p></td>      <td><p><code>truck.wheel.steerable</code></p></td>      <td><p><code>91817077</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_simulated\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_simulated</a></p></td>      <td><p><code>truck.wheel.simulated</code></p></td>      <td><p><code>27B8658F</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_radius\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_radius</a></p></td>      <td><p><code>truck.wheel.radius</code></p></td>      <td><p><code>60D54CB6</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_liftable\">SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_liftable</a></p></td>      <td><p><code>truck.wheel.liftable</code></p></td>      <td><p><code>3545511A</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_id\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_id</a></p></td>      <td><p><code>trailer.id</code></p></td>      <td><p><code>E3F34E9A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_cargo_accessory_id\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_cargo_accessory_id</a></p></td>      <td><p><code>trailer.cargo.accessory.id</code></p></td>      <td><p><code>7E792A8A</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_hook_position\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_hook_position</a></p></td>      <td><p><code>trailer.hook.position</code></p></td>      <td><p><code>5D7A70AD</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_count\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_count</a></p></td>      <td><p><code>trailer.wheels.count</code></p></td>      <td><p><code>8A6F0861</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_position\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_position</a></p></td>      <td><p><code>trailer.wheel.position</code></p></td>      <td><p><code>85C46369</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_steerable\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_steerable</a></p></td>      <td><p><code>trailer.wheel.steerable</code></p></td>      <td><p><code>C0BB336C</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_simulated\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_simulated</a></p></td>      <td><p><code>trailer.wheel.simulated</code></p></td>      <td><p><code>76822694</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_radius\">SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_radius</a></p></td>      <td><p><code>trailer.wheel.radius</code></p></td>      <td><p><code>3C8E98D6</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_id\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_id</a></p></td>      <td><p><code>job.cargo.id</code></p></td>      <td><p><code>5496B30A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo</a></p></td>      <td><p><code>job.cargo</code></p></td>      <td><p><code>FACC3465</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_mass\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_mass</a></p></td>      <td><p><code>job.cargo.mass</code></p></td>      <td><p><code>ADE913DA</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city_id\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city_id</a></p></td>      <td><p><code>job.destination.city.id</code></p></td>      <td><p><code>88567D8E</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city</a></p></td>      <td><p><code>job.destination.city</code></p></td>      <td><p><code>74BCA7CC</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company_id\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company_id</a></p></td>      <td><p><code>job.destination.company.id</code></p></td>      <td><p><code>AB6BFF9D</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company</a></p></td>      <td><p><code>job.destination.company</code></p></td>      <td><p><code>19761409</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city_id\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city_id</a></p></td>      <td><p><code>job.source.city.id</code></p></td>      <td><p><code>DA64182F</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city</a></p></td>      <td><p><code>job.source.city</code></p></td>      <td><p><code>34E0989A</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company_id\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company_id</a></p></td>      <td><p><code>job.source.company.id</code></p></td>      <td><p><code>A38C06FA</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company</a></p></td>      <td><p><code>job.source.company</code></p></td>      <td><p><code>4B4471A8</code></p></td>    </tr>    <tr class=\"odd\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_income\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_income</a></p></td>      <td><p><code>job.income</code></p></td>      <td><p><code>25B394CE</code></p></td>    </tr>    <tr class=\"even\">      <td><p><a class=\"normal\" href=\"TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_delivery_time\">SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_delivery_time</a></p></td>      <td><p><code>job.delivery.time</code></p></td>      <td><p><code>A604955F</code></p></td>    </tr>  </table>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryIDs.html"},
     {"title": "TelemetryIDs.ConfigFieldsSeparator", "text": " ", "tags": "", "loc": "TelemetryIDs.html#ConfigFieldsSeparator"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_substances_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_controls_ATTRIBUTE_shifter_type", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_controls_ATTRIBUTE_shifter_type"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_selector_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_selector_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_gear", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_gear"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_handle_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_handle_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_selectors", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_hshifter_ATTRIBUTE_slot_selectors"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_brand"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_name", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_name"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_capacity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_capacity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_warning_factor", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_fuel_warning_factor"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_adblue_capacity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_adblue_capacity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_emergency", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_air_pressure_emergency"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_oil_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_oil_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_water_temperature_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_water_temperature_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_battery_voltage_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_battery_voltage_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_rpm_limit", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_rpm_limit"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_forward_gear_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_forward_gear_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_reverse_gear_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_reverse_gear_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_retarder_step_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_retarder_step_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_cabin_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_cabin_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_head_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_head_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_hook_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_hook_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_steerable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_steerable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_simulated", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_simulated"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_radius", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_radius"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_liftable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_truck_ATTRIBUTE_wheel_liftable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_cargo_accessory_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_cargo_accessory_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_hook_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_hook_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_steerable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_steerable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_simulated", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_simulated"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_radius", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_trailer_ATTRIBUTE_wheel_radius"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_mass", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_cargo_mass"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_city"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_destination_company"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_city"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_source_company"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_income", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_income"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_delivery_time", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_job_ATTRIBUTE_delivery_time"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_substances_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_substances_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_controls_ATTRIBUTE_shifter_type", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_controls_ATTRIBUTE_shifter_type"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_selector_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_selector_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_gear", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_gear"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_handle_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_handle_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_selectors", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_hshifter_ATTRIBUTE_slot_selectors"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_brand_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_brand_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_brand", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_brand"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_name", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_name"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_fuel_capacity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_fuel_capacity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_fuel_warning_factor", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_fuel_warning_factor"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_adblue_capacity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_adblue_capacity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_air_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_air_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_air_pressure_emergency", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_air_pressure_emergency"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_oil_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_oil_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_water_temperature_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_water_temperature_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_battery_voltage_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_battery_voltage_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_rpm_limit", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_rpm_limit"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_forward_gear_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_forward_gear_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_reverse_gear_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_reverse_gear_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_retarder_step_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_retarder_step_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_cabin_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_cabin_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_head_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_head_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_hook_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_hook_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_steerable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_steerable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_simulated", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_simulated"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_radius", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_radius"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_liftable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_truck_ATTRIBUTE_wheel_liftable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_cargo_accessory_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_cargo_accessory_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_hook_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_hook_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_count", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_count"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_position", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_position"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_steerable", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_steerable"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_simulated", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_simulated"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_radius", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_trailer_ATTRIBUTE_wheel_radius"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo_mass", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_cargo_mass"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_city_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_city_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_city", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_city"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_company_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_company_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_company", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_destination_company"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_city_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_city_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_city", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_city"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_company_id", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_company_id"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_company", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_source_company"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_income", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_income"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_delivery_time", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CONFIG_ID_job_ATTRIBUTE_delivery_time"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CHANNEL_ID_local_scale", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CHANNEL_ID_local_scale"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CHANNEL_ID_game_time", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CHANNEL_ID_game_time"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_CHANNEL_ID_next_rest_stop", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_CHANNEL_ID_next_rest_stop"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_connected", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_connected"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_world_placement", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_world_placement"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_linear_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_linear_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_angular_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_angular_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_linear_acceleration", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_linear_acceleration"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_angular_acceleration", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_local_angular_acceleration"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wear_chassis", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wear_chassis"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_susp_deflection", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_susp_deflection"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_on_ground", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_on_ground"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_substance", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_substance"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_steering", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_steering"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_rotation", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRAILER_CHANNEL_ID_wheel_rotation"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_world_placement", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_world_placement"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_linear_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_linear_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_angular_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_angular_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_linear_acceleration", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_linear_acceleration"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_angular_acceleration", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_local_angular_acceleration"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_orientation", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_orientation"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_offset", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_offset"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_angular_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_angular_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_angular_acceleration", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_cabin_angular_acceleration"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_head_offset", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_head_offset"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_speed", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_speed"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_rpm", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_rpm"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_gear", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_gear"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_steering", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_steering"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_throttle", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_throttle"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_brake", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_brake"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_clutch", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_input_clutch"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_steering", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_steering"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_throttle", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_throttle"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_brake", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_brake"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_clutch", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_effective_clutch"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_cruise_control", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_cruise_control"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_hshifter_slot", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_hshifter_slot"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_hshifter_selector", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_hshifter_selector"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_parking_brake", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_parking_brake"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_motor_brake", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_motor_brake"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_retarder_level", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_retarder_level"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_temperature", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_temperature"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure_emergency", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_brake_air_pressure_emergency"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel_average_consumption", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_fuel_average_consumption"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue_average_consumption", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_adblue_average_consumption"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_pressure", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_pressure"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_pressure_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_pressure_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_temperature", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_oil_temperature"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_water_temperature", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_water_temperature"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_water_temperature_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_water_temperature_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_battery_voltage", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_battery_voltage"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_battery_voltage_warning", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_battery_voltage_warning"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_electric_enabled", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_electric_enabled"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_enabled", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_engine_enabled"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_lblinker", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_lblinker"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_rblinker", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_rblinker"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_parking", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_parking"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_rblinker", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_rblinker"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_lblinker", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_lblinker"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_low_beam", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_low_beam"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_high_beam", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_high_beam"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_aux_front", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_aux_front"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_aux_roof", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_aux_roof"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_beacon", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_beacon"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_brake", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_brake"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_reverse", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_light_reverse"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wipers", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wipers"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_dashboard_backlight", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_dashboard_backlight"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_engine", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_engine"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_transmission", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_transmission"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_cabin", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_cabin"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_chassis", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_chassis"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_wheels", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wear_wheels"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_odometer", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_odometer"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_susp_deflection", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_susp_deflection"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_on_ground", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_on_ground"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_substance", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_substance"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_velocity", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_velocity"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_steering", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_steering"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_rotation", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_rotation"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_lift", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_lift"},
     {"title": "TelemetryIDs.SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_lift_offset", "text": " ", "tags": "", "loc": "TelemetryIDs.html#SCS_TELEMETRY_TRUCK_CHANNEL_ID_wheel_lift_offset"},
     {"title": "TelemetryIDs.GetItemID", "text": " At the moment, identifiers are implemented as CRC32 checksum of given item name (string).    <p>    <p>  Item Item name. Item identification number. ", "tags": "", "loc": "TelemetryIDs.html#GetItemID"},
     {"title": "TelemetryIDs.ItemIDToStr", "text": "    <p>    <p>  ID Item ID to be converted to text. Textual representation of passed ID. ", "tags": "", "loc": "TelemetryIDs.html#ItemIDToStr"},
     {"title": "TelemetryIDs.InitializeItemsIDs", "text": " When you call this routine, it recalculates all ID constants. Use it only when you truly need this recalculation.<br> It is called automatically in initialization section of this unit when neither of <code>PrecomputedItemID</code> and <code>ManualItemIDCompute</code> switches is defined.    ", "tags": "", "loc": "TelemetryIDs.html#InitializeItemsIDs"},
     {"title": "TelemetryIDs.ConfigMergeIDAndAttribute", "text": "    <p>     <p>  ConfigID ID of configuration. AttributeName Name of attribute. Full config name. ", "tags": "", "loc": "TelemetryIDs.html#ConfigMergeIDAndAttribute"},
     {"title": "TelemetryIDs.ConfigRemoveIDFromName", "text": " <b>Note</b> - function does not control whether passed name truly starts with given config ID. It simply removes number of characters corresponding to length of config ID from the start of config name.    <p>     <p>  ConfigName Name of config from which ID should be removed. ConfigID ID that has be removed from passed config name. Config name with removed ID. ", "tags": "", "loc": "TelemetryIDs.html#ConfigRemoveIDFromName"},
     {"title": "TelemetryIDs.TItemID", "text": " All other item identifiers are of this type. ", "tags": "", "loc": "TelemetryIDs.html#TItemID"},
     {"title": "TelemetryIDs.PItemID", "text": " ", "tags": "", "loc": "TelemetryIDs.html#PItemID"},
     {"title": "TelemetryIDs.TChannelID", "text": " ", "tags": "", "loc": "TelemetryIDs.html#TChannelID"},
     {"title": "TelemetryIDs.PChannelID", "text": " ", "tags": "", "loc": "TelemetryIDs.html#PChannelID"},
     {"title": "TelemetryIDs.TConfigID", "text": " ", "tags": "", "loc": "TelemetryIDs.html#TConfigID"},
     {"title": "TelemetryIDs.PConfigID", "text": " ", "tags": "", "loc": "TelemetryIDs.html#PConfigID"},
     {"title": "TelemetryInfoProvider", "text": "<hr>        <p><b>TelemetryInfoProvider</b>    <p>©František Milt, all rights reserved.    <p>This unit contains <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> class (see class declaration for details).    <p>Last change: 2015-06-28    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2013-10-07 - First stable version.</p></li>    <li><p>2014-04-15 - Type of parameter <code>Name</code> in method <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType\">TTelemetryInfoProvider.ChannelGetValueType</a> changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-04-18 - Result type of method <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#EventGetName\">TTelemetryInfoProvider.EventGetName</a> changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-04-27 - Added constructor mehod <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#CreateCurrent\">TTelemetryInfoProvider.CreateCurrent</a>.</p></li>    <li><p>2014-05-04 - Following callback functions were added:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryInfoProvider.html#InfoProviderGetChannelIDFromName\">InfoProviderGetChannelIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryInfoProvider.html#InfoProviderGetChannelNameFromID\">InfoProviderGetChannelNameFromID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryInfoProvider.html#InfoProviderGetConfigIDFromName\">InfoProviderGetConfigIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryInfoProvider.html#InfoProviderGetConfigNameFromID\">InfoProviderGetConfigNameFromID</a></p></li>  </ul>    <p></p></li>    <li><p>2014-10-23 - Added support for eut2 1.9.</p></li>    <li><p>2014-10-24 - Type of paramter <code>GameID</code> in first parametrized constructor of class <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-11-07 - Added support for eut2 1.10.</p></li>    <li><p>2014-11-07 - Implementation changes (new channels are not inserted to the lists, they are only added).</p></li>    <li><p>2014-11-24 - Changes due to a new system of storing and passing secondary types of channel value. These changes include: </p>    <ul class=\"compact_spacing\">    <li><p>Reimplemented method <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType\">TTelemetryInfoProvider.ChannelGetValueType</a></p></li>    <li><p>Added new variant of method <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType\">TTelemetryInfoProvider.ChannelGetValueType</a></p></li>    <li><p>Reimplemented all additions of known channels to the list</p></li>  </ul>    <p></p></li>    <li><p>2015-06-28 - Type <a class=\"normal\" href=\"TelemetryInfoProvider.html#TChannelValueTypePriority\">TChannelValueTypePriority</a> and method <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType\">TTelemetryInfoProvider.ChannelGetValueType</a> that is using this type in one of its parameters are now both marked as deprecated.</p></li>    <li><p>2015-06-28 - Removed file inclusion, all content moved directly into this unit.</p></li>  </ul>    <p>    <p>ToDo:</p>    <ul class=\"paragraph_spacing\">    <li><p>Add capability for loading information from file (text, ini, resources).</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryInfoProvider.html"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider", "text": "    <p>It can be created in two ways, user managed or automatically managed.<br> When created as user managed (using no-paramater constructor), the object is created with empty lists and it is up to the user to fill them (use methods of individual lists to do so).<br> When automatically managed (object is created using parametrized constructor), the telemetry and game versions are passed to the constructor and it checks whether they are supported or not. If they are, the lists are filled accordingly to them, if they are not supported, the constructor raises an exception. ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.fUserManaged", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#fUserManaged"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.fKnownEvents", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#fKnownEvents"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.fKnownChannels", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#fKnownChannels"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.fKnownConfigs", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#fKnownConfigs"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Telemetry_1_0", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Telemetry_1_0"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_0", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_0"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_1", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_1"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_2", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_2"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_4", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_4"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_9", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_9"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Prepare_Game_eut2_1_10", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Prepare_Game_eut2_1_10"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Create", "text": " Lists of known items are created empty.    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Create"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Create", "text": "    <p>    TelemetryVersion Version of telemetry. GameID Game identifier. GameVersion Version of game.  ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Create"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Create", "text": "    <p>   TelemetryVersion Version of telemetry. Parameters Structure containing other necessary game and version informations.  ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Create"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.CreateCurrent", "text": " It actually calls parametrized constructor with parameter <code>TelemetryVersion</code> set to value returned by function <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionObject.html#HighestSupportedTelemetryVersion\">HighestSupportedTelemetryVersion</a>, <code>GameID</code> set to passed game id and <code>GameVersion</code> set to value returned by function <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionObject.html#HighestSupportedGameVersion\">HighestSupportedGameVersion</a>.    <p>  GameID Game identifier.  ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#CreateCurrent"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Destroy", "text": "    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Destroy"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.Clear", "text": " When it is called on automatically managed object, it does nothing.    ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#Clear"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.EventGetName", "text": " not defined by the API) name of passed event.    <p>    <p>  Event Event whose name is requested. Name of given event or an empty string when no such event is known. ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#EventGetName"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.ChannelGetValueType", "text": "    <p>     <p>  Name Name of requested channel. TypePriority Priority of value type that should be returned. Type of value for selected channel and priority. When requested channel is not found, <code>SCS_VALUE_TYPE_INVALID</code> is returned. ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.ChannelGetValueType", "text": "    <p>     <p>  Name Name of requested channel. TypePriority Priority of value type that should be returned. It must be a number from interval &lt;0,33), if it is not from this interval, SCS_VALUE_TYPE_INVALID is returned.<br> 0 corresponds to primary value type, 1 to first secondary type, 2 to second secondary type and so on. If selected type is beyond what a given channel can support (eg. 5 for channel with only one secondary type), SCS_VALUE_TYPE_INVALID is returned. Type of value for selected channel and priority. When requested channel is not found, <code>SCS_VALUE_TYPE_INVALID</code> is returned. ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#ChannelGetValueType"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.UserManaged", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#UserManaged"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.KnownEvents", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#KnownEvents"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.KnownChannels", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#KnownChannels"},
     {"title": "TelemetryInfoProvider.TTelemetryInfoProvider.KnownConfigs", "text": " ", "tags": "", "loc": "TelemetryInfoProvider.TTelemetryInfoProvider.html#KnownConfigs"},
     {"title": "TelemetryInfoProvider.InfoProviderGetChannelIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object.    <p>     <p>  Name Channel name to be converted to ID. TelemetryInfoProvider <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object that will be used for actual conversion. Channel ID obtained from passed name. ", "tags": "", "loc": "TelemetryInfoProvider.html#InfoProviderGetChannelIDFromName"},
     {"title": "TelemetryInfoProvider.InfoProviderGetChannelNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object.    <p>     <p>  ID Channel ID to be converted to name. TelemetryInfoProvider <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object that will be used for actual conversion. Channel name obtained from passed ID. ", "tags": "", "loc": "TelemetryInfoProvider.html#InfoProviderGetChannelNameFromID"},
     {"title": "TelemetryInfoProvider.InfoProviderGetConfigIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object.    <p>     <p>  Name Config name to be converted to ID. TelemetryInfoProvider <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object that will be used for actual conversion. Config ID obtained from passed name. ", "tags": "", "loc": "TelemetryInfoProvider.html#InfoProviderGetConfigIDFromName"},
     {"title": "TelemetryInfoProvider.InfoProviderGetConfigNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object.    <p>     <p>  ID Config ID to be converted to name. TelemetryInfoProvider <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> object that will be used for actual conversion. Config name obtained from passed ID. ", "tags": "", "loc": "TelemetryInfoProvider.html#InfoProviderGetConfigNameFromID"},
     {"title": "TelemetryInfoProvider.TChannelValueTypePriority", "text": "     cvtpPrimary Basic value type.   cvtpSecondary Second used type (e.g.  double for float types, u64 for u32, ...).  cvtpTertiary Third type (e.g.  euler for [f/d]placement). ", "tags": "", "loc": "TelemetryInfoProvider.html#TChannelValueTypePriority"},
     {"title": "TelemetryLists", "text": "<hr>        <p><b>TelemetryLists</b>    <p>©František Milt, all rights reserved.    <p>Classes in this unit (for details, refer to declaration of individual class): </p>    <pre class=\"preformatted\">    TCustomTelemetryList     |- TKnownEventsList     |- TKnownChannelsList     |- TKnownConfigsList     |- TRegisteredEventsList     |- TRegisteredChannelsList     |- TStoredConfigsList     |- TStoredChannelsList  </pre>    <p> Last change: 2015-06-27    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2013-10-04 - First stable version.</p></li>    <li><p>2014-04-07 - Type of parameter <code>Item</code> in function <a class=\"normal\" href=\"TelemetryIDs.html#GetItemID\">GetItemID</a> changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-04-07 - Field type changed to <code>TelemetryString</code> in following cases:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEvent.html#Name\">TKnownEvent.Name</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannel.html#Name\">TKnownChannel.Name</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannel.html#IndexConfig\">TKnownChannel.IndexConfig</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfig.html#Name\">TKnownConfig.Name</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TChannelInfo.html#Name\">TChannelInfo.Name</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredConfig.html#Name\">TStoredConfig.Name</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredChannel.html#Name\">TStoredChannel.Name</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-07 - Type of parameters <code>Name</code> and <code>IndexConfig</code> changed to <code>TelemetryString</code> in following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#IndexOf\">TKnownEventsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#Add\">TKnownEventsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#ReplaceIndex\">TKnownEventsList.ReplaceIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#Replace\">TKnownEventsList.Replace</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#Insert\">TKnownEventsList.Insert</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#IndexOf\">TKnownChannelsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Add\">TKnownChannelsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#ReplaceIndex\">TKnownChannelsList.ReplaceIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Replace\">TKnownChannelsList.Replace</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Insert\">TKnownChannelsList.Insert</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Remove\">TKnownChannelsList.Remove</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#ChannelIndexConfigID\">TKnownChannelsList.ChannelIndexConfigID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#ChannelNameToID\">TKnownChannelsList.ChannelNameToID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#IndexOf\">TKnownConfigsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#Add\">TKnownConfigsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#ReplaceIndex\">TKnownConfigsList.ReplaceIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#Replace\">TKnownConfigsList.Replace</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#Insert\">TKnownConfigsList.Insert</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#Remove\">TKnownConfigsList.Remove</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#IsBinded\">TKnownConfigsList.IsBinded</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#IsIndexed\">TKnownConfigsList.IsIndexed</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#ConfigNameToID\">TKnownConfigsList.ConfigNameToID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#IndexOf\">TRegisteredChannelsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#Add\">TRegisteredChannelsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#Remove\">TRegisteredChannelsList.Remove</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#CreateContext\">TRegisteredChannelsList.CreateContext</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredConfigsList.html#IndexOf\">TStoredConfigsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredConfigsList.html#Add\">TStoredConfigsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredConfigsList.html#Remove\">TStoredConfigsList.Remove</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredConfigsList.html#ChangeConfigValue\">TStoredConfigsList.ChangeConfigValue</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredChannelsList.html#IndexOf\">TStoredChannelsList.IndexOf</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TStoredChannelsList.html#StoreChannelValue\">TStoredChannelsList.StoreChannelValue</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-07 - Result type changed to <code>TelemetryString</code> for following methods:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#ChannelIDToName\">TKnownChannelsList.ChannelIDToName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#ConfigIDToName\">TKnownConfigsList.ConfigIDToName</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-11 - Added multicast event <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChangeMulti\">TCustomTelemetryList.OnChangeMulti</a>.</p></li>    <li><p>2014-04-13 - Name of the class <code>TStoredChannelValuesList</code> changed to <code>TStoredChannelsValuesList</code>.</p></li>    <li><p>2014-04-14 - <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html\">TKnownConfigsList</a> class now stores fully qualified configuration value names instead of just attribute names.</p></li>    <li><p>2014-04-15 - Declarations of following types were moved to unit <a class=\"normal\" href=\"TelemetryIDs.html\">TelemetryIDs</a>:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#TItemID\">TItemID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#PItemID\">PItemID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#TChannelID\">TChannelID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#PChannelID\">PChannelID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#TConfigID\">TConfigID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryIDs.html#PConfigID\">PConfigID</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-15 - Function <a class=\"normal\" href=\"TelemetryIDs.html#GetItemID\">GetItemID</a> was moved to unit <a class=\"normal\" href=\"TelemetryIDs.html\">TelemetryIDs</a>.</p></li>    <li><p>2014-05-04 - Following callback functions were added:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.html#GetChannelIDFromName\">GetChannelIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.html#GetChannelNameFromID\">GetChannelNameFromID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.html#GetConfigIDFromName\">GetConfigIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.html#GetConfigNameFromID\">GetConfigNameFromID</a></p></li>  </ul>    <p></p></li>    <li><p>2014-06-07 - Added field <code>MaxIndex</code> to <a class=\"normal\" href=\"TelemetryLists.TKnownChannel.html\">TKnownChannel</a> record.</p></li>    <li><p>2014-11-05 - Added field <code>UserData</code> to <a class=\"normal\" href=\"TelemetryLists.TEventContext.html\">TEventContext</a> and <a class=\"normal\" href=\"TelemetryLists.TChannelContext.html\">TChannelContext</a>.</p></li>    <li><p>2014-11-05 - Added <a class=\"normal\" href=\"TelemetryLists.html#TUserDataFreeEvent\">TUserDataFreeEvent</a> event type.</p></li>    <li><p>2014-11-05 - Added following fields, methods and properties: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#fOnUserDataFree\">TRegisteredEventsList.fOnUserDataFree</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#DoOnUserDataFree\">TRegisteredEventsList.DoOnUserDataFree</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#OnUserDataFree\">TRegisteredEventsList.OnUserDataFree</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#fOnUserDataFree\">TRegisteredChannelsList.fOnUserDataFree</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#DoOnUserDataFree\">TRegisteredChannelsList.DoOnUserDataFree</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#OnUserDataFree\">TRegisteredChannelsList.OnUserDataFree</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Added parameter <code>UserData</code> to following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#Add\">TRegisteredEventsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#CreateContext\">TRegisteredEventsList.CreateContext</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#Add\">TRegisteredChannelsList.Add</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#CreateContext\">TRegisteredChannelsList.CreateContext</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Small implementation changes.</p></li>    <li><p>2014-11-24 - Changes due to a new system of storing and passing secondary types of channel value. These changes include: </p>    <ul class=\"compact_spacing\">    <li><p>Fields <code>SecondaryType</code> and <code>TertiaryType</code> in structure <a class=\"normal\" href=\"TelemetryLists.TKnownChannel.html\">TKnownChannel</a> replaced by field <a class=\"normal\" href=\"TelemetryLists.TKnownChannel.html#SecondaryTypes\">SecondaryTypes</a></p></li>    <li><p>Added new variants of method <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Add\">TKnownChannelsList.Add</a></p></li>    <li><p>Added new variants of method <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#ReplaceIndex\">TKnownChannelsList.ReplaceIndex</a></p></li>    <li><p>Added new variants of method <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Replace\">TKnownChannelsList.Replace</a></p></li>    <li><p>Added new variants of method <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Insert\">TKnownChannelsList.Insert</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-26 - Added 64bit ASM code for function <a class=\"normal\" href=\"TelemetryLists.html#GetMasterID\">GetMasterID</a>.</p></li>    <li><p>2015-06-27 - Renamed following constants:</p>    <ul class=\"compact_spacing\">    <li><p>cEmptyKnownEvent renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyKnownEvent\">EmptyKnownEvent</a></p></li>    <li><p>cEmptyKnownChannel renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyKnownChannel\">EmptyKnownChannel</a></p></li>    <li><p>cEmptyKnownConfig renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyKnownConfig\">EmptyKnownConfig</a></p></li>    <li><p>cEmptyEventInfo renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyEventInfo\">EmptyEventInfo</a></p></li>    <li><p>cEmptyChannelInfo renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyChannelInfo\">EmptyChannelInfo</a></p></li>    <li><p>cEmptyStoredConfig renamed to <a class=\"normal\" href=\"TelemetryLists.html#EmptyStoredConfig\">EmptyStoredConfig</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-27 - Small implementation changes.</p></li>    <li><p>2015-06-27 - <code>TStoredChannelsValuesList</code> class renamed to <a class=\"normal\" href=\"TelemetryLists.TStoredChannelsList.html\">TStoredChannelsList</a>.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryLists.html"},
     {"title": "TelemetryLists.TCustomTelemetryList", "text": "    <p><code>TCustomTelemetryList</code> serves as ancestor for all other list classes declared in this unit. It wrapps around TList class and adds methods used for easier list management in descendant classes. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html"},
     {"title": "TelemetryLists.TCustomTelemetryList.fMainList", "text": " It is not publicly visible and is therefore managed automatically. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#fMainList"},
     {"title": "TelemetryLists.TCustomTelemetryList.fUpdating", "text": " ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#fUpdating"},
     {"title": "TelemetryLists.TCustomTelemetryList.fOnChange", "text": " ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#fOnChange"},
     {"title": "TelemetryLists.TCustomTelemetryList.fOnChangeMulti", "text": " ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#fOnChangeMulti"},
     {"title": "TelemetryLists.TCustomTelemetryList.GetCount", "text": "    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#GetCount"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrGetItem", "text": "    <p>    <p>  Index Index of requested item in list. Item at position given by <code>Index</code>. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrGetItem"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrIndexOf", "text": "    <p>    <p>  Item Item (pointer) whose index is requested. Index of passed item in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrIndexOf"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrAdd", "text": " Added item can be <code>Nil</code>.<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> when addition is successful.    <p>    <p>  Item New item to be added to the list. Index at which the new item was put, -1 when the operation failed. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrAdd"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrReplace", "text": " Item can be <code>Nil</code>. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> when item is successfully replaced.    <p>   Index Index of item that has to be replaced. Item New walue of the replaced item.)  ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrReplace"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrInsert", "text": " List <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. <code>Item</code> can be <code>Nil</code>. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> when item is successfully inserted.    <p>   Index Index at which the new item should be added. Item Inserted item.  ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrInsert"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrRemove", "text": " <code>Item</code> should not be, but can be <code>Nil</code>. When given item is not found in list, nothing is removed and the function fails with no error (-1 is returned). If the list contains more than one copy of the removed item, only the first occurence is removed.<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> when item is successfully removed.    <p>    <p>  Item Item that has to be removed. Index at which the removed item was place before removal, -1 whem given item was not found in the list. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrRemove"},
     {"title": "TelemetryLists.TCustomTelemetryList.PtrDelete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> when item is successfully deleted.    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#PtrDelete"},
     {"title": "TelemetryLists.TCustomTelemetryList.Create", "text": "    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#Create"},
     {"title": "TelemetryLists.TCustomTelemetryList.Destroy", "text": "    <p><b>Note:</b> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is not called.    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#Destroy"},
     {"title": "TelemetryLists.TCustomTelemetryList.BeginUpdate", "text": "    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#BeginUpdate"},
     {"title": "TelemetryLists.TCustomTelemetryList.EndUpdate", "text": "    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#EndUpdate"},
     {"title": "TelemetryLists.TCustomTelemetryList.DoChange", "text": "    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#DoChange"},
     {"title": "TelemetryLists.TCustomTelemetryList.Clear", "text": " Only deletes stored pointers, allocated memory they are pointing to is not freed. Override this method in descendants to free memory used by items (put inherited code at the end).<br> Calls method <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> after all items are deleted.    ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#Clear"},
     {"title": "TelemetryLists.TCustomTelemetryList.Count", "text": " ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#Count"},
     {"title": "TelemetryLists.TCustomTelemetryList.OnChange", "text": " It can also be called manually by calling <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> method. It is NOT called when <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#fUpdating\">fUpdating</a> is set to <code>True</code> (but can be still called directly if handler is assigned). ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#OnChange"},
     {"title": "TelemetryLists.TCustomTelemetryList.OnChangeMulti", "text": " It can also be called manually by calling <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#DoChange\">DoChange</a> method. It is NOT called when <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#fUpdating\">fUpdating</a> is set to <code>True</code> (but can be still called directly).<br> Assigning handlers to this event does not interfere with normal <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event.<br> Normal <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called first, handlers of this event are called afterwards. ", "tags": "", "loc": "TelemetryLists.TCustomTelemetryList.html#OnChangeMulti"},
     {"title": "TelemetryLists.TKnownEvent", "text": "    <p>    ", "tags": "", "loc": "TelemetryLists.TKnownEvent.html"},
     {"title": "TelemetryLists.TKnownEvent.Event", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownEvent.html#Event"},
     {"title": "TelemetryLists.TKnownEvent.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownEvent.html#Name"},
     {"title": "TelemetryLists.TKnownEvent.Valid", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownEvent.html#Valid"},
     {"title": "TelemetryLists.TKnownEvent.Utility", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownEvent.html#Utility"},
     {"title": "TelemetryLists.TKnownEventsList", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html"},
     {"title": "TelemetryLists.TKnownEventsList.GetKnownEventPointer", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#GetKnownEventPointer"},
     {"title": "TelemetryLists.TKnownEventsList.GetKnownEvent", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#GetKnownEvent"},
     {"title": "TelemetryLists.TKnownEventsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Clear"},
     {"title": "TelemetryLists.TKnownEventsList.IndexOf", "text": " When the event is not found, -1 is returned.    <p>    <p>  Event Event whose index is requested. Index of requested event, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownEventsList.IndexOf", "text": " When event with that name is not found, -1 is returned.    <p>    <p>  Name Name of the event whose index is requested. Index of event with requested name, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownEventsList.Add", "text": "    <p>       <p>  Event Event identification number. Name Name of added event. Valid Flag denoting whether added event is marked as valid. Utility Flag denoting whether added event is marked as utility. Index at which the new event was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Add"},
     {"title": "TelemetryLists.TKnownEventsList.ReplaceIndex", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>      Index Index of item that has to be replaced. Event Replacement event identification number. Name Name of replacement event. Valid Flag denoting whether replacement event is marked as valid. Utility Flag denoting whether replacement event is marked as utility.  ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#ReplaceIndex"},
     {"title": "TelemetryLists.TKnownEventsList.Replace", "text": " When this old event is not found in the list, nothing happens and the method returns -1.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>        <p>  OldEvent Identification number of event that has to be replaced. Event Replacement event identification number. Name Name of replacement event. Valid Flag denoting whether replacement event is marked as valid. Utility Flag denoting whether replacement event is marked as utility. Index of event that was replaced, -1 when such event was not found. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Replace"},
     {"title": "TelemetryLists.TKnownEventsList.Insert", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful insertion.    <p>        <p>  Index Position where the new event should be inserted. Event Event identification number. Name Name of event. Valid Flag denoting whether event is marked as valid. Utility Flag denoting whether event is marked as utility. Actual position where the new event was inserted. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Insert"},
     {"title": "TelemetryLists.TKnownEventsList.Remove", "text": " When this event is not found in the list, method returns -1 and nothing is removed.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful removal.    <p>    <p>  Event Identification number of event that has to be removed from the list. Index of item that was removed, -1 when requested event was not found. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Remove"},
     {"title": "TelemetryLists.TKnownEventsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Delete"},
     {"title": "TelemetryLists.TKnownEventsList.IsValid", "text": "    <p>    <p>  Event Identification number of requested event. Validity of requested event. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#IsValid"},
     {"title": "TelemetryLists.TKnownEventsList.IsUtility", "text": "    <p>    <p>  Event Identification number of requested event. Utility state of requested event. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#IsUtility"},
     {"title": "TelemetryLists.TKnownEventsList.Pointers", "text": " Use it for direct access to individual stored items.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TKnownEventsList.html#Events\">Events</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Pointers"},
     {"title": "TelemetryLists.TKnownEventsList.Events", "text": " Use it to obtain values of individual stored items. ", "tags": "", "loc": "TelemetryLists.TKnownEventsList.html#Events"},
     {"title": "TelemetryLists.TKnownChannel", "text": "    <p>        ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html"},
     {"title": "TelemetryLists.TKnownChannel.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#Name"},
     {"title": "TelemetryLists.TKnownChannel.ID", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#ID"},
     {"title": "TelemetryLists.TKnownChannel.PrimaryType", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#PrimaryType"},
     {"title": "TelemetryLists.TKnownChannel.SecondaryTypes", "text": " For details about how they are stored, refer to description of type <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#TValueTypeBitmask\">TValueTypeBitmask</a>. ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#SecondaryTypes"},
     {"title": "TelemetryLists.TKnownChannel.Indexed", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#Indexed"},
     {"title": "TelemetryLists.TKnownChannel.IndexConfig", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#IndexConfig"},
     {"title": "TelemetryLists.TKnownChannel.IndexConfigID", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#IndexConfigID"},
     {"title": "TelemetryLists.TKnownChannel.MaxIndex", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannel.html#MaxIndex"},
     {"title": "TelemetryLists.TKnownChannelsList", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html"},
     {"title": "TelemetryLists.TKnownChannelsList.GetKnownChannelPointer", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#GetKnownChannelPointer"},
     {"title": "TelemetryLists.TKnownChannelsList.GetKnownChannel", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#GetKnownChannel"},
     {"title": "TelemetryLists.TKnownChannelsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Clear"},
     {"title": "TelemetryLists.TKnownChannelsList.IndexOf", "text": " When the channel is not found, -1 is returned.    <p>    <p>  Name Name of the requested channel. Index of channel with requested name, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownChannelsList.IndexOf", "text": " When channel with that ID is not found, -1 is returned.    <p>    <p>  ID ID of channel whose index is requested. Index of channel with requested ID, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownChannelsList.Add", "text": "    <p>        <p>  Name Name of added channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryTypes Bitmask with secondary value types this channel can provide. Indexed Flag denoting whether added channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index at which the new channel was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Add"},
     {"title": "TelemetryLists.TKnownChannelsList.Add", "text": "    <p>       <p>  Name Name of added channel (ID is calculated from it). PrimaryType Primary type of value for this channel. Indexed Flag denoting whether added channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index at which the new channel was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Add"},
     {"title": "TelemetryLists.TKnownChannelsList.Add", "text": "    <p>         <p>  Name Name of added channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryType Secondary (first secondary) type of value for this channel. TertiaryType Tertiary (second secondary) type of value for this channel. Indexed Flag denoting whether added channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index at which the new channel was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Add"},
     {"title": "TelemetryLists.TKnownChannelsList.ReplaceIndex", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>       Index Index of item that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryTypes Bitmask with secondary value types this channel can provide. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed.  ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ReplaceIndex"},
     {"title": "TelemetryLists.TKnownChannelsList.ReplaceIndex", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#SecondaryValueTypesBitmask\">SecondaryValueTypesBitmask</a> whose parameter <code>PrimaryValueType</code> is set from corresponding parameter of this method.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>      Index Index of item that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed.  ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ReplaceIndex"},
     {"title": "TelemetryLists.TKnownChannelsList.ReplaceIndex", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#ValueTypesBitmask\">ValueTypesBitmask</a> whose parameter <code>ValueTypes</code> consists of values passed in parameters <code>SecondaryType</code> and <code>TertiaryType</code>.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>        Index Index of item that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryType Secondary (first secondary) type of value for this channel. TertiaryType Tertiary (second secondary) type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed.  ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ReplaceIndex"},
     {"title": "TelemetryLists.TKnownChannelsList.Replace", "text": " When this channel is not found in the list, nothing happens and the method returns -1.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>         <p>  OldEvent Identification number of channel that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryTypes Bitmask with secondary value types this channel can provide. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index of channel that was replaced, -1 when old channel was not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Replace"},
     {"title": "TelemetryLists.TKnownChannelsList.Replace", "text": " When this channel is not found in the list, nothing happens and the method returns -1.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#SecondaryValueTypesBitmask\">SecondaryValueTypesBitmask</a> whose parameter <code>PrimaryValueType</code> is set from corresponding parameter of this method.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>        <p>  OldEvent Identification number of channel that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index of channel that was replaced, -1 when old channel was not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Replace"},
     {"title": "TelemetryLists.TKnownChannelsList.Replace", "text": " When this channel is not found in the list, nothing happens and the method returns -1.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#ValueTypesBitmask\">ValueTypesBitmask</a> whose parameter <code>ValueTypes</code> consists of values passed in parameters <code>SecondaryType</code> and <code>TertiaryType</code>.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>          <p>  OldEvent Identification number of channel that has to be replaced. Name Name of replacement channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryType Secondary (first secondary) type of value for this channel. TertiaryType Tertiary (second secondary) type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Index of channel that was replaced, -1 when old channel was not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Replace"},
     {"title": "TelemetryLists.TKnownChannelsList.Insert", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful insertion.    <p>         <p>  Index Position where the new channel should be inserted. Name Name of inserted channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryTypes Bitmask with secondary value types this channel can provide. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Actual position where the new channel was inserted. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Insert"},
     {"title": "TelemetryLists.TKnownChannelsList.Insert", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#SecondaryValueTypesBitmask\">SecondaryValueTypesBitmask</a> whose parameter <code>PrimaryValueType</code> is set from corresponding parameter of this method.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful insertion.    <p>        <p>  Index Position where the new channel should be inserted. Name Name of inserted channel (ID is calculated from it). PrimaryType Primary type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Actual position where the new channel was inserted. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Insert"},
     {"title": "TelemetryLists.TKnownChannelsList.Insert", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> Internally calls variant of this method that has parameter <code>SecondaryTypes</code> with this parameter filled by function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#ValueTypesBitmask\">ValueTypesBitmask</a> whose parameter <code>ValueTypes</code> consists of values passed in parameters <code>SecondaryType</code> and <code>TertiaryType</code>.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful insertion.    <p>          <p>  Index Position where the new channel should be inserted. Name Name of inserted channel (ID is calculated from it). PrimaryType Primary type of value for this channel. SecondaryType Secondary (first secondary) type of value for this channel. TertiaryType Tertiary (second secondary) type of value for this channel. Indexed Flag denoting whether channel is indexed. IndexConfig Fully qualified name (id + attribute name) of the configuration containing count for channel indices. Has no meaning when the channel is not indexed. Actual position where the new channel was inserted. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Insert"},
     {"title": "TelemetryLists.TKnownChannelsList.Remove", "text": " When this channel is not found in the list, method returns -1 and nothing is removed.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful removal.    <p>    <p>  Name Name of the channel that has to be removed from the list. Index of item that was removed, -1 when requested channel was not found. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Remove"},
     {"title": "TelemetryLists.TKnownChannelsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Delete"},
     {"title": "TelemetryLists.TKnownChannelsList.ChannelIndexConfigID", "text": " When such channel is not found in the list, ID with value 0x00000000 is returned.    <p>    <p>  Name Name of requested channel. ID of index-configuration for requested channel. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ChannelIndexConfigID"},
     {"title": "TelemetryLists.TKnownChannelsList.ChannelNameToID", "text": "    <p>    <p>  Name Name of chanel for which you want an ID. ID of passed channel name. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ChannelNameToID"},
     {"title": "TelemetryLists.TKnownChannelsList.ChannelIDToName", "text": " This method actually searches through the list for channel with appropriate ID. When such channel is not found, an empty string is returned.    <p>    <p>  ID ID of requested channel. Name of the channel with appropriate ID. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#ChannelIDToName"},
     {"title": "TelemetryLists.TKnownChannelsList.Pointers", "text": " Use it for direct access to individual stored items.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html#Channels\">Channels</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Pointers"},
     {"title": "TelemetryLists.TKnownChannelsList.Channels", "text": " Use it to obtain values of individual stored items. ", "tags": "", "loc": "TelemetryLists.TKnownChannelsList.html#Channels"},
     {"title": "TelemetryLists.TKnownConfig", "text": "    <p>     ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html"},
     {"title": "TelemetryLists.TKnownConfig.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html#Name"},
     {"title": "TelemetryLists.TKnownConfig.ID", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html#ID"},
     {"title": "TelemetryLists.TKnownConfig.ValueType", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html#ValueType"},
     {"title": "TelemetryLists.TKnownConfig.Indexed", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html#Indexed"},
     {"title": "TelemetryLists.TKnownConfig.Binded", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfig.html#Binded"},
     {"title": "TelemetryLists.TKnownConfigsList", "text": " ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html"},
     {"title": "TelemetryLists.TKnownConfigsList.GetKnownConfigPointer", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#GetKnownConfigPointer"},
     {"title": "TelemetryLists.TKnownConfigsList.GetKnownConfig", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#GetKnownConfig"},
     {"title": "TelemetryLists.TKnownConfigsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Clear"},
     {"title": "TelemetryLists.TKnownConfigsList.IndexOf", "text": " When the config is not found, -1 is returned.    <p>    <p>  Name Name of the requested config. Index of config with requested name, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownConfigsList.IndexOf", "text": " When config with that ID is not found, -1 is returned.    <p>    <p>  ID ID of config whose index is requested. Index of config with requested ID, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TKnownConfigsList.Add", "text": "    <p>       <p>  Name Full name of added config. ValuetyType Type of this configs value. Indexed Flag denoting whether added config is indexed. Binded Flag denoting whether added config is binded by some channel (i.e. some channel has this config as its IndexConfig property). Index at which the new config was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Add"},
     {"title": "TelemetryLists.TKnownConfigsList.ReplaceIndex", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>      Index Index of item that has to be replaced. Name Full name of new config. ValuetyType Type of this configs value. Indexed Flag denoting whether added config is indexed. Binded Flag denoting whether added config is binded by some channel (i.e. some channel has this config as its IndexConfig property).  ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#ReplaceIndex"},
     {"title": "TelemetryLists.TKnownConfigsList.Replace", "text": " When this config is not found in the list, nothing happens and the method returns -1.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful replacement.    <p>        <p>  OldConfig Full name of the config that has to be replaced. Name Full name of replacment config. ValuetyType Type of this configs value. Indexed Flag denoting whether config is indexed. Binded Flag denoting whether config is binded by some channel (i.e. some channel has this config as its IndexConfig property). Index of config that was replaced, -1 when old config was not found. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Replace"},
     {"title": "TelemetryLists.TKnownConfigsList.Insert", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> is increased by one and all existing items from given position (included) up are moved higher. When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a>&gt; - passed index can be higher than current highest index, if so, item is added at the end of the list), and exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful insertion.    <p>        <p>  Index Position where the new config should be inserted. Name Full name of inserted config. ValuetyType Type of this configs value. Indexed Flag denoting whether config is indexed. Binded Flag denoting whether config is binded by some channel (i.e. some channel has this config as its IndexConfig property). Actual position where the new config was inserted. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Insert"},
     {"title": "TelemetryLists.TKnownConfigsList.Remove", "text": " When this config is not found in the list, method returns -1 and nothing is removed.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful removal.    <p>    <p>  Name Full name of the config that has to be removed from the list. Index of item that was removed, -1 when requested config was not found. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Remove"},
     {"title": "TelemetryLists.TKnownConfigsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Delete"},
     {"title": "TelemetryLists.TKnownConfigsList.IsBinded", "text": "    <p>    <p>  Name Full name of the requested config. Binded state of requested config. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#IsBinded"},
     {"title": "TelemetryLists.TKnownConfigsList.IsIndexed", "text": "    <p>    <p>  Name Full name of the requested config. Indexed state of requested config. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#IsIndexed"},
     {"title": "TelemetryLists.TKnownConfigsList.ConfigNameToID", "text": "    <p>    <p>  Name Full name of config for which you want an ID. ID of passed Config name. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#ConfigNameToID"},
     {"title": "TelemetryLists.TKnownConfigsList.ConfigIDToName", "text": " This method actually searches through the list for Config with appropriate ID. When such Config is not found, an empty string is returned.    <p>    <p>  ID ID of requested config. Full name of the config with appropriate ID. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#ConfigIDToName"},
     {"title": "TelemetryLists.TKnownConfigsList.Pointers", "text": " Use it for direct access to individual stored items.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html#Configs\">Configs</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Pointers"},
     {"title": "TelemetryLists.TKnownConfigsList.Configs", "text": " Use it to obtain values of individual stored items. ", "tags": "", "loc": "TelemetryLists.TKnownConfigsList.html#Configs"},
     {"title": "TelemetryLists.TEventInfo", "text": "    <p>  ", "tags": "", "loc": "TelemetryLists.TEventInfo.html"},
     {"title": "TelemetryLists.TEventInfo.Event", "text": " ", "tags": "", "loc": "TelemetryLists.TEventInfo.html#Event"},
     {"title": "TelemetryLists.TEventInfo.Utility", "text": " ", "tags": "", "loc": "TelemetryLists.TEventInfo.html#Utility"},
     {"title": "TelemetryLists.TEventContext", "text": " Pointer to this structure is passed as context in telemetry API calls when registering telemetry event.    <p>   ", "tags": "", "loc": "TelemetryLists.TEventContext.html"},
     {"title": "TelemetryLists.TEventContext.Recipient", "text": " ", "tags": "", "loc": "TelemetryLists.TEventContext.html#Recipient"},
     {"title": "TelemetryLists.TEventContext.EventInfo", "text": " ", "tags": "", "loc": "TelemetryLists.TEventContext.html#EventInfo"},
     {"title": "TelemetryLists.TEventContext.UserData", "text": " ", "tags": "", "loc": "TelemetryLists.TEventContext.html#UserData"},
     {"title": "TelemetryLists.TRegisteredEventsList", "text": "    <p>When new event is registered in the telemetry API, it is registered with context which is actually pointer to a variable of <a class=\"normal\" href=\"TelemetryLists.TEventContext.html\">TEventContext</a> structure. This variable is at the same time added as a new item into this list.<br> When event is unregistered, context it is bound to is removed from this list. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html"},
     {"title": "TelemetryLists.TRegisteredEventsList.fOnUserDataFree", "text": " ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#fOnUserDataFree"},
     {"title": "TelemetryLists.TRegisteredEventsList.GetEventContext", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#GetEventContext"},
     {"title": "TelemetryLists.TRegisteredEventsList.GetEventInfo", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#GetEventInfo"},
     {"title": "TelemetryLists.TRegisteredEventsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Clear"},
     {"title": "TelemetryLists.TRegisteredEventsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>    <p>  Event Identification number of requested event. Index of context with requested event, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredEventsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>    <p>  EventContext Requested event context. Index of requested context, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredEventsList.Add", "text": " <code>EventContext</code> parameter must not be <code>Nil</code>, otherwise an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful addition.    <p>    <p>  EventContext Pointer to event context that has to be added to the list. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredEventsList.Add", "text": "    <p>       <p>  Recipient Telemetry recipient registering this new context. Event Identification number of registered event. Utility Flag indicating whether registered event is marked as utility. UserData User defined data to be stored inside the event context. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredEventsList.Add", "text": " Created context has <code>Recipient</code> field set to <code>Nil</code>.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful addition.    <p>      <p>  Event Identification number of registered event. Utility Flag indicating whether registered event is marked as utility. UserData User defined data to be stored inside the event context. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredEventsList.Remove", "text": "    <p>    <p>  Event Identification number of registered event whose context has to be removed. Index of item that was removed, -1 when context with requested event was not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Remove"},
     {"title": "TelemetryLists.TRegisteredEventsList.Remove", "text": "    <p>    <p>  EventContext Context to be removed. Index of item that was removed, -1 when requested context was not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Remove"},
     {"title": "TelemetryLists.TRegisteredEventsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.<br> <a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#Contexts\">Contexts</a> are freed using method <a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#FreeContext\">FreeContext</a> (<a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#OnUserDataFree\">OnUserDataFree</a> event is called).    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Delete"},
     {"title": "TelemetryLists.TRegisteredEventsList.CreateContext", "text": " It is used when registering new telemetry event, because actual context is needed for this registration, but cannot be added to this list before the registration is complete.<br> Sequence of actions taken during registration is as follows: </p>    <ul class=\"compact_spacing\">    <li><p>Context is created using this function.</p></li>    <li><p>Registration in API is attempted.</p></li>    <li><p>When successful, context is added to this list.</p></li>    <li><p>When unsuccessful, context is freed using <a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#FreeContext\">FreeContext</a> method.</p></li>  </ul>    <p>    <p>       <p>  Recipient Telemetry recipient registering created context. Event Identification number of registered event. Utility Flag indicating whether registered event is marked as utility. UserData User defined data to be stored inside the created event context. Pointer to created event context. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#CreateContext"},
     {"title": "TelemetryLists.TRegisteredEventsList.FreeContext", "text": "    <p>  EventContext Pointer to event context to be freed.  ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#FreeContext"},
     {"title": "TelemetryLists.TRegisteredEventsList.DoOnUserDataFree", "text": "    ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#DoOnUserDataFree"},
     {"title": "TelemetryLists.TRegisteredEventsList.Contexts", "text": " Use it for direct access to individual stored <code>contexts</code>.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TRegisteredEventsList.html#Events\">Events</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Contexts"},
     {"title": "TelemetryLists.TRegisteredEventsList.Events", "text": " Use it to obtain values of individual stored items.<br> This property does not return whole context structure, only its &quot;EventInfo&quot; field. ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#Events"},
     {"title": "TelemetryLists.TRegisteredEventsList.OnUserDataFree", "text": " ", "tags": "", "loc": "TelemetryLists.TRegisteredEventsList.html#OnUserDataFree"},
     {"title": "TelemetryLists.TChannelInfo", "text": "    <p>      ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html"},
     {"title": "TelemetryLists.TChannelInfo.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#Name"},
     {"title": "TelemetryLists.TChannelInfo.ID", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#ID"},
     {"title": "TelemetryLists.TChannelInfo.Index", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#Index"},
     {"title": "TelemetryLists.TChannelInfo.ValueType", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#ValueType"},
     {"title": "TelemetryLists.TChannelInfo.Flags", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#Flags"},
     {"title": "TelemetryLists.TChannelInfo.IndexConfigID", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelInfo.html#IndexConfigID"},
     {"title": "TelemetryLists.TChannelContext", "text": " Pointer to this structure is passed as context in telemetry API calls when registering telemetry channel.    <p>   ", "tags": "", "loc": "TelemetryLists.TChannelContext.html"},
     {"title": "TelemetryLists.TChannelContext.Recipient", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelContext.html#Recipient"},
     {"title": "TelemetryLists.TChannelContext.ChannelInfo", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelContext.html#ChannelInfo"},
     {"title": "TelemetryLists.TChannelContext.UserData", "text": " ", "tags": "", "loc": "TelemetryLists.TChannelContext.html#UserData"},
     {"title": "TelemetryLists.TRegisteredChannelsList", "text": "    <p>When new channel is registered in the telemetry API, it is registered with context which is actually pointer to a variable of <a class=\"normal\" href=\"TelemetryLists.TChannelContext.html\">TChannelContext</a> structure. This variable is at the same time added as a new item into this list.<br> When channel is unregistered, context it is bound to is removed from this list. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html"},
     {"title": "TelemetryLists.TRegisteredChannelsList.fOnUserDataFree", "text": " ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#fOnUserDataFree"},
     {"title": "TelemetryLists.TRegisteredChannelsList.GetChannelContext", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#GetChannelContext"},
     {"title": "TelemetryLists.TRegisteredChannelsList.GetChannelInfo", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#GetChannelInfo"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Clear"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>    <p>  Name Name of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>    <p>  ID ID of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>     <p>  Name Name of the requested channel. Index Index of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>     <p>  ID ID of the requested channel. Index Index of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>      <p>  Name Name of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>      <p>  ID ID of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>       <p>  Name Name of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Flags Registering flags of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>       <p>  ID ID of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Flags Registering flags of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>    <p>  ChannelContext Requested channel context. Index of requested context, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Add", "text": " <code>ChannelContext</code> parameter must not be <code>Nil</code>, otherwise an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful addition.    <p>    <p>  ChannelContext Pointer to channel context that has to be added to the list. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Add", "text": "    <p>          <p>  Recipient Telemetry recipient registering this new context. Name Name of the registered channel (ID is calculated from it). Index Index of registered channel. ValueType Value type of registered channel. Flags Registering flags. IndexConfigID ID of index configuration to which the registered channel is bound. UserData User defined data to be stored inside the channel context. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Add", "text": " Created context has <code>Recipient</code> field set to <code>Nil</code>.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful addition.    <p>         <p>  Name Name of the registered channel (ID is calculated from it). Index Index of registered channel. ValueType Value type of registered channel. Flags Registering flags. IndexConfigID ID of index configuration to which the registered channel is bound. UserData User defined data to be stored inside the channel context. Index at which the new context was added, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Add"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Remove", "text": "    <p>      <p>  Name Name of the registered channel whose context has to be removed. Index Index of registered channel. ValueType Value type of registered channel. Index of item that was removed, -1 when context with requested channel was not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Remove"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Remove", "text": "    <p>      <p>  ID ID of the registered channel whose context has to be removed. Index Index of registered channel. ValueType Value type of registered channel. Index of item that was removed, -1 when context with requested channel was not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Remove"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Remove", "text": "    <p>    <p>  ChannelContext Context to be removed. Index of item that was removed, -1 when requested context was not found. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Remove"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.<br> <a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#Contexts\">Contexts</a> are freed using method <a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#FreeContext\">FreeContext</a> (<a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#OnUserDataFree\">OnUserDataFree</a> event is called).    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Delete"},
     {"title": "TelemetryLists.TRegisteredChannelsList.CreateContext", "text": " It is used when registering new telemetry channel, because actual context is needed for this registration, but cannot be added to this list before the registration is complete.<br> Sequence of actions taken during registration is as follows: </p>    <ul class=\"compact_spacing\">    <li><p>Context is created using this function.</p></li>    <li><p>Registration in API is attempted.</p></li>    <li><p>When successful, context is added to this list.</p></li>    <li><p>When unsuccessful, context is freed using <a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#FreeContext\">FreeContext</a> method.</p></li>  </ul>    <p>    <p>          <p>  Recipient Telemetry recipient registering created context. Name Name of the registered channel (ID is calculated from it). Index Index of registered channel. ValueType Value type of registered channel. Flags Registering flags. IndexConfigID ID of index configuration to which registered channel is bound. UserData User defined data to be stored inside the created channel context. Pointer to created channel context. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#CreateContext"},
     {"title": "TelemetryLists.TRegisteredChannelsList.FreeContext", "text": "    <p>  ChannelContext Pointer to channel context to be freed.  ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#FreeContext"},
     {"title": "TelemetryLists.TRegisteredChannelsList.DoOnUserDataFree", "text": "    ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#DoOnUserDataFree"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Contexts", "text": " Use it for direct access to individual stored <code>contexts</code>.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TRegisteredChannelsList.html#Channels\">Channels</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Contexts"},
     {"title": "TelemetryLists.TRegisteredChannelsList.Channels", "text": " Use it to obtain values of individual stored items.<br> This property does not return whole context structure, only its &quot;ChannelInfo&quot; field. ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#Channels"},
     {"title": "TelemetryLists.TRegisteredChannelsList.OnUserDataFree", "text": " ", "tags": "", "loc": "TelemetryLists.TRegisteredChannelsList.html#OnUserDataFree"},
     {"title": "TelemetryLists.TStoredConfig", "text": " This structure is used to store configuration value obtained from the API call.    <p>     ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html"},
     {"title": "TelemetryLists.TStoredConfig.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html#Name"},
     {"title": "TelemetryLists.TStoredConfig.ID", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html#ID"},
     {"title": "TelemetryLists.TStoredConfig.Index", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html#Index"},
     {"title": "TelemetryLists.TStoredConfig.Value", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html#Value"},
     {"title": "TelemetryLists.TStoredConfig.Binded", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfig.html#Binded"},
     {"title": "TelemetryLists.TStoredConfigsList", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html"},
     {"title": "TelemetryLists.TStoredConfigsList.GetStoredConfigPointer", "text": "    <p>    <p>  Index Index of requested item. Pointer to requested item. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#GetStoredConfigPointer"},
     {"title": "TelemetryLists.TStoredConfigsList.GetStoredConfig", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#GetStoredConfig"},
     {"title": "TelemetryLists.TStoredConfigsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Clear"},
     {"title": "TelemetryLists.TStoredConfigsList.IndexOf", "text": " When matching config is not found, -1 is returned.    <p>    <p>  Name Name of the requested config. Index of requested config, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredConfigsList.IndexOf", "text": " When matching config is not found, -1 is returned.    <p>    <p>  ID ID of the requested config. Index of requested config, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredConfigsList.IndexOf", "text": " When matching config is not found, -1 is returned.    <p>     <p>  Name Name of the requested config. Index Index of the requested config. Index of requested config, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredConfigsList.IndexOf", "text": " When matching config is not found, -1 is returned.    <p>     <p>  ID ID of the requested config. Index Index of the requested config. Index of requested config, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredConfigsList.Add", "text": "    <p>       <p>  Name Name of stored config (ID is calculated from it). Index Index of stored config. Value Localized value (data) this config contains. Binded Flag denoting whether this config is binded by some channel (i.e. some channel has this config as its IndexConfig property). Index at which the new config was stored, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Add"},
     {"title": "TelemetryLists.TStoredConfigsList.Add", "text": "    <p>       <p>  Name Name of stored config (ID is calculated from it). Index Index of stored config. Value Value (data) this config contains. Binded Flag denoting whether this config is binded by some channel (i.e. some channel has this config as its IndexConfig property). Index at which the new config was stored, -1 when addition failed. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Add"},
     {"title": "TelemetryLists.TStoredConfigsList.Remove", "text": "    <p>     <p>  Name Name of stored config that has to be removed. Index Index of stored config. Index of item that was removed, -1 when requested config was not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Remove"},
     {"title": "TelemetryLists.TStoredConfigsList.Remove", "text": "    <p>     <p>  ID ID of stored config that has to be removed. Index Index of stored config. Index of item that was removed, -1 when requested config was not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Remove"},
     {"title": "TelemetryLists.TStoredConfigsList.Delete", "text": " When index falls out of allowed boundary (&lt;0,<a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#Count\">Count</a> - 1&gt;), an exception is raised.<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful deletion.    <p>  Index Index of item that has to be deleted.  ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Delete"},
     {"title": "TelemetryLists.TStoredConfigsList.ChangeConfigValue", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful removal.    <p>     <p>  Name Name of stored config whose value should be changed. Index Index of stored config. Index of item whose value has been changed, -1 when requested config was not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#ChangeConfigValue"},
     {"title": "TelemetryLists.TStoredConfigsList.ChangeConfigValue", "text": " <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful removal.    <p>     <p>  ID ID of stored config whose value should be changed. Index Index of stored config. Index of item whose value has been changed, -1 when requested config was not found. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#ChangeConfigValue"},
     {"title": "TelemetryLists.TStoredConfigsList.Pointers", "text": " Use it for direct access to individual stored items.<br> Unlike <a class=\"normal\" href=\"TelemetryLists.TStoredConfigsList.html#Configs\">Configs</a> property, you can use returned pointer to change values of stored items. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Pointers"},
     {"title": "TelemetryLists.TStoredConfigsList.Configs", "text": " Use it to obtain values of individual stored items. ", "tags": "", "loc": "TelemetryLists.TStoredConfigsList.html#Configs"},
     {"title": "TelemetryLists.TStoredChannel", "text": "    <p>    ", "tags": "", "loc": "TelemetryLists.TStoredChannel.html"},
     {"title": "TelemetryLists.TStoredChannel.Name", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannel.html#Name"},
     {"title": "TelemetryLists.TStoredChannel.ID", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannel.html#ID"},
     {"title": "TelemetryLists.TStoredChannel.Index", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannel.html#Index"},
     {"title": "TelemetryLists.TStoredChannel.Value", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannel.html#Value"},
     {"title": "TelemetryLists.TStoredChannelMasterID", "text": " This structure is used to store channels values obtained from API calls in an list sorted by items master ID.    <p>  ", "tags": "", "loc": "TelemetryLists.TStoredChannelMasterID.html"},
     {"title": "TelemetryLists.TStoredChannelMasterID.MasterID", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannelMasterID.html#MasterID"},
     {"title": "TelemetryLists.TStoredChannelMasterID.StoredChannel", "text": " ", "tags": "", "loc": "TelemetryLists.TStoredChannelMasterID.html#StoredChannel"},
     {"title": "TelemetryLists.TStoredChannelsList", "text": "    <p>Items in this list are sorted by their master ID. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html"},
     {"title": "TelemetryLists.TStoredChannelsList.GetStoredChannelValue", "text": "    <p>    <p>  Index Index of requested item. Requested item. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#GetStoredChannelValue"},
     {"title": "TelemetryLists.TStoredChannelsList.GetInsertIndex", "text": "    <p>    <p>  MasterID Master ID of added item. Position at which newly added item should be inserted. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#GetInsertIndex"},
     {"title": "TelemetryLists.TStoredChannelsList.Clear", "text": "    ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#Clear"},
     {"title": "TelemetryLists.TStoredChannelsList.IndexOf", "text": " When matching config is not found, -1 is returned.    <p>    <p>  MasterID Master ID of requested channel. Index of requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>      <p>  ID ID of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredChannelsList.IndexOf", "text": " When the context is not found, -1 is returned.    <p>      <p>  Name Name of the requested channel. Index Index of the requested channel. ValueType Type of value of the requested channel. Index of context with requested channel, -1 when not found. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#IndexOf"},
     {"title": "TelemetryLists.TStoredChannelsList.StoreChannelValue", "text": " If such channel is not yet stored in the list, it is added as new item. Function can, in extreme cases, return -1 (when the channel is not already stored and addition fails for some reason).<br> <a class=\"normal\" href=\"TelemetryLists.TCustomTelemetryList.html#OnChange\">OnChange</a> event is called after successful addition or value change.    <p>       <p>  Name Name of the channel. ID ID of the channel. Index Index of the channel. Value New value of the channel. Index (position) at which the channel is inserted or where it was found, -1 on failure. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#StoreChannelValue"},
     {"title": "TelemetryLists.TStoredChannelsList.StoredChannelValues", "text": " Use it to obtain values of individual stored items. ", "tags": "", "loc": "TelemetryLists.TStoredChannelsList.html#StoredChannelValues"},
     {"title": "TelemetryLists.EmptyKnownEvent", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyKnownEvent"},
     {"title": "TelemetryLists.EmptyKnownChannel", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyKnownChannel"},
     {"title": "TelemetryLists.EmptyKnownConfig", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyKnownConfig"},
     {"title": "TelemetryLists.EmptyEventInfo", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyEventInfo"},
     {"title": "TelemetryLists.EmptyChannelInfo", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyChannelInfo"},
     {"title": "TelemetryLists.EmptyStoredConfig", "text": " ", "tags": "", "loc": "TelemetryLists.html#EmptyStoredConfig"},
     {"title": "TelemetryLists.GetMasterID", "text": "<br> This number is used in searching and sorting algorithms and is calculated from channel ID, Index and ValueType.<br> At the moment, it is calculated by the formula:<br> </p>    <pre class=\"longcode\">MasterID := (ID <span class=\"pascal_keyword\">xor</span> <span class=\"pascal_keyword\">Index</span>) <span class=\"pascal_keyword\">xor</span> <span class=\"pascal_keyword\">not</span> ValueType;</pre>    <p>    <p>      <p>  ID Channel ID. Index Channel index. ValueType Channel ValueType. Master identification number. ", "tags": "", "loc": "TelemetryLists.html#GetMasterID"},
     {"title": "TelemetryLists.GetChannelIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html\">TKnownChannelsList</a> object.    <p>     <p>  Name Channel name to be converted to ID. KnownChannels <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html\">TKnownChannelsList</a> object that will be used for actual conversion. Channel ID obtained from passed name. ", "tags": "", "loc": "TelemetryLists.html#GetChannelIDFromName"},
     {"title": "TelemetryLists.GetChannelNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html\">TKnownChannelsList</a> object.    <p>     <p>  ID Channel ID to be converted to name. KnownChannels <a class=\"normal\" href=\"TelemetryLists.TKnownChannelsList.html\">TKnownChannelsList</a> object that will be used for actual conversion. Channel name obtained from passed ID. ", "tags": "", "loc": "TelemetryLists.html#GetChannelNameFromID"},
     {"title": "TelemetryLists.GetConfigIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html\">TKnownConfigsList</a> object.    <p>     <p>  Name Config name to be converted to ID. KnownChannels <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html\">TKnownConfigsList</a> object that will be used for actual conversion. Config ID obtained from passed name. ", "tags": "", "loc": "TelemetryLists.html#GetConfigIDFromName"},
     {"title": "TelemetryLists.GetConfigNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html\">TKnownConfigsList</a> object.    <p>     <p>  ID Config ID to be converted to name. KnownChannels <a class=\"normal\" href=\"TelemetryLists.TKnownConfigsList.html\">TKnownConfigsList</a> object that will be used for actual conversion. Config name obtained from passed ID. ", "tags": "", "loc": "TelemetryLists.html#GetConfigNameFromID"},
     {"title": "TelemetryLists.TUserDataFreeEvent", "text": "    ", "tags": "", "loc": "TelemetryLists.html#TUserDataFreeEvent"},
     {"title": "TelemetryLists.PKnownEvent", "text": " ", "tags": "", "loc": "TelemetryLists.html#PKnownEvent"},
     {"title": "TelemetryLists.PKnownChannel", "text": " ", "tags": "", "loc": "TelemetryLists.html#PKnownChannel"},
     {"title": "TelemetryLists.PKnownConfig", "text": " ", "tags": "", "loc": "TelemetryLists.html#PKnownConfig"},
     {"title": "TelemetryLists.PEventInfo", "text": " ", "tags": "", "loc": "TelemetryLists.html#PEventInfo"},
     {"title": "TelemetryLists.PEventContext", "text": " ", "tags": "", "loc": "TelemetryLists.html#PEventContext"},
     {"title": "TelemetryLists.PChannelInfo", "text": " ", "tags": "", "loc": "TelemetryLists.html#PChannelInfo"},
     {"title": "TelemetryLists.PChannelContext", "text": " ", "tags": "", "loc": "TelemetryLists.html#PChannelContext"},
     {"title": "TelemetryLists.PStoredConfig", "text": " ", "tags": "", "loc": "TelemetryLists.html#PStoredConfig"},
     {"title": "TelemetryLists.TMasterID", "text": " ", "tags": "", "loc": "TelemetryLists.html#TMasterID"},
     {"title": "TelemetryLists.PStoredChannel", "text": " ", "tags": "", "loc": "TelemetryLists.html#PStoredChannel"},
     {"title": "TelemetryLists.PStoredChannelMasterID", "text": " ", "tags": "", "loc": "TelemetryLists.html#PStoredChannelMasterID"},
     {"title": "TelemetryLogBinary", "text": "<hr>        <p><b>TelemetryLogBinary</b>    <p>©František Milt, all rights reserved.    <p>This unit contains classes that are designed to write binary logs, namely: </p>    <pre class=\"preformatted\">    TTelemetryLogBinaryWriter     |- TTelemetryLogBinaryWriter_1         |- TTelemetryLogBinaryWriter_0      TTelemetryLogBinaryStream     |- TTelemetryLogBinaryFile  </pre>    <p>    <p>Last change: 2015-07-01    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-05-18 - First stable version.</p></li>    <li><p>2014-10-24 - Small implementation changes.</p></li>    <li><p>2014-11-05 - Type of parameter <code>Size</code> changed from signed to unsigned integer in following functions:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogData\">TTelemetryLogBinaryWriter.LogData</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogData\">TTelemetryLogBinaryWriter_1.LogData</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogData\">TTelemetryLogBinaryStream.LogData</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Added parameter <code>UserData</code> to following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventRegisterHandler\">TTelemetryLogBinaryStream.EventRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventUnregisterHandler\">TTelemetryLogBinaryStream.EventUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventHandler\">TTelemetryLogBinaryStream.EventHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelRegisterHandler\">TTelemetryLogBinaryStream.ChannelRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelUnregisterHandler\">TTelemetryLogBinaryStream.ChannelUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelHandler\">TTelemetryLogBinaryStream.ChannelHandler</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-30 - Constant <code>cMinimumAPIInfoSectionSize</code> renamed to <a class=\"normal\" href=\"TelemetryLogBinary.html#MinimumAPIInfoSectionSize\">MinimumAPIInfoSectionSize</a>.</p></li>    <li><p>2015-06-30 - Constant <code>LB_MAGIC_NUMBER</code> renamed to <a class=\"normal\" href=\"TelemetryLogBinary.html#LB_SIGNATURE\">LB_SIGNATURE</a>.</p></li>    <li><p>2015-06-30 - Class <code>TTelemetryLogBinaryWriter_0_1</code> renamed to <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html\">TTelemetryLogBinaryWriter_1</a> as it now writes only structure 1.</p></li>    <li><p>2015-06-30 - Added class <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html\">TTelemetryLogBinaryWriter_0</a> for writing structure 0.</p></li>    <li><p>2015-07-01 - Small implementation changes.</p></li>  </ul>    <p>    <p>ToDo:</p>    <ul class=\"paragraph_spacing\">    <li><p>Add 64bit variant of structure 0 (64bit blocks offsets).</p></li>    <li><p>Add structure that saves data in some compressed format.</p></li>    <li><p>Optimize reallocation and saving of block offset table.</p></li>  </ul>    <p>    <p><hr>    <p><b>Structure of binary log output created by classes from this unit</b>    <p>In the following text, a &quot;file&quot; is meant to be a binary log output created by classes from this unit (it might be a stream, not just file).    <p>Each file starts with a header of this structure: </p>    <pre class=\"preformatted\">           value       |   size    |   value type        Magic number        4 bytes     32b uint (must be equal to 0x6C624C54)      Time of creation    8 bytes     TTimeStamp      Data structure      2 bytes     16b uint      Reserved field 1    4 bytes      Reserved field 2    4 bytes  </pre>    <p> Each file must start with this header and API informations section, if it is smaller (minimum size of API info section is 16 bytes), then it is broken. Also, each valid file must start with valid magic number (<code>0x6C624C54</code>).<br> Time of creation is the local system time when the header was saved. It is stored as TTimeStamp structure which is declared as follows: </p>    <pre class=\"preformatted\">      value |   size   | value type        Time    4 bytes     32b int      Date    4 bytes     32b int  </pre>    <p> ...where Time is number of milliseconds that have elapsed since midnight, and Date indicates the number of calendar days since the start of the calendar (the number of days since 1/1/0001 plus one). Data structure determines how content of the file looks like after the API informations section.<br> Do not use reserved fields and do not assume nothing about their content!    <p>After the header, API informations are stored. They are not part of the header because they have variable size - you have to write or read each field at a time. They are be used when reading the file, for example when there is need to convert item IDs to valid item names. These informations are stored as follows: </p>    <pre class=\"preformatted\">         value          |   size   |  value type        Telemetry version   4 bytes    scs_u32_t      Game ID             variable   String      Game version        4 bytes    scs_u32_t      Game name           variable   Sring  </pre>    <p>    <p>After that, actual log data are stored (note - there might be no data at all), their actual structure depends on selected data structure.<br> Right now, two structures are implemented - structure 0 and structure 1. Structure 1 is exactly the same as structure 0, only it does not contain table of block offsets at the end, so it won't be described in detail - you can refer to structure 0 for informations and just ommit blocks offsets info.    <p>Strings are stored in the file as following structure: </p>    <pre class=\"preformatted\">      value  |   size   |  value type        Length   4 bytes     32b int      Chars    variable    Array of UTF8 chars (bytes)  </pre>    <p> Length is the length of a stored string in bytes.<br> Chars is the string itself. It is allways UTF8-encoded.    <p><hr>    <p><b>Structure 0</b>    <p>Data in structure 0 are stored as a stream of blocks of variable sizes.    <p>Each block starts with a header of this structure: </p>    <pre class=\"preformatted\">             value       |  size   |   value type        Block type           1 byte     8b uint      Block flags          1 byte     8b uint      Block time           8 bytes    TTimeStamp      Block payload size   2 bytes    16b uint  </pre>    <p> Block type denotes structure and kind of data stored inside payload of the block (see further).<br> Currently, two block flags are defined, but some new can be added in the future. See further for details about idividual flags.<br> Block time stores time when the block was added to the output (for technicalities, refer to file header <code>Time of creation</code> field, as it is stored the same way).<br> Block payload size is size of data this block is holding in bytes. It can be zero. When reading the block, position in stream must advance exactly by the number of bytes stored in this field, no more, no less. When stored payload size indicates that reading should go beyond end of file, you have to stop reading and assume the file is corrupted from current block onwards. Also, when stored payload size does not correspond to actual data that should be stored (eg. size is smaller than space required for expected structure), you must stop reading.    <p>Each block type can be present any number of times in the output stream, or not present at all. All blocks must be saved in consecutive order, it is not allowed that any block is time-stamped earlier than block preceding it in the stream.    <p>After the block header, an optional payload is stored. Structure of payload data depends on block type. For structure 0, following block types are defined: </p>    <ul class=\"paragraph_spacing\">    <li><p>Block type 0x00 (dec 000) - Invalid block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_INVALID\">LB_BLOCK_TYPE_INVALID</a>)</code>    <p>This block does not contain any data.</p></li>    <li><p>Block type 0x01 (dec 001) - Generic block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_GENERIC\">LB_BLOCK_TYPE_GENERIC</a>)</code>    <p>Can contain any data of any size. Structure of data is not defined.<br> <b>Warning</b> - maximum size of data is 65535 bytes.</p></li>    <li><p>Block type 0x02 (dec 002) - Text block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_TEXT\">LB_BLOCK_TYPE_TEXT</a>)</code>    <p>Contains one string. Nothing more.</p></li>    <li><p>Block type 0x03 (dec 003) - Log block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_LOG\">LB_BLOCK_TYPE_LOG</a>)</code>    <p>Contains informations about a write to game log (console).    <p>Structure of payload: </p>    <pre class=\"preformatted\">       value  |   size   |  value type        LogType   4 bytes     scs_log_type_t      LogText   variable    String  </pre>    <p></p></li>    <li><p>Block type 0x04 (dec 004) - Event registration block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENTREG\">LB_BLOCK_TYPE_EVENTREG</a>)</code>    <p>Informations about registered game event.    <p>Structure of payload: </p>    <pre class=\"preformatted\">      value |   size   |  value type        Event   4 bytes    scs_event_t  </pre>    <p></p></li>    <li><p>Block type 0x05 (dec 005) - Event unregistration block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENTUNREG\">LB_BLOCK_TYPE_EVENTUNREG</a>)</code>    <p>Informations about unregistered game event.    <p>Structure of payload: </p>    <pre class=\"preformatted\">      value |   size   |  value type        Event   4 bytes    scs_event_t  </pre>    <p></p></li>    <li><p>Block type 0x06 (dec 006) - Event block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENT\">LB_BLOCK_TYPE_EVENT</a>)</code>    <p>Informations about occuring game event.    <p>Structure of payload: </p>    <pre class=\"preformatted\">      value      |   size   |  value type        Event        4 bytes     scs_event_t      Event data   variable  </pre>    <p> Content of event data is not defined here. It depends on what event has occured, but as of now, there are only two possible structures that can be stored in event data field: </p>    <ul class=\"paragraph_spacing\">    <li><p>For event <code>SCS_TELEMETRY_EVENT_frame_start</code>, one <code>scs_telemetry_frame_start_t</code> structure is stored.</p></li>    <li><p>For event <code>SCS_TELEMETRY_EVENT_configuration</code>, data are stored using function <a class=\"normal\" href=\"TelemetryStreaming.html#Stream_Write_scs_telemetry_configuration\">Stream_Write_scs_telemetry_configuration</a> or its alternatives, refer to this function for information about resulting data layout.</p></li>  </ul>    <p></p></li>    <li><p>Block type 0x07 (dec 007) - Channel registration block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNELREG\">LB_BLOCK_TYPE_CHANNELREG</a>)</code>    <p>Informations about registered channel.    <p>Structure of payload: </p>    <pre class=\"preformatted\">            value       |   size   |  value type      When block flag ID only is not set:        Channel name        variable    String      Channel index       4 bytes     scs_u32_t      Channel value type  4 bytes     scs_value_type_t      Registration flags  4 byes      scs_u32_t      When block flag ID only is set:        Channel ID          4 bytes     TItemID      Channel index       4 bytes     scs_u32_t      Channel value type  4 bytes     scs_value_type_t      Registration flags  4 byes      scs_u32_t  </pre>    <p></p></li>    <li><p>Block type 0x08 (dec 008) - Channel unregistration block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNELUNREG\">LB_BLOCK_TYPE_CHANNELUNREG</a>)</code>    <p>Informations about unregistered channel.    <p>Structure of payload: </p>    <pre class=\"preformatted\">            value       |   size   |  value type      When block flag ID only is not set:        Channel name        variable    String      Channel index       4 bytes     scs_u32_t      Channel value type  4 bytes     scs_value_type_t      When block flag ID only is set:        Channel ID          4 bytes     TItemID      Channel index       4 bytes     scs_u32_t      Channel value type  4 bytes     scs_value_type_t  </pre>    <p></p></li>    <li><p>Block type 0x09 (dec 009) - Channel block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNEL\">LB_BLOCK_TYPE_CHANNEL</a>)</code>    <p>Informations about occuring channel and its value.<br> Data are stored using function <a class=\"normal\" href=\"TelemetryStreaming.html#Stream_Write_scs_named_value_localized\">Stream_Write_scs_named_value_localized</a> or its alternatives, refer to this function for informations regarding resulting data layout. </p></li>    <li><p>Block type 0x0A (dec 010) - Config block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_CONFIG\">LB_BLOCK_TYPE_CONFIG</a>)</code>    <p>Contains informations about stored config including its value.<br> Data are stored using function <a class=\"normal\" href=\"TelemetryStreaming.html#Stream_Write_scs_named_value_localized\">Stream_Write_scs_named_value_localized</a> or its alternatives, refer to this function for informations regarding resulting data layout. </p></li>    <li><p>Block type 0xFF (dec 255) - Termination block <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_TYPE_TERMINATE\">LB_BLOCK_TYPE_TERMINATE</a>)</code>    <p>Should not contain any data. When the file is read sequentially, reading must stop on this block, even when not at the end of the file. This block is put directly in front of blocks offsets table. </p></li>  </ul>    <p>    <p>Defined block flags: </p>    <ul class=\"paragraph_spacing\">    <li><p>bit 0 (0x01) - Reserved<br> Ignore this bit.</p></li>    <li><p>bit 1 (0x02) - ID only <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_FLAG_IDONLY\">LB_BLOCK_FLAG_IDONLY</a>)</code><br> Indicating whether channel or config block is stored with ID instead of full name. Valid only for block types 4 through 8, ignored for other blocks.</p></li>    <li><p>bit 2 (0x04) - Minimized <code>(<a class=\"normal\" href=\"TelemetryLogBinary.html#LB_BLOCK_FLAG_MINIMIZED\">LB_BLOCK_FLAG_MINIMIZED</a>)</code><br> Indicating whether <code>scs_value_t</code> structure or its alternatives are stored minimized. Valid only for block types 4, 7 and 8, ignored for other blocks.</p></li>    <li><p>bits 3 through 7 - Reserved<br> Ignore these bits.</p></li>  </ul>    <p>    <p>At the end of the file is stored table of blocks offsets. It contains offsets of all blocks stored in file from the start of the file, in bytes. This table is always directly preceded by a termination block, so the resulting structure is: </p>    <pre class=\"preformatted\">            value       |   size   |  value type        Termination block   12 bytes    TBlockHeader      Offsets             variable    Array of 32b uint      Count               4 Bytes     32b int      Control number      4 bytes     32b uint (must be equal to 0x616F4C54)  </pre>    <p> Termination block is there for cases when the file is read sequentially, so the reading does not continue into the table and data in it are not processed as blocks.<br> Count contains number of items in offsets array. Items in this array are 32bit unsigned integers, so actual size of array in bytes is 4 * Count. This count can be 0.<br> At the end of file, a control number is stored. It must be equal to <code>0x616F4C54</code>, if it isn't, you must assume that the file does not actually contain table of block offsets and read it as it were a file of structure 1. Since the table is stored when the file is closed, it might happed that the table is not stored, for example when logger was prematurely terminated by an error or by user intervention.    <p>Structure 0 diagram: <div align=\"center\"> <img src=\"image_0.png\" alt=\"tlb_struct_0\" /> </div>    <p><hr>    <p><b>Structure 1</b>    <p>Data in structure 1 are stored exactly the same as in structure 0. Only difference is, that structure 1 does not store table of block offsets at the end of file.<br> You can refer to structure 0 definition for informations about structure 1 resulting layout, just ommit the offsets table.    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryLogBinary.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader", "text": " Used to read/write binary output header and store informations about a file.    <p>     ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.MagicNumber", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html#MagicNumber"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.TimeOfCreation", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html#TimeOfCreation"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.DataStructure", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html#DataStructure"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.Reserved1", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html#Reserved1"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.Reserved2", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileHeader.html#Reserved2"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo", "text": "    <p>    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.TelemetryVersion", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.html#TelemetryVersion"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.GameID", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.html#GameID"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.GameVersion", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.html#GameVersion"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.GameName", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryAPIInfo.html#GameName"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo", "text": "    <p>  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo.Header", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo.html#Header"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo.APIInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFileInfo.html#APIInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader", "text": " Used to read/write block headers and to pass informations between routines.    <p>    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.BlockType", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.html#BlockType"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.BlockFlags", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.html#BlockFlags"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.BlockTime", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.html#BlockTime"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.BlockPayloadSize", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryBlockHeader.html#BlockPayloadSize"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter", "text": " This class is intended as sort of template (common ancestor) for all writer classes. These classes are used internaly to write different binary log structures, and should not be used outside of loggers. All descendants must implement all abstract methods. They also may add some new methods, but they should be used in loggers wery carefully and only if really needed.<br> Log* methods all have <code>Recipient</code> parameter. This parameter must contain reference to a valid telemetry recipient, as its methods can be used in descendant classes for conversions or to obtain informations required to write a log.<br> All writing is done at current <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter.html#Stream\">Stream</a> position. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.fStream", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#fStream"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.fFileInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#fFileInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.fSaveMinimized", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#fSaveMinimized"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.fSaveItemIDOnly", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#fSaveItemIDOnly"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.Create", "text": "    <p>   Stream Stream to which the writer will write the log. Must not be <code>Nil</code>. It must have file header and API information already written in and position must be set directly after them (not at the start of the Stream!). FileInfo Informations about output file. It must be completely filled by logger that is creating current instance in order for this class to work properly. When not filled, the behavior of this class is not defined.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#Create"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.StartWriting", "text": " Its job is to prepare anything that is necesary for actual logging (variables initialization, ...).    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#StartWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogData", "text": "    <p>    Recipient Telemetry recipient. Must contain valid object. Data Pointer to data to be written. Must not be <code>Nil</code>. Size Size of the data in bytes.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogData"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogStr", "text": "    <p>   Recipient Telemetry recipient. Must contain valid object. Str Text to be written. Can be empty.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogStr"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogLog", "text": "    <p>    Recipient Telemetry recipient. Must contain valid object. LogType Type of log written into game log (error, warning, ...). LogText Actual text written into game log.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogLog"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogEventRegister", "text": "    <p>   Recipient Telemetry recipient. Must contain valid object. Event Event identifier number.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogEventRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogEventUnregister", "text": "    <p>   Recipient Telemetry recipient. Must contain valid object. Event Event identifier number.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogEventUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogEvent", "text": "    <p>    Recipient Telemetry recipient. Must contain valid object. Event Event identifier number. Data Pointer to data appended to currently logged event. Can be <code>Nil</code>.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogEvent"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogChannelRegister", "text": "    <p>       Recipient Telemetry recipient. Must contain valid object. Name Name of registered telemetry channel. ID ID of registered telemetry chanenl. Index Index of registered telemetry channel. ValueType Type of value of registered telemetry channel. Flags Registration flags.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogChannelRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogChannelUnregister", "text": "    <p>      Recipient Telemetry recipient. Must contain valid object. Name Name of unregistered telemetry channel. ID ID of unregistered telemetry chanenl. Index Index of unregistered telemetry channel. ValueType Type of value of unregistered telemetry channel.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogChannelUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogChannel", "text": "    <p>      Recipient Telemetry recipient. Must contain valid object. Name Name of logged telemetry channel. ID ID of logged telemetry chanenl. Index Index of logged telemetry channel. Value Actual value of logged telemetry channel. Can be <code>Nil</code>.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogChannel"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.LogConfig", "text": "    <p>      Recipient Telemetry recipient. Must contain valid object. Name Name of logged config value. ID ID of logged config value. Index Index of logged config value. Value Actual value of logged config value.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#LogConfig"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.EndWriting", "text": " Its job is to free any allocated resources, write any buffered values or simply anything that has to be saved after the last log is written.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#EndWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.FileInfo", "text": " Filled in constructor. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#FileInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.Stream", "text": " Not initialized, filled in constructor.<br> <b>Warning</b> - do not change properties of this object! ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#Stream"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.SaveMinimized", "text": " Refer to functions with parameter <code>Minimize(d)</code> in unit <a class=\"normal\" href=\"TelemetryStreaming.html\">TelemetryStreaming</a> (eg. <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a>) and to binary output documentation for details. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#SaveMinimized"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter.SaveItemIDOnly", "text": " Refer to functions with parameter <code>ItemIDOnly</code> in unit <a class=\"normal\" href=\"TelemetryStreaming.html\">TelemetryStreaming</a> (eg. <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a>) and to binary output documentation for details. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter.html#SaveItemIDOnly"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.WriteBlockHeader", "text": "    <p>    BlockType Type of block. BlockFlags Flags of block. BlockPayloadSize Size of block payload, in bytes. Can be zero.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#WriteBlockHeader"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.SetFlagValue", "text": "    <p>    Flags Set of flags that has to be changed. FlagMask Number determining which bit has to be changed. Value New value for the flag.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#SetFlagValue"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.StartWriting", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#StartWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogInvalidBlock", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogInvalidBlock"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogTerminationBlock", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogTerminationBlock"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogData", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogData"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogStr", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogStr"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogLog"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogEventRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogEventRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogEventUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogEventUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogEvent"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogChannelRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogChannelRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogChannelUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogChannelUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogChannel", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogChannel"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.LogConfig", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#LogConfig"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.EndWriting", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html#EndWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.fBlocksOffsets", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#fBlocksOffsets"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.AddBlockOffset", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#AddBlockOffset"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.WriteBlockHeader", "text": " Adds new offset to the table of blocks offsets by calling <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#AddBlockOffset\">AddBlockOffset</a> method.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#WriteBlockHeader"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.StartWriting", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#StartWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.EndWriting", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryWriter_0.html#EndWriting"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream", "text": " Only file header and API informations are actually written in this class, everything else (log data) is written using instance of appropriate (for selected file structure) writer.<br> *Handler methods all require valid telemetry recipient object. It can be provided in <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property (prefered) or in <code>Sender</code> parameter of a method. If you fail to provide it, these methods will raise an exception. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.fStream", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#fStream"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.fLogWriter", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#fLogWriter"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.fFileInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#fFileInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.fSaveMinimized", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#fSaveMinimized"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.fSaveItemIDOnly", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#fSaveItemIDOnly"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.SetSaveMinimized", "text": "    <p>  Value New value of the property.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#SetSaveMinimized"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.SetSaveItemIDOnly", "text": "    <p>  Value New value of the property.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#SetSaveItemIDOnly"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.PrepareFileInfo", "text": " Called from the constructor. It sets all field of file header and API informations. API info is taken from an object referenced by <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property - meaning you must pass valid telemetry recipient to the constructor.    <p>  FileInfo Structure that has to be filled.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#PrepareFileInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.WriteFileHeader", "text": "    <p>  FileInfo Structure containing information that will be written.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#WriteFileHeader"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.Create", "text": "    <p>Creates internal log writer and starts writing.    <p>    Recipient Telemetry recipient that operates on API. You must provide valid instance as API informations section will be filled usig its properties. Constructor also assigns all handler methods to its event - you can change that (deassign handlers, set <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property to other instance, etc.) after the constructor returns, but rememeber that handlers require valid recipient instance either in <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property or passed in <code>Sender</code> paramater. Stream Stream to which the output will be written.<br> <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#Stream\">Stream</a> is cleared before any writing occurs. DataStructure Structure of output binary log. See binary log documentation for details. If you pass unsupported structure, the constructor raises an exception.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#Create"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.Destroy", "text": "    <p>Ends writing and frees internal log writer.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#Destroy"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogData", "text": "    <p>    Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Data Pointer to data to be written. Must not be <code>Nil</code>. Size Size of the data in bytes.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogData"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogStr", "text": "    <p>   Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Str Text to be written. Can be empty.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogStr"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogHandler", "text": "    <p>    Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). LogType Type of log written into game log (error, warning, ...). LogText Text written into game log.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.EventRegisterHandler", "text": "    <p>    Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventRegisterHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.EventUnregisterHandler", "text": "    <p>    Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventUnregisterHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.EventHandler", "text": "    <p>     Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. Data Pointer to data accompanying the event. Can be <code>Nil</code>. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#EventHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.ChannelRegisterHandler", "text": "    <p>        Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of registered channel. ID ID of registered channel. Index Index of registered channel. ValueType Value type of registered channel. Flags Registration flags. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelRegisterHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.ChannelUnregisterHandler", "text": "    <p>       Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of unregistered channel. ID ID of unregistered channel. Index Index of unregistered channel. ValueType Value type of unregistered channel. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelUnregisterHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.ChannelHandler", "text": "    <p>       Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of the channel. ID ID of the channel. Index Index of the channel. Value Actual value of the channel. Can be <code>Nil</code>. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#ChannelHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.ConfigHandler", "text": "    <p>      Sender Object calling this method (must be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of the config. ID ID of the config. Index Index of the config. Value Actual value of the config.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#ConfigHandler"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogLog", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogLog"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogEventRegister", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogEventRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogEventUnregister", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogEventUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogEvent", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogEvent"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogChannelRegister", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogChannelRegister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogChannelUnregister", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogChannelUnregister"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogChannel", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogChannel"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.LogConfig", "text": " Refer to called method for details.    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#LogConfig"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.FileInfo", "text": " Filled in constructor. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#FileInfo"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.Stream", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#Stream"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.SaveMinimized", "text": " Refer to writer <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter.html#SaveMinimized\">property</a> of the same name for details. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#SaveMinimized"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryStream.SaveItemIDOnly", "text": " Refer to writer <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter.html#SaveItemIDOnly\">property</a> of the same name for details. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryStream.html#SaveItemIDOnly"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFile", "text": " It is a direct descendant of <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html\">TTelemetryLogBinaryStream</a> class (it creates <code>TFileStream</code> and passes it as a <code>Stream</code> parameter to <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html\">TTelemetryLogBinaryStream</a>), so it has all saving options the same and resulting data layout is also exactly the same. ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFile.html"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFile.fFileName", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFile.html#fFileName"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFile.Create", "text": "    <p>For details about <code>Recipient</code> parameter, see <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryStream.html#Create\">inherited constructor</a>.    <p>    Recipient Telemetry <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">recipient</a> that will be logged. Must not be <code>Nil</code>. FileName Name of the output log file. It is not mandatory to assign full file path (file should be saved to current directory if no path is provided), but it is a good practice.<br> When this parameter contains an empty string, then output file is created in the same folder where a module (exe/dll) containing this unit is placed, with the name set to the name of that module (without extension) followed by the time the file was created, and with .tbl extension. DataStructure Structure of output.  ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFile.html#Create"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFile.Destroy", "text": "    ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFile.html#Destroy"},
     {"title": "TelemetryLogBinary.TTelemetryLogBinaryFile.FileName", "text": " ", "tags": "", "loc": "TelemetryLogBinary.TTelemetryLogBinaryFile.html#FileName"},
     {"title": "TelemetryLogBinary.LB_SIGNATURE", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_SIGNATURE"},
     {"title": "TelemetryLogBinary.LB_STRUCT0_CONTROLNUMBER", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_STRUCT0_CONTROLNUMBER"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_INVALID", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_INVALID"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_GENERIC", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_GENERIC"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_TEXT", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_TEXT"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_LOG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_LOG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_EVENTREG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENTREG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_EVENTUNREG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENTUNREG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_EVENT", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_EVENT"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_CHANNELREG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNELREG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_CHANNELUNREG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNELUNREG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_CHANNEL", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_CHANNEL"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_CONFIG", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_CONFIG"},
     {"title": "TelemetryLogBinary.LB_BLOCK_TYPE_TERMINATE", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_TYPE_TERMINATE"},
     {"title": "TelemetryLogBinary.LB_BLOCK_FLAG_IDONLY", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_FLAG_IDONLY"},
     {"title": "TelemetryLogBinary.LB_BLOCK_FLAG_MINIMIZED", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#LB_BLOCK_FLAG_MINIMIZED"},
     {"title": "TelemetryLogBinary.MinimumAPIInfoSectionSize", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#MinimumAPIInfoSectionSize"},
     {"title": "TelemetryLogBinary.PTelemetryLogBinaryFileHeader", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#PTelemetryLogBinaryFileHeader"},
     {"title": "TelemetryLogBinary.PTelemetryLogBinaryAPIInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#PTelemetryLogBinaryAPIInfo"},
     {"title": "TelemetryLogBinary.PTelemetryLogBinaryFileInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#PTelemetryLogBinaryFileInfo"},
     {"title": "TelemetryLogBinary.PTelemetryLogBinaryBlockHeader", "text": " ", "tags": "", "loc": "TelemetryLogBinary.html#PTelemetryLogBinaryBlockHeader"},
     {"title": "TelemetryLogBinaryParser", "text": "<hr>        <p><b>TelemetryLogBinaryParser</b>    <p>©František Milt, all rights reserved.    <p>This unit contains classes that are designed to parse binary logs and/or convert them to text logs, namely: </p>    <pre class=\"preformatted\">    TTelemetryLogBinaryReader     |- TTelemetryLogBinaryReader_1         |- TTelemetryLogBinaryReader_0      TTelemetryLogBinaryStreamParser     |- TTelemetryLogBinaryFileParser         |- TTelemetryLogBinaryToTextConverter  </pre>    <p> Included files:</p>    <pre class=\"preformatted\">      .\\Inc\\TelemetryMulticastEvents.pas        Contains declarations and implementations of multicast event classes.</pre>    <p>    <p>Last change: 2015-07-02    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-05-10 - First stable version.</p></li>    <li><p>2014-10-24 - Small implementation changes.</p></li>    <li><p>2014-11-05 - Type of parameter/field <code>Size</code> changed from signed to unsigned integer in following cases:</p>    <ul class=\"compact_spacing\">    <li><p>event type <a class=\"normal\" href=\"TelemetryLogBinaryParser.html#TDataLogEvent\">TDataLogEvent</a></p></li>    <li><p>event type <a class=\"normal\" href=\"TelemetryLogBinaryParser.html#TDataTimeLogEvent\">TDataTimeLogEvent</a></p></li>    <li><p>fields TLogEntry.Size and <a class=\"normal\" href=\"TelemetryLogBinaryParser.TLogEntry.html#Info\">TLogEntry.Info</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnDataLog\">TTelemetryLogBinaryStreamParser.DoOnDataLog</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnDataLog\">TTelemetryLogBinaryToTextConverter.DoOnDataLog</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Small implementation changes.</p></li>    <li><p>2015-07-01 - Class <code>TTelemetryLogBinaryReader_0_1</code> renamed to <a class=\"normal\" href=\"TelemetryLogBinary.TTelemetryLogBinaryWriter_1.html\">TTelemetryLogBinaryWriter_1</a> as it now reads only structure 1.</p></li>    <li><p>2015-07-01 - Added class <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html\">TTelemetryLogBinaryReader_0</a> for reading of structure 0.</p></li>    <li><p>2015-07-02 - Implementation changes.</p></li>    <li><p>2015-07-02 - Changed <code>Data</code> field of structure <a class=\"normal\" href=\"TelemetryLogBinaryParser.TLogEntry.html\">TLogEntry</a> to a managed type (dynamic array) so it does not need explicit finalization.</p></li>    <li><p>2015-07-02 - Removed function <code>LogEntryFree</code> as it is no longer needed.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryLogBinaryParser.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastDataTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastTextTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastLogTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventRegisterTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastEventTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelRegisterTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelUnregisterTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastChannelTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.html"},
     {"title": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.html#IndexOf"},
     {"title": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.html#Add"},
     {"title": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.html#Remove"},
     {"title": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TMulticastConfigTimeLogEvent.html#Call"},
     {"title": "TelemetryLogBinaryParser.TLogEntry", "text": "    <p>   ", "tags": "", "loc": "TelemetryLogBinaryParser.TLogEntry.html"},
     {"title": "TelemetryLogBinaryParser.TLogEntry.Time", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TLogEntry.html#Time"},
     {"title": "TelemetryLogBinaryParser.TLogEntry.Data", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TLogEntry.html#Data"},
     {"title": "TelemetryLogBinaryParser.TLogEntry.Info", "text": " Content of this field differs for each file structure. Currently, these are implemented: </p>    <ul class=\"paragraph_spacing\">    <li><p>File structure 0 and 1: </p>    <pre class=\"preformatted\">      bits  0..7   - Type of block from which the data was read.      bits  8..15  - Flags of block from which the data was read.      bits 16..31  - Unused.</pre>    <p></p></li>  </ul>    <p> ", "tags": "", "loc": "TelemetryLogBinaryParser.TLogEntry.html#Info"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader", "text": " This class is intended as common ancestor for all internal reader classes. These classes are used internaly to read different binary log structures, and should not be used outside of parsers. All descendants must implement all abstract methods. They also may add some new methods, but they should be used in parsers wery carefully and only if really needed. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fStream", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fStream"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fFileInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fFileInfo"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fLogCounter", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fLogCounter"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fTelemetryInfoProvider", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fTelemetryInfoProvider"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fFirstStreamPosition", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fFirstStreamPosition"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fReadingTerminated", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fReadingTerminated"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnDataLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnTextLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnLogLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnLogLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnEventRegister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnEventRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnEventUnregister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnEventUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnEvent"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnChannelRegister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnChannelRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnChannelUnregister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnChannelUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnChannel", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnChannel"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.fOnConfig", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#fOnConfig"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.IncLogCounter", "text": "    <p>  N Number by which the <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogCounter\">LogCounter</a> will be increased.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#IncLogCounter"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.GetLogCount", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#GetLogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.GetLogEntry", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#GetLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.Create", "text": "    <p>Creates internal telemetry info provider.    <p>   Stream Stream from which the reader will read. Must not be <code>Nil</code>. Position must be set directly behind the file header and API info section, not at the beginning of the Stream itself. FileInfo Informations about input file. It must be completely filled by parser that is creating current instance in order for this class to work properly. Provided information are used as parameters when creating telemetry info provider. When not filled, the behavior of this class is not defined.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Create"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.Destroy", "text": "    <p>Frees internal telemetry info provider.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Destroy"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.StartReading", "text": " Its job is to prepare anything that is necesary for actual reading (variables initialization, ...).<br> Sets <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadingTerminated\">ReadingTerminated</a> to <code>False</code> and <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Stream\">Stream</a> position to <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#FirstStreamPosition\">FirstStreamPosition</a>.<br> Can be used to effectively reset the reading.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#StartReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.EndReading", "text": " Its job is to free any allocated resources.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#EndReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.ReadNextLogEntry", "text": " When parameter <code>IncreaseLogCounter</code> is set to <code>True</code> and result is also <code>True</code>, then <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogCounter\">LogCounter</a> is increased by one.<br> Read data are processed and passed to appropriate event.    <p>    <p>  IncreaseLogCounter Determines whether to increase log counter. <code>True</code> when log was read successfuly, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadNextLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.ReadAllLogEntries", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadAllLogEntries"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.ReadLogEntry", "text": " Works only for structures that supports non-sequential reading (eg. structure 0).<br> Position in <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Stream\">Stream</a> is not changed in this method.    <p>    <p>  Index Index of requested log entry. <code>True</code> when the entry was read successfuly, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.LogEntries", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogEntries"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.FileInfo", "text": " Filled in constructor.) ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#FileInfo"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnDataLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnTextLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnLogLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnLogLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnEventRegister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnEventRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnEventUnregister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnEventUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnEvent", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnEvent"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnChannelRegister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnChannelRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnChannelUnregister", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnChannelUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnChannel", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnChannel"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.OnConfig", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#OnConfig"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.LogCount", "text": " Works only for structures that supports non-sequential reading.<br> If current structure does not support non-sequential reading, it will return -1. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.LogCounter", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogCounter"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.Stream", "text": " Not initialized, filled in constructor.<br> <b>Warning</b> - do not change properties of this object! ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Stream"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.TelemetryInfoProvider", "text": " for ID &lt;&gt; Name conversions). Managed automatically. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#TelemetryInfoProvider"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.FirstStreamPosition", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#FirstStreamPosition"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.ReadingTerminated", "text": " end of stream/file, termination block was read, an error occured, etc.). ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadingTerminated"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.GetLogCount", "text": " Returns -1.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#GetLogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.GetLogEntry", "text": " Returns <a class=\"normal\" href=\"TelemetryLogBinaryParser.html#InvalidLogEntry\">InvalidLogEntry</a>.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#GetLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.GetFlagValue", "text": "    <p>     <p>  Flags Set of flags storing required flag value. FlagMask Mask determining at which bit should the value be read. Value of the selected flag. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#GetFlagValue"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockHeader", "text": "    <p>  BlockHeader Variable in which the read header is returned.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockHeader"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Invalid", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. Always returns <code>True</code>. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Invalid"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Generic", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Generic"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Text", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Text"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Log", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Log"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_EventReg", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_EventReg"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_EventUnreg", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_EventUnreg"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Event", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Event"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_ChannelReg", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_ChannelReg"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_ChannelUnreg", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_ChannelUnreg"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Channel", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Channel"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Config", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. <code>True</code> when the payload was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Config"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlockPayload_Termination", "text": "    <p>    <p>  BlockHeader Informations read from header of the block. Always returns <code>False</code> as reading should terminate at this block. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlockPayload_Termination"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadBlock", "text": "    <p>   <code>True</code> when the block was read successfuly, <code>False</code> othewise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlock"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.StartReading", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#StartReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.EndReading", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#EndReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadNextLogEntry", "text": " Internally calls <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadBlock\">ReadBlock</a> method.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadNextLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.ReadLogEntry", "text": " Always returns <code>False</code>.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_1.html#ReadLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.fBlocksOffsets", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#fBlocksOffsets"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.GetLogCount", "text": " Returns length of <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#fBlocksOffsets\">fBlocksOffsets</a> array.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#GetLogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.GetLogEntry", "text": " It find and accesses individual entries by offsets stored in <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#fBlocksOffsets\">fBlocksOffsets</a> array. See <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#LogEntries\">LogEntries</a> property for other informations.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#GetLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.ReadBlocksOffsets", "text": " <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Stream\">Stream</a> position is not changed in this method.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#ReadBlocksOffsets"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.StartReading", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#StartReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.EndReading", "text": " Empties the table of block offsets.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#EndReading"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.ReadLogEntry", "text": " Position in <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#Stream\">Stream</a> is not changed in this method.    <p>    <p>  Index Index of requested log entry. <code>True</code> when the entry was read successfuly, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryReader_0.html#ReadLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser", "text": " It is designed as a stream parser, meaning it reads over the input stream and when it runs into a valid log, it reads it, processes it when possible and calls appropriate event to which it passes all processed data. For example, when it finds entry containing information about channel registration, it reads it and calls event <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelRegisterLog\">OnChannelRegisterLog</a> (or similar alternative). These events have the same signature as events used by telemetry recipient, so you can bind the same handlers to them.<br> Parser internally uses appropriate readers to read files with different structures. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fStream", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fStream"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fLogReader", "text": " Managed automatically. Crated in constructor as an instance of one of the <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html\">TTelemetryLogBinaryReader</a> descendants. Actual class used depends on structure of readed file. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fLogReader"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fFileInfo", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fFileInfo"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnDataTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnDataTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnTextTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnTextTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnLogTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnLogTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventRegisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventRegisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventUnregisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventUnregisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelRegisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelRegisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelUnregisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelUnregisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnConfigTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnConfigTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnDataLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnTextLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnLogLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnLogLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventRegisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventRegisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventUnregisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventUnregisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelRegisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelRegisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelUnregisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelUnregisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnConfigLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnConfigLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnDataTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnDataTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnTextTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnTextTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnLogTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnLogTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventRegisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventRegisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventUnregisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventUnregisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelRegisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelRegisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelUnregisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelUnregisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnConfigTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnConfigTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnDataLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnDataLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnTextLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnTextLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnLogLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnLogLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventRegisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventRegisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventUnregisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventUnregisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnEventLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnEventLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelRegisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelRegisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelUnregisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelUnregisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnChannelLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnChannelLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.fOnConfigLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#fOnConfigLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.GetLogCount", "text": " Gets the value from internal reader object.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#GetLogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.GetLogCounter", "text": " Gets the value from internal reader object.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#GetLogCounter"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.GetLogEntry", "text": " Gets actual value from internal reader object.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#GetLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.ReadFileHeader", "text": "    <p>    <p>  FileInfo Variable to which a read informations are stored. FileInfo Output value containing read data.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadFileHeader"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnDataLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnTextLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnEventRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnEventRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnEventUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnEventUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnEvent"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnChannelRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnChannelRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnChannelUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnChannelUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnChannel", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnChannel"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.DoOnConfig", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#DoOnConfig"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.Create", "text": "    <p>Creates all automatically managed objects, reads file header (by calling method <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadFileHeader\">ReadFileHeader</a>) and assigns handlers to internal reader events.    <p>  Stream Stream from which the parser will read. Must not be <code>Nil</code>.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Create"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.Destroy", "text": "    <p>Frees all automatically managed objects.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Destroy"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.ReadNextLogEntry", "text": " Read data are processed and passed to appropriate event.<br> Calls internal readers <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadNextLogEntry\">ReadNextLogEntry</a> method.    <p>   <code>True</code> when log was read successfuly, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadNextLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.ReadAllLogEntries", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadAllLogEntries"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.ReadLogEntry", "text": " Works only for structures that supports non-sequential reading (eg. structure 0).<br> Calls internal readers <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryReader.html#ReadLogEntry\">ReadLogEntry</a> method.<br> Position in <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Stream\">Stream</a> is not changed in this method.    <p>    <p>  Index Index of requested log entry. <code>True</code> when the entry was read successfuly, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadLogEntry"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.LogEntries", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#LogEntries"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.FileInfo", "text": " Filled in constructor. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#FileInfo"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.Stream", "text": " Not initialized, filled in constructor.<br> <b>Warning</b> - do not change properties of this object! ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Stream"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.LogCount", "text": " Works only for structures that supports non-sequential reading. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#LogCount"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.LogCounter", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#LogCounter"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnDataTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnDataTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnTextTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnTextTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnLogTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnLogTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventRegisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventRegisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventUnregisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventUnregisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelRegisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelRegisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelUnregisterTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelUnregisterTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnConfigTimeLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnConfigTimeLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnDataLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnTextLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnLogLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnLogLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventRegisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventRegisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventUnregisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventUnregisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelRegisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelRegisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelUnregisterLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelUnregisterLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnConfigLog", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnConfigLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnDataTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnDataTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnTextTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnTextTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnLogTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnLogTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventRegisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventRegisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventUnregisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventUnregisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelRegisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelRegisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelUnregisterTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelUnregisterTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnConfigTimeLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnConfigTimeLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnDataLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnDataLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnTextLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnTextLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnLogLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnLogLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventRegisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventRegisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventUnregisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventUnregisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnEventLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnEventLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelRegisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelRegisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelUnregisterLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelUnregisterLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnChannelLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnChannelLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.OnConfigLogMulti", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#OnConfigLogMulti"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser", "text": " It is implemented as direct descendant of <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html\">TTelemetryLogBinaryStreamParser</a> class, you can refer to it for more details.<br> It creates TFileStream for requested file and passes it to inherited constructor. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.fFileName", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html#fFileName"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.Create", "text": "    <p>Creates internal file <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Stream\">stream</a> and passes it to inherited constructor.    <p>  FileName Name of the input log file. Must contain valid file name, but it is not mandatory to assign full file path.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html#Create"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.Destroy", "text": "    <p>Frees internal file <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#Stream\">stream</a>.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html#Destroy"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.FileName", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html#FileName"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter", "text": " Implemented as descendant of <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryFileParser.html\">TTelemetryLogBinaryFileParser</a> class. It creates internal text logger and uses own methods to pass parsed data to it. It also creates dummy telemetry recipient using data from API information section because it is required by text logger. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.fOutFileName", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#fOutFileName"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.fDummyRecipient", "text": " Parameters (telemetry version, etc.) required to <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#Create\">create</a> this object are obtained from input log file API information section. ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#fDummyRecipient"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.fTextLogger", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#fTextLogger"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnDataLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnDataLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnTextLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnTextLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnLog", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnLog"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnEventRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnEventRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnEventUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnEventUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnEvent"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnChannelRegister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnChannelRegister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnChannelUnregister", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnChannelUnregister"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnChannel", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnChannel"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.DoOnConfig", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#DoOnConfig"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.Create", "text": "    <p>Creates dummy recipient and text logger.    <p>   FileName Name of the input log file. Must contain valid file name, but it is not mandatory to assign full file path. OutFileName Name of output text file. When left empty, then name of output file is created by appending <code>.LOG</code> extension to the name of the input file.  ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#Create"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.Destroy", "text": "    <p>Frees all internal objects.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#Destroy"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.Convert", "text": " Calls <a class=\"normal\" href=\"TelemetryLogBinaryParser.TTelemetryLogBinaryStreamParser.html#ReadAllLogEntries\">ReadAllLogEntries</a> method.    ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#Convert"},
     {"title": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.OutFileName", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.TTelemetryLogBinaryToTextConverter.html#OutFileName"},
     {"title": "TelemetryLogBinaryParser.InvalidLogEntry", "text": " ", "tags": "", "loc": "TelemetryLogBinaryParser.html#InvalidLogEntry"},
     {"title": "TelemetryLogBinaryParser.TDataLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TDataLogEvent"},
     {"title": "TelemetryLogBinaryParser.TTextLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TTextLogEvent"},
     {"title": "TelemetryLogBinaryParser.TDataTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TDataTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TTextTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TTextTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TLogTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TLogTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TEventRegisterTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TEventRegisterTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TEventTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TEventTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TChannelRegisterTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TChannelRegisterTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TChannelUnregisterTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TChannelUnregisterTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TChannelTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TChannelTimeLogEvent"},
     {"title": "TelemetryLogBinaryParser.TConfigTimeLogEvent", "text": "    ", "tags": "", "loc": "TelemetryLogBinaryParser.html#TConfigTimeLogEvent"},
     {"title": "TelemetryLogText", "text": "<hr>        <p><b>TelemetryLogText</b>    <p>©František Milt, all rights reserved.    <p>This unit contains <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html\">TTelemetryLogText</a> class (see class declaration for details).    <p>Last change: 2015-06-30    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-05-18 - First stable version.</p></li>    <li><p>2014-11-05 - Added parameter <code>UserData</code> to following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventRegisterHandler\">TTelemetryLogText.EventRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventUnregisterHandler\">TTelemetryLogText.EventUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventHandler\">TTelemetryLogText.EventHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelRegisterHandler\">TTelemetryLogText.ChannelRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelUnregisterHandler\">TTelemetryLogText.ChannelUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelHandler\">TTelemetryLogText.ChannelHandler</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-30 - Small implementation changes.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryLogText.html"},
     {"title": "TelemetryLogText.TTelemetryLogText", "text": " To use it, just assign individual *Handler methods to appropriate telemetry recipient events, or use method <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#AssignHandlers\">AssignHandlers</a> for automatic assigning (<a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property must be assigned).<br> <b>Note</b> - some functions (they are marked) are using recipient methods to convert data to text, so you are strongly advised to assign telemetry recipient to <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property or using constructor. If you don't assign it, then you have to make sure you pass valid telemetry recipient in <code>Sender</code> parameters of called methods (in this case, do not use Log* methods as they don't have <code>Sender</code> parameter). When no valid recipient is provided, then these methods write error note directly into log output. ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html"},
     {"title": "TelemetryLogText.TTelemetryLogText.fLogger", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#fLogger"},
     {"title": "TelemetryLogText.TTelemetryLogText.fShowTypesNames", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#fShowTypesNames"},
     {"title": "TelemetryLogText.TTelemetryLogText.fShowDescriptors", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#fShowDescriptors"},
     {"title": "TelemetryLogText.TTelemetryLogText.ItemIDString", "text": "    <p>    <p>  ID ID to be converted to text. Textual representation of passed ID. ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ItemIDString"},
     {"title": "TelemetryLogText.TTelemetryLogText.IndexString", "text": "    <p>    <p>  Index Index to be converted to text. Textual representation of passed index. ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#IndexString"},
     {"title": "TelemetryLogText.TTelemetryLogText.Create", "text": "    <p>Creates <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#Logger\">Logger</a> object.    <p>   Recipient Telemetry recipient that operates on API. When you assign this parameter, it will be assigned to <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property and handlers will be assigned to its events using <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#AssignHandlers\">AssignHandlers</a> method. FileName Name of the output log file. It is not mandatory to assign full file path (file should be saved to current directory if no path is provided), but it is a good practice.<br> When this parameter contains an empty string, then output file is created in the same folder where a module (exe/dll) containing this unit is placed, with the name set to the name of that module (without extension) followed by the time the file was created, and with .log extension.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#Create"},
     {"title": "TelemetryLogText.TTelemetryLogText.Destroy", "text": "    <p>Frees <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#Logger\">Logger</a> object.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#Destroy"},
     {"title": "TelemetryLogText.TTelemetryLogText.AddLog", "text": "    <p>  LogText Text to be written to output(s).  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#AddLog"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogHandler", "text": "  Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). LogType Type of log written into game log. LogText Actual text written into game log.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.EventRegisterHandler", "text": "    <p>    Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#EventRegisterHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.EventUnregisterHandler", "text": "    <p>    Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#EventUnregisterHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.EventHandler", "text": "    <p>     Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Event Game event identification number. Data Pointer to data accompanying the event. Can be <code>Nil</code>. UserData User defined data stored in the event context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#EventHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.ChannelRegisterHandler", "text": "    <p>        Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of registered channel. ID ID of registered channel. Index Index of registered channel. ValueType Value type of registered channel. Flags Registration flags. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ChannelRegisterHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.ChannelUnregisterHandler", "text": "    <p>       Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of unregistered channel. ID ID of unregistered channel. Index Index of unregistered channel. ValueType Value type of unregistered channel. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ChannelUnregisterHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.ChannelHandler", "text": "    <p>       Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of the channel. ID ID of the channel. Index Index of the channel. Value Actual value of the channel. Can be <code>Nil</code>. UserData User defined data stored in the channel context.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ChannelHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.ConfigHandler", "text": "    <p>      Sender Object that called this method (should be of type <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a>). Name Name of the config. ID ID of the config. Index Index of the config. Value Actual value of the config.  ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ConfigHandler"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogLog", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#LogHandler\">LogHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogLog"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogEventRegister", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventRegisterHandler\">EventRegisterHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogEventRegister"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogEventUnregister", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventUnregisterHandler\">EventUnregisterHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogEventUnregister"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogEvent", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#EventHandler\">EventHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogEvent"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogChannelRegister", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelRegisterHandler\">ChannelRegisterHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogChannelRegister"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogChannelUnregister", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelUnregisterHandler\">ChannelUnregisterHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogChannelUnregister"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogChannel", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ChannelHandler\">ChannelHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogChannel"},
     {"title": "TelemetryLogText.TTelemetryLogText.LogConfig", "text": " Refer to <a class=\"normal\" href=\"TelemetryLogText.TTelemetryLogText.html#ConfigHandler\">ConfigHandler</a> for details.    ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#LogConfig"},
     {"title": "TelemetryLogText.TTelemetryLogText.Logger", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#Logger"},
     {"title": "TelemetryLogText.TTelemetryLogText.ShowTypesNames", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ShowTypesNames"},
     {"title": "TelemetryLogText.TTelemetryLogText.ShowDescriptors", "text": " ", "tags": "", "loc": "TelemetryLogText.TTelemetryLogText.html#ShowDescriptors"},
     {"title": "TelemetryRecipient", "text": "<hr>        <p><b>TelemetryRecipient</b>    <p>©František Milt, all rights reserved.    <p>This unit contains <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> class used to control the telmetry API (see class declaration for details) and few classes used to manage multicast events for the recipient, namely: </p>    <pre class=\"preformatted\">    TMulticastLogEvent    TMulticastEventRegisterEvent    TMulticastEventEvent    TMulticastChannelRegisterEvent    TMulticastChannelUnregisterEvent    TMulticastChannelEvent    TMulticastConfigEvent  </pre>    <p> Included files:</p>    <pre class=\"preformatted\">      .\\Inc\\TelemetryMulticastEvents.pas        Contains declarations and implementations of multicast event classes.</pre>    <p>    <p>Last change: 2015-06-29    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2013-10-07 - First stable version.</p></li>    <li><p>2013-04-18 - Following parameters in event types were changed to <code>TelemetryString</code>:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelRegisterEvent\">TChannelRegisterEvent</a> - parameter <code>Name</code></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelUnregisterEvent\">TChannelUnregisterEvent</a> - parameter <code>Name</code></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelEvent\">TChannelEvent</a> - parameter <code>Name</code></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TConfigEvent\">TConfigEvent</a> - parameter <code>Name</code></p></li>  </ul>    <p></p></li>    <li><p>2014-04-18 - Type of parameters <code>Name</code> changed to <code>TelemetryString</code> in following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelHandler\">TTelemetryRecipient.ChannelHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegistered\">TTelemetryRecipient.ChannelRegistered</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegister\">TTelemetryRecipient.ChannelRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregister\">TTelemetryRecipient.ChannelUnregister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ConfigStored\">TTelemetryRecipient.ConfigStored</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelStored\">TTelemetryRecipient.ChannelStored</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-18 - Type of following fields and properties changed to <code>TelemetryString</code>:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fGameName\">TTelemetryRecipient.fGameName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fGameID\">TTelemetryRecipient.fGameID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#GameName\">TTelemetryRecipient.GameName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#GameID\">TTelemetryRecipient.GameID</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-19 - Following multicast event classes were added: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastLogEvent.html\">TMulticastLogEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastEventRegisterEvent.html\">TMulticastEventRegisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastEventEvent.html\">TMulticastEventEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelRegisterEvent.html\">TMulticastChannelRegisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelUnregisterEvent.html\">TMulticastChannelUnregisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelEvent.html\">TMulticastChannelEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastConfigEvent.html\">TMulticastConfigEvent</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-19 - Added following multicast events:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnDestroyMulti\">TTelemetryRecipient.OnDestroyMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnLogMulti\">TTelemetryRecipient.OnLogMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnEventRegisterMulti\">TTelemetryRecipient.OnEventRegisterMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnEventUnregisterMulti\">TTelemetryRecipient.OnEventUnregisterMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnEventMulti\">TTelemetryRecipient.OnEventMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnChannelRegisterMulti\">TTelemetryRecipient.OnChannelRegisterMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnChannelUnregisterMulti\">TTelemetryRecipient.OnChannelUnregisterMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnChannelMulti\">TTelemetryRecipient.OnChannelMulti</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnConfigMulti\">TTelemetryRecipient.OnConfigMulti</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-19 - Added following methods:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnDestroy\">TTelemetryRecipient.DoOnDestroy</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnLog\">TTelemetryRecipient.DoOnLog</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEventRegister\">TTelemetryRecipient.DoOnEventRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEventUnregister\">TTelemetryRecipient.DoOnEventUnregister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEvent\">TTelemetryRecipient.DoOnEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelRegister\">TTelemetryRecipient.DoOnChannelRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelUnregister\">TTelemetryRecipient.DoOnChannelUnregister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannel\">TTelemetryRecipient.DoOnChannel</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnConfig\">TTelemetryRecipient.DoOnConfig</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventRegisterByIndex\">TTelemetryRecipient.EventRegisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventUnregisterIndex\">TTelemetryRecipient.EventUnregisterIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventUnregisterByIndex\">TTelemetryRecipient.EventUnregisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByIndex\">TTelemetryRecipient.ChannelRegisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByName\">TTelemetryRecipient.ChannelRegisterByName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterIndex\">TTelemetryRecipient.ChannelUnregisterIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterByIndex\">TTelemetryRecipient.ChannelUnregisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterByName\">TTelemetryRecipient.ChannelUnregisterByName</a></p></li>  </ul>    <p></p></li>    <li><p>2014-04-27 - Added parameter <code>ShowDescriptors</code> to methods TTelemetryRecipient.EventGetDataAsString and TTelemetryRecipient.ChannelGetValueAsString.</p></li>    <li><p>2014-05-01 - Added method <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#HighestSupportedGameVersion\">TTelemetryRecipient.HighestSupportedGameVersion</a>.</p></li>    <li><p>2014-05-04 - Following callback functions were added:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#RecipientGetChannelIDFromName\">RecipientGetChannelIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#RecipientGetChannelNameFromID\">RecipientGetChannelNameFromID</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#RecipientGetConfigIDFromName\">RecipientGetConfigIDFromName</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#RecipientGetConfigNameFromID\">RecipientGetConfigNameFromID</a></p></li>  </ul>    <p></p></li>    <li><p>2014-10-23 - Following methods were moved to public section:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#PrepareForTelemetryVersion\">TTelemetryRecipient.PrepareForTelemetryVersion</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#PrepareForGameVersion\">TTelemetryRecipient.PrepareForGameVersion</a></p></li>  </ul>    <p></p></li>    <li><p>2014-10-24 - Added new parametrized constructor (with separated game option parameters) and <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#CreateCurrent\">TTelemetryRecipient.CreateCurrent</a>.</p></li>    <li><p>2014-10-24 - Added user managed mode (with appropriate fields, properties and no-parameter constructor).</p></li>    <li><p>2014-10-24 - Added <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration\">TTelemetryRecipient.AllowAutoRegistration</a> property.</p></li>    <li><p>2014-10-24 - Added parameter <code>AllowAutoRegistration</code> parameter to one parametrized constructor.</p></li>    <li><p>2014-10-24 - Small implementation changes and bugs repairs.</p></li>    <li><p>2014-10-26 - Added method <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#SetAPIInfo\">TTelemetryRecipient.SetAPIInfo</a>.</p></li>    <li><p>2014-11-05 - Added paramter <code>UserData</code> to following event types and methods:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TEventRegisterEvent\">TEventRegisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TEventEvent\">TEventEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelRegisterEvent\">TChannelRegisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelUnregisterEvent\">TChannelUnregisterEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.html#TChannelEvent\">TChannelEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastEventRegisterEvent.html#Call\">TMulticastEventRegisterEvent.Call</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastEventEvent.html#Call\">TMulticastEventEvent.Call</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelRegisterEvent.html#Call\">TMulticastChannelRegisterEvent.Call</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelUnregisterEvent.html#Call\">TMulticastChannelUnregisterEvent.Call</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TMulticastChannelEvent.html#Call\">TMulticastChannelEvent.Call</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEventRegister\">TTelemetryRecipient.DoOnEventRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEventUnregister\">TTelemetryRecipient.DoOnEventUnregister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnEvent\">TTelemetryRecipient.DoOnEvent</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelRegister\">TTelemetryRecipient.DoOnChannelRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelUnregister\">TTelemetryRecipient.DoOnChannelUnregister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#DoOnChannel\">TTelemetryRecipient.DoOnChannel</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventHandler\">TTelemetryRecipient.EventHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelHandler\">TTelemetryRecipient.ChannelHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventRegister\">TTelemetryRecipient.EventRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventRegisterByIndex\">TTelemetryRecipient.EventRegisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegister\">TTelemetryRecipient.ChannelRegister</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByIndex\">TTelemetryRecipient.ChannelRegisterByIndex</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByName\">TTelemetryRecipient.ChannelRegisterByName</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Small implementation changes.</p></li>    <li><p>2014-11-08 - Bugs repairs.</p></li>    <li><p>2014-11-25 - Changes due to a new system of storing and passing secondary types of channel value. These changes include: </p>    <ul class=\"compact_spacing\">    <li><p>Method TTelemetryRecipiemt.ChannelRegisterAll completely reimplemented</p></li>  </ul>    <p></p></li>    <li><p>2015-06-28 - Constant cMaxChannelIndex renamed to <a class=\"normal\" href=\"TelemetryRecipient.html#MaxChannelIndex\">MaxChannelIndex</a> and its value changed from 7 to 13.</p></li>    <li><p>2015-06-28 - Renamed following identifiers:</p>    <ul class=\"compact_spacing\">    <li><p>Field <code>TTelemetryRecipient.fStoredChannelsValues</code> renamed to <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fStoredChannels\">TTelemetryRecipient.fStoredChannels</a></p></li>    <li><p>Field <code>TTelemetryRecipient.fStoreChannelsValues</code> renamed to <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fStoreChannels\">TTelemetryRecipient.fStoreChannels</a></p></li>    <li><p>Method <code>TTelemetryRecipient.SetStoreChannelsValues</code> renamed to <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#SetStoreChannels\">TTelemetryRecipient.SetStoreChannels</a></p></li>    <li><p>Property <code>TTelemetryRecipient.StoredChannelsValues</code> renamed to <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoredChannels\">TTelemetryRecipient.StoredChannels</a></p></li>    <li><p>Property <code>TTelemetryRecipient.StoreChannelsValues</code> renamed to <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoreChannels\">TTelemetryRecipient.StoreChannels</a></p></li>    <li><p>Parameter <code>RegPrimaryType</code> of method <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterAll\">TTelemetryRecipient.ChannelRegisterAll</a> renamed to <code>RegisterPrimaryType</code></p></li>  </ul>    <p></p></li>    <li><p>2015-06-29 - Removed methods <code>TTelemetryRecipient.EventGetDataAsString</code> and <code>TTelemetryRecipient.ChannelGetValueAsString</code>. Their replacements can now be found in TelemetyStrings unit (functions <a class=\"normal\" href=\"TelemetryStrings.html#EventDataToStr\">EventDataToStr</a> and <a class=\"normal\" href=\"TelemetryStrings.html#ChannelValueToStr\">ChannelValueToStr</a>).</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryRecipient.html"},
     {"title": "TelemetryRecipient.TMulticastLogEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastLogEvent.html"},
     {"title": "TelemetryRecipient.TMulticastLogEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastLogEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastLogEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastLogEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastLogEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastLogEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastLogEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastLogEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastEventRegisterEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventRegisterEvent.html"},
     {"title": "TelemetryRecipient.TMulticastEventRegisterEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventRegisterEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastEventRegisterEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventRegisterEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastEventRegisterEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventRegisterEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastEventRegisterEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventRegisterEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastEventEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventEvent.html"},
     {"title": "TelemetryRecipient.TMulticastEventEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastEventEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastEventEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastEventEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastEventEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastChannelRegisterEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelRegisterEvent.html"},
     {"title": "TelemetryRecipient.TMulticastChannelRegisterEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelRegisterEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastChannelRegisterEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelRegisterEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastChannelRegisterEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelRegisterEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastChannelRegisterEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelRegisterEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastChannelUnregisterEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelUnregisterEvent.html"},
     {"title": "TelemetryRecipient.TMulticastChannelUnregisterEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelUnregisterEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastChannelUnregisterEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelUnregisterEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastChannelUnregisterEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelUnregisterEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastChannelUnregisterEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelUnregisterEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastChannelEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelEvent.html"},
     {"title": "TelemetryRecipient.TMulticastChannelEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastChannelEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastChannelEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastChannelEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastChannelEvent.html#Call"},
     {"title": "TelemetryRecipient.TMulticastConfigEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TMulticastConfigEvent.html"},
     {"title": "TelemetryRecipient.TMulticastConfigEvent.IndexOf", "text": "    <p>    <p>  Handler Handler routine whose index is requested. Index of passed handler in the list, -1 when not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastConfigEvent.html#IndexOf"},
     {"title": "TelemetryRecipient.TMulticastConfigEvent.Add", "text": " When <code>AllowDuplicity</code> is set to <code>True</code>, the handler is added to the list even when it is already stored, when set to <code>False</code>, no new list item is added and result contains index of previous occurrence of passed handler routine in the list.    <p>     <p>  Handler New handler routine to be added. AllowDuplicity Denotes whether passed routine can be stored in internal list when already in it. Index at which the added routine is stored. -1 when storing has failed. ", "tags": "", "loc": "TelemetryRecipient.TMulticastConfigEvent.html#Add"},
     {"title": "TelemetryRecipient.TMulticastConfigEvent.Remove", "text": "    <p>     <p>  Handler Routine to be removed from the list. RemoveAll Determines whether to remove only first occurence of passed handler or all of them. Index at which the removed item was stored in the list, -1 when passed routine was not found. ", "tags": "", "loc": "TelemetryRecipient.TMulticastConfigEvent.html#Remove"},
     {"title": "TelemetryRecipient.TMulticastConfigEvent.Call", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TMulticastConfigEvent.html#Call"},
     {"title": "TelemetryRecipient.TTelemetryRecipient", "text": "    <p>It provides methods for events and channels registration, unregistration and many others. It also provides object events that wraps API event and channel callbacks.<br> Before instance of this class is created, a check if it supports required telemetry and game version must be performed. For that purpose, it has class methods that can be called on class itself (before creating class instance). If required versions are not supported, do not create instance of this class!    <p><b>Note</b> - Because recipient internally creates instance of <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a>, the provider must support required versions of telemetry and game as well.    <p>Recipient can, similarly to <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a>, be crated on two ways - used-manager and automatically managed. When it is created in user-managed mode, internal <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#TelemetryInfoProvider\">TelemetryInfoProvider</a> is too created as user-managed and vice-versa. Here are main diferences between those two modes:    <p>Automatically managed (created using any parametrized constructor):</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#TelemetryInfoProvider\">TelemetryInfoProvider</a> is created as automatically managed (parameters are passed from constructor) - list are automatically filled</p></li>    <li><p>Telemetry and game version-specific preparations are performed</p></li>    <li><p>Game callbacks are automatically assigned (when supported by used constructor)</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#KeepUtilityEvents\">KeepUtilityEvents</a> property is set to <code>True</code> - utility events are automatically registered in constructor when it is possible (<a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration\">AllowAutoRegistration</a> must be <code>True</code> and game callbacks must be already assigned; <b>Note</b> - only one constructor assigns them)</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoreConfigurations\">StoreConfigurations</a> property is set to <code>True</code> - configuration event is automatically registered in constructor when it is possible</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration\">AllowAutoRegistration</a> property is set to <code>True</code> (value of this property can be changed later)</p></li>    <li><p>(Un)Registration methods check whether requested item is already registered or not before actual (un)registration</p></li>  </ul>    <p>    <p>User-manager mode (created using no-parameter constructor):</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#TelemetryInfoProvider\">TelemetryInfoProvider</a> is created as user-managed</p></li>    <li><p>No telemetry or game version-specific preparations are performed</p></li>    <li><p>Game callbacks are NOT automatically assigned - therefore things like event registration or writing to a game <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#Log\">log</a> does not work</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#KeepUtilityEvents\">KeepUtilityEvents</a> property is set to <code>False</code> - utility events are NOT automatically registered in constructor</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoreConfigurations\">StoreConfigurations</a> property is set to <code>False</code> - configuration event is NOT automatically registered in constructor</p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration\">AllowAutoRegistration</a> property is set to <code>False</code> (value of this property can be changed later)</p></li>    <li><p>(Un)Registration methods does NOT check whether requested item is already registered or not before actual (un)registration</p></li>  </ul>    <p>    <p>Following methods: </p>    <pre class=\"preformatted\">      HighestSupportedTelemetryVersion      SupportsTelemetryVersion      SupportsTelemetryMajorVersion      SupportsGameVersion      SupportsTelemetryAndGameVersion</pre>    <p> ...can and actually must be called directly on class. They should be used to check whether both this class and <a class=\"normal\" href=\"TelemetryInfoProvider.TTelemetryInfoProvider.html\">TTelemetryInfoProvider</a> class supports required telemetry and game version before instantiation (creation of class instance). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fUserManaged", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fUserManaged"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fAllowAutoRegistration", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fAllowAutoRegistration"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fInfoProvider", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fInfoProvider"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fRegisteredEvents", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fRegisteredEvents"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fRegisteredChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fRegisteredChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fStoredConfigs", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fStoredConfigs"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fStoredChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fStoredChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fLastTelemetryResult", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fLastTelemetryResult"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fTelemetryVersion", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fTelemetryVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fGameName", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fGameName"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fGameID", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fGameID"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fGameVersion", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fGameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fKeepUtilityEvents", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fKeepUtilityEvents"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fStoreConfigurations", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fStoreConfigurations"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fManageIndexedChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fManageIndexedChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fStoreChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fStoreChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.cbLog", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#cbLog"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.cbRegisterEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#cbRegisterEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.cbUnregisterEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#cbUnregisterEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.cbRegisterChannel", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#cbRegisterChannel"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.cbUnregisterChannel", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#cbUnregisterChannel"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnDestroy", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnDestroy"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnLog", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnLog"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEventRegister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEventRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEventUnregister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEventUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannelRegister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannelRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannelUnregister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannelUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannel", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannel"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnConfig", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnConfig"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnDestroyMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnDestroyMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnLogMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnLogMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEventRegisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEventRegisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEventUnregisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEventUnregisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnEventMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnEventMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannelRegisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannelRegisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannelUnregisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannelUnregisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnChannelMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnChannelMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.fOnConfigMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#fOnConfigMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetKeepUtilityEvents", "text": "    <p>  Value New value to be stored in <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fKeepUtilityEvents\">fKeepUtilityEvents</a>.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetKeepUtilityEvents"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetStoreConfigurations", "text": "    <p>  Value New value to be stored in <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fStoreConfigurations\">fStoreConfigurations</a>.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetStoreConfigurations"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetStoreChannels", "text": "    <p>  Value New value to be stored in <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#fStoreChannels\">fStoreChannels</a>.)  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetStoreChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventHandler", "text": "    <p>   Event Telemetry event identification number. Data Pointer to data received alongside the telemetry event. Can be <code>Nil</code>.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventHandler"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelHandler", "text": "  Name Name of received telemetry channel. ID ID of received channel. Index Index of received channel. Value Pointer to actual value of received channel. Can be <code>Nil</code>.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelHandler"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ProcessConfigurationEvent", "text": " It is called from <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#EventHandler\">EventHandler</a> method when configuration event is received.<br> Received data are parsed and configuration informations are extracted and stored in <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoredConfigs\">StoredConfigs</a> list (<a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#StoreConfigurations\">StoreConfigurations</a> must be <code>True</code>). <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#OnConfig\">OnConfig</a> event is called for every extracted config (after it is stored / its stored value changed).<br> When <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ManageIndexedChannels\">ManageIndexedChannels</a> is set to <code>True</code>, then indexed channels are too managed in this method (refer to source code for details).    <p>  Data Structure holding actual configuration data.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ProcessConfigurationEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnDestroy", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnDestroy"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnLog", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnLog"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnEventRegister", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnEventRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnEventUnregister", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnEventUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnChannelRegister", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnChannelUnregister", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnChannelUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnChannel", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnChannel"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.DoOnConfig", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#DoOnConfig"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.HighestSupportedTelemetryVersion", "text": "   Highest supported telemetry version. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#HighestSupportedTelemetryVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.HighestSupportedGameVersion", "text": "  GameID Game identifier. Highest supported version of passed game. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#HighestSupportedGameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SupportsTelemetryVersion", "text": "  TelemetryVersion Version of telemetry. <code>True</code> when given telemetry version is supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SupportsTelemetryVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SupportsTelemetryMajorVersion", "text": "  TelemetryVersion Version of telemetry. <code>True</code> when given telemetry major version is supported (minor part is ignored), otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SupportsTelemetryMajorVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SupportsGameVersion", "text": "  GameID Game identifier. GameVersion Version of game. <code>True</code> when given game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SupportsGameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SupportsTelemetryAndGameVersion", "text": "  TelemetryVersion Version of telemetry. GameID Game identifier. GameVersion Version of game. <code>True</code> when given telemetry, game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SupportsTelemetryAndGameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SupportsTelemetryAndGameVersionParam", "text": "  TelemetryVersion Version of telemetry. Parameters Structure containing other version informations. <code>True</code> when given telemetry, game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SupportsTelemetryAndGameVersionParam"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.PrepareForTelemetryVersion", "text": "    <p>    <p>  aTelemetryVersion Version of telemetry for which the object should be prepared. <code>True</code> when preparation for given version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#PrepareForTelemetryVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.PrepareForGameVersion", "text": "    <p>      <p>  aGameName Name of the game. aGameID Game identifier. aGameVersion Version of game. <code>True</code> when preparation for given game and its version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#PrepareForGameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.CommonCreate", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#CommonCreate"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Create", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Create"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Create", "text": "    <p>     TelemetryVersion Version of telemetry for which the object should prepare. GameID Game identifier. GameVersion Version of game. GameName Name of the game (optional parameter).  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Create"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Create", "text": "    <p>    TelemetryVersion Version of telemetry for which the object should prepare. Parameters Structure containing other parameters used in constructor (callbacks pointers, game version, etc.). AllowAutoRegistration Value of this parameter is immediately stored in <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration\">AllowAutoRegistration</a> property - telling appropriate functions (called from this constructor) whether they can automatically register game events or not.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Create"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.CreateCurrent", "text": " It calls parametrized constructor with parameter <code><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#TelemetryVersion\">TelemetryVersion</a></code> set to value returned by function <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#HighestSupportedTelemetryVersion\">HighestSupportedTelemetryVersion</a>, <code><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#GameID\">GameID</a></code> set to passed game id and <code><a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#GameVersion\">GameVersion</a></code> set to value returned by function <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#HighestSupportedGameVersion\">HighestSupportedGameVersion</a>. Does not assign callbacks since they are not passed in paramters - you have to assign them manually after object creation.<br>    <p>   GameID Game identifier. GameName Name of the game (optional parameter). This parameter is not procesed, only passed as is.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#CreateCurrent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Destroy", "text": "    ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Destroy"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetAPIInfo", "text": "    <p>   TelemetryVersion Version of telemetry API. Parameters Structure containing other API informations.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetAPIInfo"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetGameCallbacks", "text": "    <p>  Parameters Structure provided by telemetry API that contains all necessary callback pointers.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetGameCallbacks"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.SetGameCallback", "text": "    <p><b>Warning</b> - <code>CallbackFunction</code> pointer is not checked for actual type.    <p>   Callback Indicates to which callback assign given function pointer from second parameter. CallbackFunction Pointer to be assigned.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#SetGameCallback"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Log", "text": "    <p>   LogType Type of message (i.e. if it is error, warning or normal message). LogText Actual message text.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Log"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.Log", "text": " Message will be written as normal text (LogType set to SCS_LOG_TYPE_message).<br> Works only when <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#cbLog\">cbLog</a> callback is assigned.    <p>  LogText Actual message text.  ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#Log"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventRegistered", "text": "    <p>    <p>  Event Event to be checked. <code>True</code> when given event is found in list, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventRegistered"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventRegister", "text": " When instance was created as automatically managed, a check whether requested event is already registered is performed. When it is, function returns <code>True</code> but <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> is set to SCS_RESULT_already_registered. User-managed instance does not perform this check.    <p>     <p>  Event Event to be registered. UserData Any user data. Passed pointer will be stored with event context. <code>True</code> when registration was successful, otherwise <code>False</code> (property <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> contains result code). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventRegisterByIndex", "text": " When index falls out of allowed boundaries, no event is registered and function returns <code>False</code>.    <p>     <p>  Index Index of requested event in known events list. UserData Any user data. Passed pointer will be stored with event context. <code>True</code> when requested event was registered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventRegisterByIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventUnregister", "text": " When instance was created as automatically managed, a check whether requested event is really registered is performed. When it is not, function returns <code>True</code> but <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> is set to SCS_RESULT_not_found. User-managed instance does not perform this check.    <p>    <p>  Event Event to be unregistered. <code>True</code> when unregistration was successful, otherwise <code>False</code> (property <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> contains result code). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventUnregisterIndex", "text": "    <p>    <p>  Index Index of event in registered events list. <code>True</code> when requested event was unregistered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventUnregisterIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventUnregisterByIndex", "text": " When index falls out of allowed boundaries, no event is unregistered and function returns <code>False</code>.    <p>    <p>  Index Index of requested event in known events list. <code>True</code> when requested event was unregistered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventUnregisterByIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventRegisterAll", "text": "    <p>   Number of successfully registered events. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventRegisterAll"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.EventUnregisterAll", "text": "    <p>   Number of successfully unregistered events. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#EventUnregisterAll"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelRegistered", "text": "    <p>      <p>  Name Name of channel to be checked. Index Index of channel. ValueType Value type of checked channel. <code>True</code> when given channel is found in list, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelRegistered"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelRegister", "text": " When instance was created as automatically managed, a check whether requested channel is already registered is performed. When it is, function returns <code>True</code> but <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> is set to SCS_RESULT_already_registered. User-managed instance does not perform this check.    <p>        <p>  Name Name of registered channel. Index Index of registered channel. ValueType Value type of registered channel. Flags Registration flags. UserData Any user data. Passed pointer will be stored with event context. <code>True</code> when registration was successful, otherwise <code>False</code> (property <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> contains result code). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelRegisterByIndex", "text": "    <p>     <p>  Index Index of requested channel in known channels list. UserData Any user data. Passed pointer will be stored with event context. <code>True</code> when requested channel was registered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelRegisterByName", "text": " Channel of this name must be listed in known channels list as other informations required for registration are taken from there.<br> When channel is marked as indexed then all posible indices of such channel are registered.<br> Channel is registered only for its primary value type.<br> When channel of given name is not listed between known channels, then no channel is registered and function returns <code>False</code>.    <p>     <p>  Name Name of channel to be registered. UserData Any user data. Passed pointer will be stored with event context. <code>True</code> when requested channel was registered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterByName"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelUnregister", "text": " Works only when <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#cbUnregisterChannel\">cbUnregisterChannel</a> callback is assigned, when it is not, function returns false and <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> is set to <code>SCS_RESULT_generic_error</code>. When instance was created as automatically managed, a check whether requested channel is really registered is performed. When it is not, function returns <code>True</code> but <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> is set to SCS_RESULT_not_found. User-managed instance does not perform this check.    <p>      <p>  Name Name of channel to be unregistered. Index Index of channel. ValueType Value type of channel. <code>True</code> when unregistration was successful, otherwise <code>False</code> (property <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult\">LastTelemetryResult</a> contains result code). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelUnregisterIndex", "text": "    <p>    <p>  Index Index of channel in registered channels list. <code>True</code> when requested channel was unregistered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelUnregisterByIndex", "text": "    <p>    <p>  Index Index of requested channel in known channels list. <code>True</code> when requested channel was unregistered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterByIndex"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelUnregisterByName", "text": "  Name Name of channel(s) to be unregistered. <code>True</code> when requested channel was unregistered, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterByName"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelRegisterAll", "text": " When <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#ManageIndexedChannels\">ManageIndexedChannels</a> property is set to <code>True</code>, then top index for indexed channel registration is taken from appropriate stored configuration value (if such exixts).<br>    <p>     <p>  RegPrimaryTypes Register primary value type. SecondarySelectionMask Bitmask denoting what secondary value types should be registered. See description of function <a class=\"normal\" href=\"TelemetryValueTypeUtils.html#SelectSupportedValueTypes\">SelectSupportedValueTypes</a> (parameter <code>SecondarySelectionMask</code>) for details about how the individual types are selected based on this mask. Number of successfully registered channels. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelRegisterAll"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelUnregisterAll", "text": "    <p>   Number of successfully unregistered channels.) ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelUnregisterAll"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ConfigStored", "text": "    <p>     <p>  Name Name of checked configuration. Index Index of checked configuration. <code>True</code> when given config is found in list, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ConfigStored"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ChannelStored", "text": "    <p>      <p>  Name Name of checked channel. Index Index of checked channel. ValueType Value type of checked channel. <code>True</code> when given channel is found in list, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ChannelStored"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.UserManaged", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#UserManaged"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.AllowAutoRegistration", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#AllowAutoRegistration"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.TelemetryInfoProvider", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#TelemetryInfoProvider"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.RegisteredEvents", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#RegisteredEvents"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.RegisteredChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#RegisteredChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.StoredConfigs", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#StoredConfigs"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.StoredChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#StoredChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.LastTelemetryResult", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#LastTelemetryResult"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.TelemetryVersion", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#TelemetryVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.GameName", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#GameName"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.GameID", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#GameID"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.GameVersion", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#GameVersion"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.KeepUtilityEvents", "text": " If no event would be registered, then such call will not occur, rendering recipient unresponsive.<br> Initialized to <code>True</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#KeepUtilityEvents"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.StoreConfigurations", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#StoreConfigurations"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.ManageIndexedChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#ManageIndexedChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.StoreChannels", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#StoreChannels"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnDestroy", "text": " It is called AFTER all registered channels and events are unregistered and <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#KeepUtilityEvents\">KeepUtilityEvents</a> is set to <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnDestroy"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnLog", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnLog"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEventRegister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEventRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEventUnregister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEventUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEvent", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEvent"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannelRegister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannelRegister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannelUnregister", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannelUnregister"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannel", "text": "    <p><b>Warning</b> - this event can be called quite often (usually many times per frame). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannel"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnConfig", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnConfig"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnDestroyMulti", "text": " It is called AFTER all registered channels and events are unregistered and <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html#KeepUtilityEvents\">KeepUtilityEvents</a> is set to <code>False</code>. ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnDestroyMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnLogMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnLogMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEventRegisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEventRegisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEventUnregisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEventUnregisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnEventMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnEventMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannelRegisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannelRegisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannelUnregisterMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannelUnregisterMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnChannelMulti", "text": "    <p><b>Warning</b> - this event can be called quite often (usually many times per frame). ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnChannelMulti"},
     {"title": "TelemetryRecipient.TTelemetryRecipient.OnConfigMulti", "text": " ", "tags": "", "loc": "TelemetryRecipient.TTelemetryRecipient.html#OnConfigMulti"},
     {"title": "TelemetryRecipient.MaxChannelIndex", "text": " ", "tags": "", "loc": "TelemetryRecipient.html#MaxChannelIndex"},
     {"title": "TelemetryRecipient.RecipientGetChannelIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object.    <p>     <p>  Name Channel name to be converted to ID. Recipient <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object that will be used for actual conversion. Channel ID obtained from passed name. ", "tags": "", "loc": "TelemetryRecipient.html#RecipientGetChannelIDFromName"},
     {"title": "TelemetryRecipient.RecipientGetChannelNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object.    <p>     <p>  ID Channel ID to be converted to name. Recipient <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object that will be used for actual conversion. Channel name obtained from passed ID. ", "tags": "", "loc": "TelemetryRecipient.html#RecipientGetChannelNameFromID"},
     {"title": "TelemetryRecipient.RecipientGetConfigIDFromName", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object.    <p>     <p>  Name Config name to be converted to ID. Recipient <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object that will be used for actual conversion. Config ID obtained from passed name. ", "tags": "", "loc": "TelemetryRecipient.html#RecipientGetConfigIDFromName"},
     {"title": "TelemetryRecipient.RecipientGetConfigNameFromID", "text": " <code>UserData</code> passed to streaming function along with this callback must contain valid <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object.    <p>     <p>  ID Config ID to be converted to name. Recipient <a class=\"normal\" href=\"TelemetryRecipient.TTelemetryRecipient.html\">TTelemetryRecipient</a> object that will be used for actual conversion. Config name obtained from passed ID. ", "tags": "", "loc": "TelemetryRecipient.html#RecipientGetConfigNameFromID"},
     {"title": "TelemetryRecipient.TGameCallback", "text": "  gcbLog    gcbEventReg    gcbEventUnreg    gcbChannelReg    gcbChannelUnreg   ", "tags": "", "loc": "TelemetryRecipient.html#TGameCallback"},
     {"title": "TelemetryRecipient.TLogEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TLogEvent"},
     {"title": "TelemetryRecipient.TEventRegisterEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TEventRegisterEvent"},
     {"title": "TelemetryRecipient.TEventEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TEventEvent"},
     {"title": "TelemetryRecipient.TChannelRegisterEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TChannelRegisterEvent"},
     {"title": "TelemetryRecipient.TChannelUnregisterEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TChannelUnregisterEvent"},
     {"title": "TelemetryRecipient.TChannelEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TChannelEvent"},
     {"title": "TelemetryRecipient.TConfigEvent", "text": "    ", "tags": "", "loc": "TelemetryRecipient.html#TConfigEvent"},
     {"title": "TelemetryRecipientBinder", "text": "<hr>        <p><b>TelemetryRecipientBinder</b>    <p>©František Milt, all rights reserved.    <p>This unit provides class <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html\">TTelemetryRecipientBinder</a> that is designed as a base for classes that are intended to bind itself to telemetry recipient events (eg. loggers, servers, ...).    <p>Last change: 2014-11-05    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-05-03 - First stable version.</p></li>    <li><p>2014-11-05 - Added paramter <code>UserData</code> to following methods: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventRegisterHandler\">TTelemetryRecipientBinder.EventRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventUnregisterHandler\">TTelemetryRecipientBinder.EventUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventHandler\">TTelemetryRecipientBinder.EventHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelRegisterHandler\">TTelemetryRecipientBinder.ChannelRegisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelUnregisterHandler\">TTelemetryRecipientBinder.ChannelUnregisterHandler</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelHandler\">TTelemetryRecipientBinder.ChannelHandler</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-05 - Small implementation changes.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryRecipientBinder.html"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder", "text": " It has predefined abstract methods that can be assigned as handlers to recipient events one by one (when you want full control over what and when is called), or at once using <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#AssignHandlers\">AssignHandlers</a> method (<a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> must be assigned for this to work). ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.fRecipient", "text": " ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#fRecipient"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.fDeassignHandlersOnDestroy", "text": " ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#fDeassignHandlersOnDestroy"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.GetWorkingRecipient", "text": "    <p>     <p>  Sender Object suggested as working telemetry recipient. Recipient Output variable containing either valid telemetry recipient or <code>Nil</code>. <code>True</code> when output parameter <code>Recipient</code> contains valid telemetry recipient, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#GetWorkingRecipient"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.Create", "text": "    <p>  Recipient Telemetry recipient that operates on API. When you assign this parameter, it will be assigned to <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> property and handlers will be assigned to its events using <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#AssignHandlers\">AssignHandlers</a> method.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Create"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.Destroy", "text": "    <p>Calls method <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#DeassignHandlers\">DeassignHandlers</a> when <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#DeassignHandlersOnDestroy\">DeassignHandlersOnDestroy</a> property is <code>True</code>.    ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Destroy"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.AssignHandlers", "text": "    <p>   <code>True</code> when <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> is assigned and all handlers were assigned to its event, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#AssignHandlers"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.DeassignHandlers", "text": "    <p>   <code>True</code> when <a class=\"normal\" href=\"TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient\">Recipient</a> is assigned and all handlers were deassigned, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#DeassignHandlers"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.LogHandler", "text": "    <p>    Sender Object that is calling this method. LogType Type of log written into game log. LogText Actual text written into game log.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#LogHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.EventRegisterHandler", "text": "    <p>    Sender Object that is calling this method. Event Game event identification number. UserData User defined data stored inside the event context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventRegisterHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.EventUnregisterHandler", "text": "    <p>    Sender Object that is calling this method. Event Game event identification number. UserData User defined data stored inside the event context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventUnregisterHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.EventHandler", "text": "    <p>     Sender Object that is calling this method. Event Game event identification number. Data Pointer to data accompanying the event. Can be <code>Nil</code>. UserData User defined data stored inside the event context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#EventHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.ChannelRegisterHandler", "text": "    <p>        Sender Object that is calling this method. Name Name of registered channel. ID ID of registered channel. Index Index of registered channel. ValueType Value type of registered channel. Flags Registration flags. UserData User defined data stored inside the channel context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelRegisterHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.ChannelUnregisterHandler", "text": "    <p>       Sender Object that is calling called this method. Name Name of unregistered channel. ID ID of unregistered channel. Index Index of unregistered channel. ValueType Value type of unregistered channel. UserData User defined data stored inside the channel context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelUnregisterHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.ChannelHandler", "text": "    <p>       Sender Object that that is calling this method. Name Name of the channel. ID ID of the channel. Index Index of the channel. Value Actual value of the channel. Can be <code>Nil</code>. UserData User defined data stored inside the channel context.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ChannelHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.ConfigHandler", "text": "    <p>      Sender Object that is calling called this method. Name Name of the config. ID ID of the config. Index Index of the config. Value Actual value of the config.  ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#ConfigHandler"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.Recipient", "text": " Not initialized, it is assigned in constructor. Can be <code>Nil</code>. ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#Recipient"},
     {"title": "TelemetryRecipientBinder.TTelemetryRecipientBinder.DeassignHandlersOnDestroy", "text": " ", "tags": "", "loc": "TelemetryRecipientBinder.TTelemetryRecipientBinder.html#DeassignHandlersOnDestroy"},
     {"title": "TelemetrySCSExample_telemetry", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.html"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Timestamp", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Timestamp"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.RawRenderingTimestamp", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#RawRenderingTimestamp"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.RawSimulationTimestamp", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#RawSimulationTimestamp"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.RawPausedSimulationTimestamp", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#RawPausedSimulationTimestamp"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.OrientationAvailable", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#OrientationAvailable"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Heading", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Heading"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Pitch", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Pitch"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Roll", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Roll"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Speed", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Speed"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.RPM", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#RPM"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.Gear", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_TelemetryState.html#Gear"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fFormatSettings", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fFormatSettings"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fLog", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fLog"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fLogFileName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fLogFileName"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fOutputPaused", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fOutputPaused"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fPrintHeader", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fPrintHeader"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fLastTimestamp", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fLastTimestamp"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.fTelemetry", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#fTelemetry"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.InitLog", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#InitLog"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.FinishLog", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#FinishLog"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.Create", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#Create"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.Destroy", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#Destroy"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.LogHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#LogHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.EventRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#EventRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.EventUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#EventUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.EventHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#EventHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.ChannelRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#ChannelRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.ChannelUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#ChannelUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.ChannelHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#ChannelHandler"},
     {"title": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.ConfigHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry.TSCSExm_Telemetry.html#ConfigHandler"},
     {"title": "TelemetrySCSExample_telemetry.def_LogFileName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry.html#def_LogFileName"},
     {"title": "TelemetrySCSExample_telemetry_mem", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.html"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Running", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Running"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.WSTruckPlacement", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#WSTruckPlacement"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.SpeedometerSpeed", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#SpeedometerSpeed"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.RPM", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#RPM"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Gear", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Gear"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Steering", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Steering"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Throttle", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Throttle"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Brake", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Brake"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.Clutch", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#Clutch"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.LinearVelocity", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#LinearVelocity"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.AngularVelocity", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#AngularVelocity"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.LinearAcceleration", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#LinearAcceleration"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.AngularAcceleration", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#AngularAcceleration"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.CabinAngularVelocity", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#CabinAngularVelocity"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.CabinAngularAcceleration", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#CabinAngularAcceleration"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.WheelCount", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#WheelCount"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.WheelDeflections", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMemState.html#WheelDeflections"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.fFormatSettings", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#fFormatSettings"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.fMemoryMapName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#fMemoryMapName"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.fMemoryMapping", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#fMemoryMapping"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.fSharedMemory", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#fSharedMemory"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.LogLine", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#LogLine"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.InitializeSharedMemory", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#InitializeSharedMemory"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.DeinitializeSharedMemory", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#DeinitializeSharedMemory"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.Create", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#Create"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.Destroy", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#Destroy"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.LogHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#LogHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.EventRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#EventRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.EventUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#EventUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.EventHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#EventHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.ChannelRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#ChannelRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.ChannelUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#ChannelUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.ChannelHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#ChannelHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.ConfigHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem.html#ConfigHandler"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.fMemoryMapName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#fMemoryMapName"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.fMemoryMapping", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#fMemoryMapping"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.fSharedMemory", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#fSharedMemory"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.fStoredState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#fStoredState"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.GetInitialized", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#GetInitialized"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.Create", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#Create"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.Destroy", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#Destroy"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.Initialize", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#Initialize"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.Deinitialize", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#Deinitialize"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.RetrieveCurrentState", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#RetrieveCurrentState"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.SharedMemory", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#SharedMemory"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.StoredState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#StoredState"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.Initialized", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#Initialized"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.MemoryMapName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#MemoryMapName"},
     {"title": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.MemoryMapping", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.TSCSExm_TelemetryMem_Reader.html#MemoryMapping"},
     {"title": "TelemetrySCSExample_telemetry_mem.MAX_SUPPORTED_WHEEL_COUNT", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.html#MAX_SUPPORTED_WHEEL_COUNT"},
     {"title": "TelemetrySCSExample_telemetry_mem.def_MemoryMapName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.html#def_MemoryMapName"},
     {"title": "TelemetrySCSExample_telemetry_mem.PSCSExm_TelemetryMemState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_mem.html#PSCSExm_TelemetryMemState"},
     {"title": "TelemetrySCSExample_telemetry_position", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.html"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.CabinPosition", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html#CabinPosition"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.HeadPosition", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html#HeadPosition"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.TruckPlacement", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html#TruckPlacement"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.CabinOffset", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html#CabinOffset"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.HeadOffset", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPositionState.html#HeadOffset"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.fFormatSettings", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#fFormatSettings"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.fLog", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#fLog"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.fLogFileName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#fLogFileName"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.fOutputPaused", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#fOutputPaused"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.fTelemetry", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#fTelemetry"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.InitLog", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#InitLog"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.FinishLog", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#FinishLog"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.Create", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#Create"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.Destroy", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#Destroy"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.LogHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#LogHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.EventRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#EventRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.EventUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#EventUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.EventHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#EventHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.ChannelRegisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#ChannelRegisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.ChannelUnregisterHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#ChannelUnregisterHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.ChannelHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#ChannelHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.ConfigHandler", "text": "    ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.TSCSExm_TelemetryPosition.html#ConfigHandler"},
     {"title": "TelemetrySCSExample_telemetry_position.def_LogFileName", "text": " ", "tags": "", "loc": "TelemetrySCSExample_telemetry_position.html#def_LogFileName"},
     {"title": "TelemetryStreaming", "text": "<hr>        <p><b>TelemetryStreaming</b>    <p>©František Milt, all rights reserved.    <p>This unit contains routines for storing and loading variables and data into/from general memory and streams.<br> <br> Aside from minor things, there are four main groups of functions in this unit:<br> </p>    <ul class=\"paragraph_spacing\">    <li><p>First group (<code>Ptr_*</code>) consists of functions intended to provide simplified way of writing and reading simple variables to/from general memory location given by pointer. These functions all have boolean paramater called <code>Advance</code> - when this parameter is set to <code>True</code>, passed destination/source pointer is increased by number of bytes written/read, otherwise this pointer is not changed. This behavior is there for situations where you are writing data in sequence, so you do not need to manually recalculate pointer after every read/write call.</p></li>    <li><p>Second group (<code>Stream_*</code>) functions are designed to provide simplified way of writing and reading simple variables to/from streams.</p></li>    <li><p>Third group are function used to store and read selected SDK types to/from memory and/or streams. Their objective is to provide simple and uniform way of storing structures that have non-localized data, that is, some of their fields are only pointers, meaning they cannon be stored directly as only pointer and not actual data would be stored.</p></li>    <li><p>Fourth group consists of functions used to store structures used in telemetry library (mainly structures used to store informations about events, channels and configs).</p></li>  </ul>    <p>    <p>Last change: 2015-06-28    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-05-06 - First stable version.</p></li>    <li><p>2014-11-02 - Small implementation changes.</p></li>    <li><p>2014-11-05 - Type of result changed from signed to unsigned integer in functions returning number of written/read bytes or size of some structure or required memory (there is too many such functions to list them here).</p></li>    <li><p>2014-11-05 - Type of parameters <code>Size</code> and <code>BytesRead</code> changed from signed to unsigned integer in all functions with those parameters (there is too many such functions to list them here).</p></li>    <li><p>2014-11-24 - Changes due to a new system of storing and passing secondary types of channel value. Resulting data layout changed for these functions: </p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownChannel\">Ptr_Write_KnownChannel</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Read_KnownChannel\">Ptr_Read_KnownChannel</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryStreaming.html#Stream_Write_KnownChannel\">Stream_Write_KnownChannel</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryStreaming.html#Stream_Read_KnownChannel\">Stream_Read_KnownChannel</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-27 - All calls to function <code>CopyMemory</code> replaced by <code>Move</code>.</p></li>    <li><p>2015-06-27 - Added variant of function <code><a class=\"normal\" href=\"TelemetryStreaming.html#SizeOfString\">SizeOfString</a></code> that accepts API string (pointer, type scs_string_t) as a parameter.</p></li>    <li><p>2015-06-27 - Added variant of functions <code><a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_WriteString\">Ptr_WriteString</a></code> and <code><a class=\"normal\" href=\"TelemetryStreaming.html#Stream_WriteString\">Stream_WriteString</a></code> that accepts API string as an input parameter.</p></li>    <li><p>2015-06-28 - Implementation changes.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryStreaming.html"},
     {"title": "TelemetryStreaming.SizeOfString", "text": " When an empty string is passed, only size of string length (Int32 =&gt; 4Bytes) is returned.    <p>    <p>  Str String whose size will be returned. Size required for storing passed string in general memory. ", "tags": "", "loc": "TelemetryStreaming.html#SizeOfString"},
     {"title": "TelemetryStreaming.SizeOfString", "text": " When passed string is is not assigned or is empty, then only size of string length (Int32 =&gt; 4Bytes) is returned.    <p>    <p>  Str String whose size will be returned. Size required for storing passed string in general memory. ", "tags": "", "loc": "TelemetryStreaming.html#SizeOfString"},
     {"title": "TelemetryStreaming.Ptr_WriteString", "text": " Strings are stored as two fields - signed 32bit integer containing length of string in bytes (length of following array), followed by an array of bytes (the string itself, without terminating #0 character). For exmaple, string &quot;ABC.Z&quot; will be stored as:<br> </p>    <pre class=\"preformatted\">    05 00 00 00 41 42 43 2E 5A    |- length -|-- string ---|  </pre>    <p> <b>Note</b> - stored string is always UTF8 encoded. If you want to store string with different encoding, use conversion functions.    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Str String to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteString"},
     {"title": "TelemetryStreaming.Ptr_WriteString", "text": " Resulting memory layour is the same as in case of function that accepts normal string as an input parameter.    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Str String to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteString"},
     {"title": "TelemetryStreaming.Ptr_ReadString", "text": " Can return an empty string.    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Str Output string variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadString"},
     {"title": "TelemetryStreaming.Ptr_WriteInteger", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteInteger"},
     {"title": "TelemetryStreaming.Ptr_ReadInteger", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadInteger"},
     {"title": "TelemetryStreaming.Ptr_WriteInt64", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteInt64"},
     {"title": "TelemetryStreaming.Ptr_ReadInt64", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadInt64"},
     {"title": "TelemetryStreaming.Ptr_WriteSingle", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteSingle"},
     {"title": "TelemetryStreaming.Ptr_ReadSingle", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadSingle"},
     {"title": "TelemetryStreaming.Ptr_WriteDouble", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteDouble"},
     {"title": "TelemetryStreaming.Ptr_ReadDouble", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadDouble"},
     {"title": "TelemetryStreaming.Ptr_WriteBoolean", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteBoolean"},
     {"title": "TelemetryStreaming.Ptr_ReadBoolean", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadBoolean"},
     {"title": "TelemetryStreaming.Ptr_WriteByte", "text": "    <p>      <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteByte"},
     {"title": "TelemetryStreaming.Ptr_ReadByte", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadByte"},
     {"title": "TelemetryStreaming.Ptr_WriteBuffer", "text": "    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Buffer Buffer to be written. Size Size of the buffer in bytes. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_WriteBuffer"},
     {"title": "TelemetryStreaming.Ptr_ReadBuffer", "text": "    <p>       <p>  Source Memory location where to read. Must not be <code>Nil</code>. Buffer Output buffer. Size Number of bytes to be read. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadBuffer"},
     {"title": "TelemetryStreaming.Ptr_ReadoutString", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read string. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutString"},
     {"title": "TelemetryStreaming.Ptr_ReadoutInteger", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read integer value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutInteger"},
     {"title": "TelemetryStreaming.Ptr_ReadoutInt64", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read integer value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutInt64"},
     {"title": "TelemetryStreaming.Ptr_ReadoutSingle", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read floating point value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutSingle"},
     {"title": "TelemetryStreaming.Ptr_ReadoutDouble", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read floating point value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutDouble"},
     {"title": "TelemetryStreaming.Ptr_ReadoutBoolean", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read boolean value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutBoolean"},
     {"title": "TelemetryStreaming.Ptr_ReadoutByte", "text": "    <p>     <p>  Source Memory location where to read. Must not be <code>Nil</code>. Advance Indicating whether source pointer should be increased by number of bytes read. Read byte value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_ReadoutByte"},
     {"title": "TelemetryStreaming.Stream_WriteString", "text": " Strings are writen in the same manner as in <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_WriteString\">Ptr_WriteString</a> function.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Str Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteString"},
     {"title": "TelemetryStreaming.Stream_WriteString", "text": " Strings are writen in the same manner as in <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_WriteString\">Ptr_WriteString</a> function.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Str Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteString"},
     {"title": "TelemetryStreaming.Stream_ReadString", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadString"},
     {"title": "TelemetryStreaming.Stream_ReadoutString", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutString"},
     {"title": "TelemetryStreaming.Stream_WriteInteger", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteInteger"},
     {"title": "TelemetryStreaming.Stream_ReadInteger", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadInteger"},
     {"title": "TelemetryStreaming.Stream_ReadoutInteger", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutInteger"},
     {"title": "TelemetryStreaming.Stream_WriteInt64", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteInt64"},
     {"title": "TelemetryStreaming.Stream_ReadInt64", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadInt64"},
     {"title": "TelemetryStreaming.Stream_ReadoutInt64", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutInt64"},
     {"title": "TelemetryStreaming.Stream_WriteSingle", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteSingle"},
     {"title": "TelemetryStreaming.Stream_ReadSingle", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadSingle"},
     {"title": "TelemetryStreaming.Stream_ReadoutSingle", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutSingle"},
     {"title": "TelemetryStreaming.Stream_WriteDouble", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteDouble"},
     {"title": "TelemetryStreaming.Stream_ReadDouble", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadDouble"},
     {"title": "TelemetryStreaming.Stream_ReadoutDouble", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutDouble"},
     {"title": "TelemetryStreaming.Stream_WriteBoolean", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteBoolean"},
     {"title": "TelemetryStreaming.Stream_ReadBoolean", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadBoolean"},
     {"title": "TelemetryStreaming.Stream_ReadoutBoolean", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutBoolean"},
     {"title": "TelemetryStreaming.Stream_WriteByte", "text": "    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteByte"},
     {"title": "TelemetryStreaming.Stream_ReadByte", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Str Output value. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadByte"},
     {"title": "TelemetryStreaming.Stream_ReadoutByte", "text": "    <p>    <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadoutByte"},
     {"title": "TelemetryStreaming.Stream_WriteBuffer", "text": "    <p>      <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Buffer Buffer to be written. Size Size of the buffer in bytes. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_WriteBuffer"},
     {"title": "TelemetryStreaming.Stream_ReadBuffer", "text": "    <p>      <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Buffer Output buffer. Size Number of bytes to be read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_ReadBuffer"},
     {"title": "TelemetryStreaming.Size_scs_value", "text": "    <p>     <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a> function for details). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_value"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_value", "text": " Data can be stored in three ways, standard binary, minimized binary and third type is when value contains string data. When stored as standard, the whole structure is stored. When minimized, only used value type (eg. <code>float</code>, <code>fvector</code>) is stored, thus saving space. Strings are stored using function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_WriteString\">Ptr_WriteString</a>, refer to this functions for details how the string is actually stored.<br> <br> Memory layout for different styles of storing: </p>    <pre class=\"preformatted\">            value     |   size    |   value type      String:          ValueType     4 bytes     scs_value_type_t (should be set to SCS_VALUE_TYPE_string)          String data   variable    String      Standard binary:          Value         48 bytes    scs_value_t      Minimized binary:          ValueType     4 bytes     scs_value_type_t          Value         variable    depends on ValueType (eg. scs_u32_t, scs_value_euler_t, ...)  </pre>    <p> <br> <b>Note</b> - in all cases, first four bytes contains type of stored value. You should read this information first and then, according to its value, decide how to continue reading.    <p>        <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_value\">Size_scs_value</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_value"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_value", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a>, so all saving options and resulting memory layout are the same.    <p>      <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_value"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_value", "text": "    <p>       <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_value"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_value", "text": "    <p>       <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_value"},
     {"title": "TelemetryStreaming.Stream_Write_scs_value", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a>.    <p>      <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_value"},
     {"title": "TelemetryStreaming.Stream_Read_scs_value", "text": "    <p>      <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether value was saved minimized (valid only for binary values). Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_value"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_value", "text": "    <p>      <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_value"},
     {"title": "TelemetryStreaming.Size_scs_value_localized", "text": "    <p>     <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a> function for details). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_value_localized", "text": " All saving options and resulting memory layout is exactly the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a> (refer to it for details). It also means that it does not matter whether you save the data in this function or in <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a>, result should be the same and you can use any reading function on it.    <p>        <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_value_localized\">Size_scs_value_localized</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_value_localized", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a>, so all saving options and resulting memory layout are the same.    <p>      <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_value_localized", "text": "    <p>       <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_value_localized", "text": "    <p>       <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_value_localized"},
     {"title": "TelemetryStreaming.Stream_Write_scs_value_localized", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a>.    <p>      <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether value should be saved minimized (valid only for binary values). Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_value_localized"},
     {"title": "TelemetryStreaming.Stream_Read_scs_value_localized", "text": "    <p>      <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether value was saved minimized (valid only for binary values). Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_value_localized"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_value_localized", "text": "    <p>      <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_value_localized"},
     {"title": "TelemetryStreaming.Size_scs_named_value", "text": "    <p>      <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a> function for details). ItemIDOnly Indicates whether <code>name</code> field of stored value is saved only as ID (4 bytes), or as full string (4+ bytes). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_named_value"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_named_value", "text": " Field <code>value</code> of passed variable is saved using <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a> function, refer to this function for details about resulting memory layout.<br> <br> Resulting memory layout for different saving options: </p>    <pre class=\"preformatted\">            value     |   size    |   value type      ItemIDOnly set to false:          name          variable    String          index         4 bytes     scs_u32_t          value         variable    scs_value_t (see function Ptr_Write_scs_value)      ItemIDOnly set to true:          ID            4 bytes     TItemID          index         4 bytes     scs_u32_t          value         variable    scs_value_t (see function Ptr_Write_scs_value)  </pre>    <p>    <p>           <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_named_value\">Size_scs_named_value</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether value should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_named_value"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_named_value", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a>, so all saving options and resulting memory layout are the same.    <p>         <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether value should be saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_named_value"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_named_value", "text": "    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_named_value"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_named_value", "text": "    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_named_value"},
     {"title": "TelemetryStreaming.Stream_Write_scs_named_value", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a>.    <p>         <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether value should be saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_named_value"},
     {"title": "TelemetryStreaming.Stream_Read_scs_named_value", "text": "    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_named_value"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_named_value", "text": "    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_named_value"},
     {"title": "TelemetryStreaming.Size_scs_named_value_localized", "text": "    <p>      <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value_localized\">Ptr_Write_scs_named_value_localized</a> function for details). ItemIDOnly Indicates whether <code>Name</code> field of stored value is saved only as ID (4 bytes), or as full string (4+ bytes). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_named_value_localized", "text": " Field <code>Value</code> of passed variable is saved using <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a> function, refer to this function for details about resulting memory layout.<br> All saving options and resulting memory layout is exactly the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a> (refer to it for details). It also means that it does not matter whether you save the data in this function or in <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a>, result should be the same and you can use any reading function on it.    <p>           <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_named_value_localized\">Size_scs_named_value_localized</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether value should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>Name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_named_value_localized", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value_localized\">Ptr_Write_scs_named_value_localized</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value_localized\">Ptr_Write_scs_named_value_localized</a>, so all saving options and resulting memory layout are the same.    <p>         <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether value should be saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>Name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_named_value_localized", "text": "    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_named_value_localized", "text": "    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Stream_Write_scs_named_value_localized", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value_localized\">Ptr_Write_scs_named_value_localized</a>.    <p>         <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether value should be saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> of passed value is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert <code>Name</code> field to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Stream_Read_scs_named_value_localized", "text": "    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_named_value_localized", "text": "    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether value was saved minimized (valid only for binary values). ItemIDOnly When set to <code>True</code>, field <code>Name</code> is expected to be stored only as ID, not as string. After this ID is read, it is converted to string using function provided in parameter <code>IDNameFunc</code>. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_named_value_localized"},
     {"title": "TelemetryStreaming.Size_scs_telemetry_configuration", "text": "    <p>      <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value\">Ptr_Write_scs_value</a> function for details). ItemIDOnly Indicates whether <code>name</code> fields of attributes is saved only as ID (4 bytes), or as full string (4+ bytes). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_telemetry_configuration", "text": " Individual attributes of passed configuration are saved using <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a> function, refer to this function for details about resulting memory layout.<br> <br> Resulting memory layout: </p>    <pre class=\"preformatted\">            value     |   size    |   value type            id            variable    String          Count         4 bytes     32bit signed integer          attributes    variable[]  array of scs_name_value_t (see function Ptr_Write_scs_named_value)  </pre>    <p> <br> <b>Note</b> - <code>Count</code> contains number of all items in attributes array, including terminating empty value. This field must contain precise value, so you can use it for iteration or memory allocation in reading.<br> When <code>ItemIdOnly</code> is set to <code>False</code>, all strings are saved as usual, but when set to <code>True</code>, followind process is applied: </p>    <ul class=\"compact_spacing\">    <li><p><code>id</code> is stored as string</p></li>    <li><p>for each attribute, <code>name</code> is merged with configuration <code>id</code> using function <a class=\"normal\" href=\"TelemetryIDs.html#ConfigMergeIDAndAttribute\">ConfigMergeIDAndAttribute</a>, ...</p></li>    <li><p>...resulting conglomerate is passed to <code>NameIDFunc</code> function...</p></li>    <li><p>...and returned ID is then saved instead of attribute name (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value\">Ptr_Write_scs_named_value</a> for details.)</p></li>  </ul>    <p>    <p>           <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_telemetry_configuration\">Size_scs_telemetry_configuration</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_telemetry_configuration", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration\">Ptr_Write_scs_telemetry_configuration</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration\">Ptr_Write_scs_telemetry_configuration</a>, so all saving options and resulting memory layout are the same.    <p>         <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_telemetry_configuration", "text": " <b>Note</b> - when names of individual attributes are stored only as IDs - after conversion back to string, configuration <code>id</code> is removed from it using function <a class=\"normal\" href=\"TelemetryIDs.html#ConfigRemoveIDFromName\">ConfigRemoveIDFromName</a> and what is left is returned in output value.    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_telemetry_configuration", "text": " <b>Note</b> - when names of individual attributes are stored only as IDs - after conversion back to string, configuration <code>id</code> is removed from it using function <a class=\"normal\" href=\"TelemetryIDs.html#ConfigRemoveIDFromName\">ConfigRemoveIDFromName</a> and what is left is returned in output value.    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Stream_Write_scs_telemetry_configuration", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration\">Ptr_Write_scs_telemetry_configuration</a>.    <p>         <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Stream_Read_scs_telemetry_configuration", "text": " All loading options are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration\">Ptr_Read_scs_telemetry_configuration</a>.    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_telemetry_configuration", "text": " All loading options are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration\">Ptr_Read_scs_telemetry_configuration</a>.    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_telemetry_configuration"},
     {"title": "TelemetryStreaming.Size_scs_telemetry_configuration_localized", "text": "    <p>      <p>  Value Actual value for which the size is requested. Minimize When <code>True</code>, function returns only minimal size required for storing passed value (see <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a> function for details). ItemIDOnly Indicates whether <code>Name</code> fields of attributes is saved only as ID (4 bytes), or as full string (4+ bytes). Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Ptr_Write_scs_telemetry_configuration_localized", "text": " Individual attributes of passed configuration are saved using <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_named_value_localized\">Ptr_Write_scs_named_value_localized</a> function, refer to this function for details about resulting memory layout. All saving options and resulting memory layout is exactly the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration\">Ptr_Write_scs_telemetry_configuration</a> (refer to it for details). It also means that it does not matter whether you save the data in this function or in <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration\">Ptr_Write_scs_telemetry_configuration</a>, result should be the same and you can use any reading function on it.    <p>           <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_scs_telemetry_configuration_localized\">Size_scs_telemetry_configuration_localized</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>Name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Ptr_Store_scs_telemetry_configuration_localized", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration_localized\">Ptr_Write_scs_telemetry_configuration_localized</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration_localized\">Ptr_Write_scs_telemetry_configuration_localized</a>, so all saving options and resulting memory layout are the same.    <p>         <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>Name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes allocated for storing (you can use this value for freeing returned pointer). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Ptr_Read_scs_telemetry_configuration_localized", "text": " <b>Note</b> - when names of individual attributes are stored only as IDs - after conversion back to string, configuration <code>ID</code> is removed from it using function <a class=\"normal\" href=\"TelemetryIDs.html#ConfigRemoveIDFromName\">ConfigRemoveIDFromName</a> and what is left is returned in output value.    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Ptr_Readout_scs_telemetry_configuration_localized", "text": " <b>Note</b> - when names of individual attributes are stored only as IDs - after conversion back to string, configuration <code>ID</code> is removed from it using function <a class=\"normal\" href=\"TelemetryIDs.html#ConfigRemoveIDFromName\">ConfigRemoveIDFromName</a> and what is left is returned in output value.    <p>          <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Stream_Write_scs_telemetry_configuration_localized", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_telemetry_configuration_localized\">Ptr_Write_scs_telemetry_configuration_localized</a>.    <p>         <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Minimize Indicating whether attributes values should be saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is not stored as string, but is converted to ID using callback function passed in parameter <code>NameIDFunc</code> and this ID is then stored instead. This option takes effect only when <code>NameIDFunc</code> is assigned. NameIDFunc Callback function used to convert attributes <code>Name</code> fields to ID when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>NameIDFunc</code> function. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Stream_Read_scs_telemetry_configuration_localized", "text": " All loading options are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration_localized\">Ptr_Read_scs_telemetry_configuration_localized</a>.    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Stream_Readout_scs_telemetry_configuration_localized", "text": " All loading options are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Read_scs_telemetry_configuration_localized\">Ptr_Read_scs_telemetry_configuration_localized</a>.    <p>         <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Minimized Indicating whether attributes values were saved minimized. ItemIDOnly When set to <code>True</code>, field <code>Name</code> of individual attributes is expected to be stored only as ID, not as string. This option takes effect only when <code>IDNameFunc</code> is assigned. IDNameFunc Callback function used to convert ID back to string for attributes field <code>Name</code> when <code>ItemIDOnly</code> is set to <code>True</code>. UserData User data passed to <code>IDNameFunc</code> function. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_scs_telemetry_configuration_localized"},
     {"title": "TelemetryStreaming.Size_KnownEvent", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_KnownEvent"},
     {"title": "TelemetryStreaming.Ptr_Write_KnownEvent", "text": "    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">            value  |   size    |   value type            Event      4 bytes     scs_event_t          Name       variable    String          Valid      1 byte      Boolean          Utility    1 byte      Boolean  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_KnownEvent\">Size_KnownEvent</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_KnownEvent"},
     {"title": "TelemetryStreaming.Ptr_Store_KnownEvent", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownEvent\">Ptr_Write_KnownEvent</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownEvent\">Ptr_Write_KnownEvent</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_KnownEvent"},
     {"title": "TelemetryStreaming.Ptr_Read_KnownEvent", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_KnownEvent"},
     {"title": "TelemetryStreaming.Ptr_Readout_KnownEvent", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_KnownEvent"},
     {"title": "TelemetryStreaming.Stream_Write_KnownEvent", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownEvent\">Ptr_Write_KnownEvent</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_KnownEvent"},
     {"title": "TelemetryStreaming.Stream_Read_KnownEvent", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_KnownEvent"},
     {"title": "TelemetryStreaming.Stream_Readout_KnownEvent", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_KnownEvent"},
     {"title": "TelemetryStreaming.Size_KnownChannel", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_KnownChannel"},
     {"title": "TelemetryStreaming.Ptr_Write_KnownChannel", "text": "    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">            value       |   size    |   value type            Name            variable    String          ID              4 bytes     TChannelID          PrimaryType     4 bytes     scs_value_type_t          SecondaryTypes  4 bytes     TValueTypeBitmask          Indexed         1 byte      Boolean          IndexConfig     variable    String          IndexConfigID   4 bytes     TConfigID          MaxIndex        4 bytes     scs_u32_t  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_KnownChannel\">Size_KnownChannel</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_KnownChannel"},
     {"title": "TelemetryStreaming.Ptr_Store_KnownChannel", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownChannel\">Ptr_Write_KnownChannel</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownChannel\">Ptr_Write_KnownChannel</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_KnownChannel"},
     {"title": "TelemetryStreaming.Ptr_Read_KnownChannel", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_KnownChannel"},
     {"title": "TelemetryStreaming.Ptr_Readout_KnownChannel", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_KnownChannel"},
     {"title": "TelemetryStreaming.Stream_Write_KnownChannel", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownChannel\">Ptr_Write_KnownChannel</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_KnownChannel"},
     {"title": "TelemetryStreaming.Stream_Read_KnownChannel", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_KnownChannel"},
     {"title": "TelemetryStreaming.Stream_Readout_KnownChannel", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_KnownChannel"},
     {"title": "TelemetryStreaming.Size_KnownConfig", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_KnownConfig"},
     {"title": "TelemetryStreaming.Ptr_Write_KnownConfig", "text": "    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">            value       |   size    |   value type            Name            variable    String          ID              4 bytes     TConfigID          ValueType       4 bytes     scs_value_type_t          Indexed         1 byte      Boolean          Binded          1 byte      Boolean  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_KnownConfig\">Size_KnownConfig</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_KnownConfig"},
     {"title": "TelemetryStreaming.Ptr_Store_KnownConfig", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownConfig\">Ptr_Write_KnownConfig</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownConfig\">Ptr_Write_KnownConfig</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_KnownConfig"},
     {"title": "TelemetryStreaming.Ptr_Read_KnownConfig", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_KnownConfig"},
     {"title": "TelemetryStreaming.Ptr_Readout_KnownConfig", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_KnownConfig"},
     {"title": "TelemetryStreaming.Stream_Write_KnownConfig", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_KnownConfig\">Ptr_Write_KnownConfig</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_KnownConfig"},
     {"title": "TelemetryStreaming.Stream_Read_KnownConfig", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_KnownConfig"},
     {"title": "TelemetryStreaming.Stream_Readout_KnownConfig", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_KnownConfig"},
     {"title": "TelemetryStreaming.Size_EventInfo", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_EventInfo"},
     {"title": "TelemetryStreaming.Ptr_Write_EventInfo", "text": "    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">            value   |   size    |   value type            Event       4 bytes     scs_event_t          Utility     1 byte      Boolean  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_EventInfo\">Size_EventInfo</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_EventInfo"},
     {"title": "TelemetryStreaming.Ptr_Store_EventInfo", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_EventInfo\">Ptr_Write_EventInfo</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_EventInfo\">Ptr_Write_EventInfo</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_EventInfo"},
     {"title": "TelemetryStreaming.Ptr_Read_EventInfo", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_EventInfo"},
     {"title": "TelemetryStreaming.Ptr_Readout_EventInfo", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_EventInfo"},
     {"title": "TelemetryStreaming.Stream_Write_EventInfo", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_EventInfo\">Ptr_Write_EventInfo</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_EventInfo"},
     {"title": "TelemetryStreaming.Stream_Read_EventInfo", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_EventInfo"},
     {"title": "TelemetryStreaming.Stream_Readout_EventInfo", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_EventInfo"},
     {"title": "TelemetryStreaming.Size_ChannelInfo", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_ChannelInfo"},
     {"title": "TelemetryStreaming.Ptr_Write_ChannelInfo", "text": "    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">            value       |   size    |   value type            Name            variable    String          ID              4 bytes     TChannelID          Index           4 bytes     scs_u32_t          ValueType       4 bytes     scs_value_type_t          Flags           4 bytes     scs_u32_t          IndexConfigID   4 bytes     TItemID  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_ChannelInfo\">Size_ChannelInfo</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_ChannelInfo"},
     {"title": "TelemetryStreaming.Ptr_Store_ChannelInfo", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_ChannelInfo\">Ptr_Write_ChannelInfo</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_ChannelInfo\">Ptr_Write_ChannelInfo</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_ChannelInfo"},
     {"title": "TelemetryStreaming.Ptr_Read_ChannelInfo", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_ChannelInfo"},
     {"title": "TelemetryStreaming.Ptr_Readout_ChannelInfo", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_ChannelInfo"},
     {"title": "TelemetryStreaming.Stream_Write_ChannelInfo", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_ChannelInfo\">Ptr_Write_ChannelInfo</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_ChannelInfo"},
     {"title": "TelemetryStreaming.Stream_Read_ChannelInfo", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_ChannelInfo"},
     {"title": "TelemetryStreaming.Stream_Readout_ChannelInfo", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_ChannelInfo"},
     {"title": "TelemetryStreaming.Size_StoredConfig", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_StoredConfig"},
     {"title": "TelemetryStreaming.Ptr_Write_StoredConfig", "text": " Field <code>Value</code> is saved using function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a> or its alternatives with parameter <code>Minimize</code> set to <code>True</code> (refer to them for details about resulting layout).    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">           value  |   size    |   value type            Name      variable    String          ID        4 bytes     TConfigID          Index     4 bytes     scs_u32_t          Value     variable    scs_value_localized_t          Binded    1 byte      Boolean  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_StoredConfig\">Size_StoredConfig</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_StoredConfig"},
     {"title": "TelemetryStreaming.Ptr_Store_StoredConfig", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredConfig\">Ptr_Write_StoredConfig</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredConfig\">Ptr_Write_StoredConfig</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_StoredConfig"},
     {"title": "TelemetryStreaming.Ptr_Read_StoredConfig", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_StoredConfig"},
     {"title": "TelemetryStreaming.Ptr_Readout_StoredConfig", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_StoredConfig"},
     {"title": "TelemetryStreaming.Stream_Write_StoredConfig", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredConfig\">Ptr_Write_StoredConfig</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_StoredConfig"},
     {"title": "TelemetryStreaming.Stream_Read_StoredConfig", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_StoredConfig"},
     {"title": "TelemetryStreaming.Stream_Readout_StoredConfig", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_StoredConfig"},
     {"title": "TelemetryStreaming.Size_StoredChannel", "text": "    <p>    <p>  Value Actual value for which the size is requested. Number of bytes required for storing passed value. ", "tags": "", "loc": "TelemetryStreaming.html#Size_StoredChannel"},
     {"title": "TelemetryStreaming.Ptr_Write_StoredChannel", "text": " Field <code>Value</code> is saved using function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_scs_value_localized\">Ptr_Write_scs_value_localized</a> or its alternatives with parameter <code>Minimize</code> set to <code>True</code> (refer to them for details about resulting layout).    <p>Resulting memory layout: </p>    <pre class=\"preformatted\">           value  |   size    |   value type            Name      variable    String          ID        4 bytes     TConfigID          Index     4 bytes     scs_u32_t          Value     variable    scs_value_localized_t  </pre>    <p>    <p>       <p>  Destination Memory location where to write. Must not be <code>Nil</code>. Value Value to be written. Size Number of bytes available. If this value is smaller than number of bytes required to store passed value (see function <a class=\"normal\" href=\"TelemetryStreaming.html#Size_StoredChannel\">Size_StoredChannel</a>), then nothing is stored. Advance Indicating whether destination pointer should be increased by number of bytes written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Write_StoredChannel"},
     {"title": "TelemetryStreaming.Ptr_Store_StoredChannel", "text": " Unlike <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredChannel\">Ptr_Write_StoredChannel</a>, this function does not need preallocated memory. Instead, it first allocates memory required for storing of passed value and then writes the value into it.<br> It internally calls <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredChannel\">Ptr_Write_StoredChannel</a>, so all saving options and resulting memory layout are the same.    <p>     <p>  Ptr Pointer to memory location where the value was saved. Can be <code>Nil</code>. Value Value to be stored. Number of bytes allocated for storing (you can use this value to free allocated memory). ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Store_StoredChannel"},
     {"title": "TelemetryStreaming.Ptr_Read_StoredChannel", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. Value Output variable. Advance Indicating whether source pointer should be increased by number of bytes read. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Read_StoredChannel"},
     {"title": "TelemetryStreaming.Ptr_Readout_StoredChannel", "text": "    <p>      <p>  Source Memory location where to read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Advance Indicating whether source pointer should be increased by number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Ptr_Readout_StoredChannel"},
     {"title": "TelemetryStreaming.Stream_Write_StoredChannel", "text": " All saving options and resulting memory layout are the same as in function <a class=\"normal\" href=\"TelemetryStreaming.html#Ptr_Write_StoredChannel\">Ptr_Write_StoredChannel</a>.    <p>     <p>  Stream Stream to which the value will be written. Must not be <code>Nil</code>. Value Value to be written. Number of bytes written. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Write_StoredChannel"},
     {"title": "TelemetryStreaming.Stream_Read_StoredChannel", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. Value Output variable. Number of bytes read. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Read_StoredChannel"},
     {"title": "TelemetryStreaming.Stream_Readout_StoredChannel", "text": "    <p>     <p>  Stream Stream from which the value will be read. Must not be <code>Nil</code>. BytesRead Number of bytes read. Output value. ", "tags": "", "loc": "TelemetryStreaming.html#Stream_Readout_StoredChannel"},
     {"title": "TelemetryStreaming.TNameIDFunc", "text": "    <p>     <p>  Name Item name. UserData Any data that the callback needs to work. Can be <code>Nil</code>. Item ID computed from its name. ", "tags": "", "loc": "TelemetryStreaming.html#TNameIDFunc"},
     {"title": "TelemetryStreaming.TIDNameFunc", "text": "    <p>     <p>  ID Item ID. UserData Any data that the callback needs to work. Can be <code>Nil</code>. Item name corresponding to passed ID. ", "tags": "", "loc": "TelemetryStreaming.html#TIDNameFunc"},
     {"title": "TelemetryStrings", "text": "<hr>        <p><b>TelemetryStrings</b>    <p>©2013-2015 František Milt, all rights reserved.    <p>This unit is intended to provide some basic routines for manipulation and processing of <code>TelemetryString</code> type (UTF8 encoded string) and also routines designed to return human readable (i.e. textual) representation of binary data stored in variables of selected types.    <p>Last change: 2015-06-28    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2014-04-30 - First stable version.</p></li>    <li><p>2014-04-30 - Unit <code>TelemetryRecipientAux</code> was completely merged into this unit.</p></li>    <li><p>2014-11-04 - Added following functions:</p>    <ul class=\"compact_spacing\">    <li><p>TelemetrySameStrSwitch</p></li>    <li><p>TelemetrySameTextSwitch</p></li>    <li><p><a class=\"normal\" href=\"TelemetryStrings.html#ValueToStr\">ValueToStr</a> (multiple overloaded variants)</p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#SCSValueToStr\">SCSValueToStr</a></p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#SCSValueLocalizedToStr\">SCSValueLocalizedToStr</a></p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#SCSNamedValueToStr\">SCSNamedValueToStr</a></p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#SCSNamedValueLocalizedToStr\">SCSNamedValueLocalizedToStr</a></p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#TelemetryEventConfigurationToStr\">TelemetryEventConfigurationToStr</a></p></li>    <li><p>new variants of <a class=\"normal\" href=\"TelemetryStrings.html#TelemetryEventConfigurationLocalizedToStr\">TelemetryEventConfigurationLocalizedToStr</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-04 - Small implementation changes.</p></li>    <li><p>2015-06-25 - Following functions were renamed:</p>    <ul class=\"compact_spacing\">    <li><p>TelemetrySameStr renamed to <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStrConv\">TelemetrySameStrConv</a></p></li>    <li><p>TelemetrySameText renamed to <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameTextConv\">TelemetrySameTextConv</a></p></li>    <li><p>TelemetrySameStrSwitch renamed to <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStr\">TelemetrySameStr</a></p></li>    <li><p>TelemetrySameTextSwitch renamed to <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameText\">TelemetrySameText</a></p></li>  </ul>    <p></p></li>    <li><p>2015-06-25 - Implementation changes.</p></li>    <li><p>2015-06-28 - Added functions <a class=\"normal\" href=\"TelemetryStrings.html#EventDataToStr\">EventDataToStr</a> and <a class=\"normal\" href=\"TelemetryStrings.html#ChannelValueToStr\">ChannelValueToStr</a>.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryStrings.html"},
     {"title": "TelemetryStrings.TelemetrySameStrConv", "text": " Since the <code>TelemetryString</code> is UTF8-encoded and there is no function for comparison of such strings, both strings are converted to WideString before actual comparison takes place.<br> This function can be slow, so if performance is important, consider using <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStrNoConv\">TelemetrySameStrNoConv</a> instead.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameStrConv"},
     {"title": "TelemetryStrings.TelemetrySameTextConv", "text": " Since the <code>TelemetryString</code> is UTF8-encoded and there is no function for comparison of such strings, both strings are converted to WideString before actual comparison takes place.<br> This function can be slow, so if performance is important, consider using <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameTextNoConv\">TelemetrySameTextNoConv</a> instead.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameTextConv"},
     {"title": "TelemetryStrings.TelemetrySameStrNoConv", "text": " Unlike <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStrConv\">TelemetrySameStrConv</a>, this function does not convert input strings to WideString before comparison. Instead, both strings are treated as normal AnsiString. This requires that both strings contains only ASCII characters (that is, up to #126), otherwise the function can, and probably will, return wrong result.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameStrNoConv"},
     {"title": "TelemetryStrings.TelemetrySameTextNoConv", "text": " Unlike <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameTextConv\">TelemetrySameTextConv</a>, this function does not convert input strings to WideString before comparison. Instead, both strings are treated as normal AnsiString. This requires that both strings contains only ASCII characters (that is, up to #126), otherwise the function can, and probably will, return wrong result.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameTextNoConv"},
     {"title": "TelemetryStrings.TelemetrySameStr", "text": " This function internally calls <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStrNoConv\">TelemetrySameStrNoConv</a> when switch <code>AssumeASCIIString</code> is defined. When it is not defined, it calls <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameStrConv\">TelemetrySameStrConv</a>.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameStr"},
     {"title": "TelemetryStrings.TelemetrySameText", "text": " This function internally calls <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameTextNoConv\">TelemetrySameTextNoConv</a> when switch <code>AssumeASCIIString</code> is defined. When it is not defined, it calls <a class=\"normal\" href=\"TelemetryStrings.html#TelemetrySameTextConv\">TelemetrySameTextConv</a>.    <p>     <p>  S1 First string to compare. S2 Second string to compare. <code>True</code> when the strings have the same value, <code>False</code> otherwise. ", "tags": "", "loc": "TelemetryStrings.html#TelemetrySameText"},
     {"title": "TelemetryStrings.SCSValueTypeToStr", "text": " Identifiers are not defined by the API, for details about naming individual types refer to function implementation.    <p>    <p>  SCSValueType Value type. Textual identifier of given value type. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueTypeToStr"},
     {"title": "TelemetryStrings.SCSValueTypeFromStr", "text": " If identifier is not recognized, then <code>SCS_VALUE_TYPE_INVALID</code> is returned.<br> Function is case-insensitive.<br> Identifiers are not defined by the API, for details about naming individual types refer to function implementation.    <p>    <p>  Str Textual identifier of value type. Value type with name corresponding to passed textual identifier. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueTypeFromStr"},
     {"title": "TelemetryStrings.ValueToStr", "text": " Actual type of the value must be passed in parameter ValueType. When passed type of the value is not known or is not valid, an empty string is returned.    <p>       <p>  Value Buffer containing value that has be converted to text. ValueType Type of the value passed in general buffer. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#ValueToStr"},
     {"title": "TelemetryStrings.ValueToStr", "text": " Actual type of the value must be passed in parameter ValueType. When passed type of the value is not known or is not valid, an empty string is returned.    <p>        <p>  Value Buffer containing value that has be converted to text. ValueType Type of the value passed in general buffer. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#ValueToStr"},
     {"title": "TelemetryStrings.ValueToStr", "text": " Actual type of the value must be passed in parameter ValueType. When passed type of the value is not known or is not valid, an empty string is returned.    <p>           <p>  Value Buffer containing value that has be converted to text. ValueType Type of the value passed in general buffer. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#ValueToStr"},
     {"title": "TelemetryStrings.SCSValueToStr", "text": " When type of the value is not known, an empty string is returned.    <p>      <p>  Value Actual value to be converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueToStr"},
     {"title": "TelemetryStrings.SCSValueToStr", "text": " When type of the value is not known, an empty string is returned.    <p>       <p>  Value Actual value to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueToStr"},
     {"title": "TelemetryStrings.SCSValueToStr", "text": " When type of the value is not known, an empty string is returned.    <p>          <p>  Value Actual value to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueToStr"},
     {"title": "TelemetryStrings.SCSValueLocalizedToStr", "text": "    <p>      <p>  Value Actual value to be converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueLocalizedToStr"},
     {"title": "TelemetryStrings.SCSValueLocalizedToStr", "text": "    <p>       <p>  Value Actual value to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueLocalizedToStr"},
     {"title": "TelemetryStrings.SCSValueLocalizedToStr", "text": "    <p>          <p>  Value Actual value to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSValueLocalizedToStr"},
     {"title": "TelemetryStrings.SCSNamedValueToStr", "text": "    <p>      <p>  Value Actual value to be converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueToStr"},
     {"title": "TelemetryStrings.SCSNamedValueToStr", "text": "    <p>       <p>  Value Actual value to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueToStr"},
     {"title": "TelemetryStrings.SCSNamedValueToStr", "text": "    <p>          <p>  Value Actual value to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueToStr"},
     {"title": "TelemetryStrings.SCSNamedValueLocalizedToStr", "text": "    <p>      <p>  Value Actual value to be converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueLocalizedToStr"},
     {"title": "TelemetryStrings.SCSNamedValueLocalizedToStr", "text": "    <p>       <p>  Value Actual value to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueLocalizedToStr"},
     {"title": "TelemetryStrings.SCSNamedValueLocalizedToStr", "text": "    <p>          <p>  Value Actual value to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifier is added to output string. ShowDescriptors When set, fileds descriptors are shown for composite values. Textual representation of given value. ", "tags": "", "loc": "TelemetryStrings.html#SCSNamedValueLocalizedToStr"},
     {"title": "TelemetryStrings.TelemetryEventFrameStartToStr", "text": "    <p>     <p>  Data Structure to be converted to text. TypeName When set, value type identifiers for individual fields are added to output string. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventFrameStartToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationToStr", "text": "    <p>      <p>  Data Structure to be converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationToStr", "text": "    <p>       <p>  Data Structure to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationToStr", "text": "    <p>          <p>  Data Structure to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationLocalizedToStr", "text": "    <p>      <p>  Data Structure to be converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationLocalizedToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationLocalizedToStr", "text": "    <p>       <p>  Data Structure to be converted to text. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationLocalizedToStr"},
     {"title": "TelemetryStrings.TelemetryEventConfigurationLocalizedToStr", "text": "    <p>          <p>  Data Structure to be converted to text. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of given structure. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryEventConfigurationLocalizedToStr"},
     {"title": "TelemetryStrings.EventDataToStr", "text": " If there are no data to bo converted, then an empty string is returned.    <p>       <p>  Event Type of event that is converted to text. Data Data for given event. Can be <code>Nil</code>. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of event data. ", "tags": "", "loc": "TelemetryStrings.html#EventDataToStr"},
     {"title": "TelemetryStrings.EventDataToStr", "text": " If there are no data to bo converted, then an empty string is returned.    <p>        <p>  Event Type of event that is converted to text. Data Data for given event. Can be <code>Nil</code>. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of event data. ", "tags": "", "loc": "TelemetryStrings.html#EventDataToStr"},
     {"title": "TelemetryStrings.EventDataToStr", "text": " If there are no data to bo converted, then an empty string is returned.    <p>           <p>  Event Type of event that is converted to text. Data Data for given event. Can be <code>Nil</code>. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of event data. ", "tags": "", "loc": "TelemetryStrings.html#EventDataToStr"},
     {"title": "TelemetryStrings.ChannelValueToStr", "text": " When the pointer is not assigned, this function will return an empty string.    <p>      <p>  Value Pointer to actual channel value. Can be <code>Nil</code>. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of channel value. ", "tags": "", "loc": "TelemetryStrings.html#ChannelValueToStr"},
     {"title": "TelemetryStrings.ChannelValueToStr", "text": " When the pointer is not assigned, this function will return an empty string.    <p>       <p>  Value Pointer to actual channel value. Can be <code>Nil</code>. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of channel value. ", "tags": "", "loc": "TelemetryStrings.html#ChannelValueToStr"},
     {"title": "TelemetryStrings.ChannelValueToStr", "text": " When the pointer is not assigned, this function will return an empty string.    <p>          <p>  Value Pointer to actual channel value. Can be <code>Nil</code>. Format Format of floating point number to text conversion (eg. scientific). Precision Precision of floating point number (affects number to text conversion). Digits Number of digits in output string for floating point number to text conversion. FormatSettings Settings used for formatting an output string when floating point number is converted to text. TypeName When set, value type identifiers for individual attribute values are added to output. ShowDescriptors When set, fields descriptors are shown for composite values. Textual representation of channel value. ", "tags": "", "loc": "TelemetryStrings.html#ChannelValueToStr"},
     {"title": "TelemetryStrings.TelemetryStringsFormatSettings", "text": " Initialized in Initialization section of this unit (with id set to LOCALE_USER_DEFAULT).<br> But note that this variable is NOT thread safe by itself. If you want to access it from multiple threads, then thread safety is your responsibility. ", "tags": "", "loc": "TelemetryStrings.html#TelemetryStringsFormatSettings"},
     {"title": "TelemetryValueTypeUtils", "text": "    <p></p>    <pre class=\"preformatted\">      primary type                  secondary types      SCS_VALUE_TYPE_bool       -&gt;  /    SCS_VALUE_TYPE_s32        -&gt;  /    SCS_VALUE_TYPE_u32        -&gt;  u64    SCS_VALUE_TYPE_u64        -&gt;  /    SCS_VALUE_TYPE_float      -&gt;  double    SCS_VALUE_TYPE_double     -&gt;  float    SCS_VALUE_TYPE_fvector    -&gt;  dvector    SCS_VALUE_TYPE_dvector    -&gt;  fvector    SCS_VALUE_TYPE_euler      -&gt;  /    SCS_VALUE_TYPE_fplacement -&gt;  dplacement, fvector, dvector, euler    SCS_VALUE_TYPE_dplacement -&gt;  fplacement, dvector, fvector, euler    SCS_VALUE_TYPE_string     -&gt;  /  </pre>    <p> ", "tags": "", "loc": "TelemetryValueTypeUtils.html"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_1", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_1"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_2", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_2"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_3", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_3"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_4", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_4"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_5", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_5"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_6", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_6"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_7", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_7"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_8", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_8"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_9", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_9"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_10", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_10"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_11", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_11"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_12", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_12"},
     {"title": "TelemetryValueTypeUtils.TVT_REG_SEC_ALL", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TVT_REG_SEC_ALL"},
     {"title": "TelemetryValueTypeUtils.NoValueType", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#NoValueType"},
     {"title": "TelemetryValueTypeUtils.CompressValueTypesArray", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#CompressValueTypesArray"},
     {"title": "TelemetryValueTypeUtils.ValueTypesArrayToStr", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValueTypesArrayToStr"},
     {"title": "TelemetryValueTypeUtils.ValueTypeBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValueTypeBitmask"},
     {"title": "TelemetryValueTypeUtils.ValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.BitmaskValueType", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#BitmaskValueType"},
     {"title": "TelemetryValueTypeUtils.BitmaskValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#BitmaskValueTypes"},
     {"title": "TelemetryValueTypeUtils.BitmaskValueTypesAddPrimary", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#BitmaskValueTypesAddPrimary"},
     {"title": "TelemetryValueTypeUtils.ValueTypeBitmaskAdd", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValueTypeBitmaskAdd"},
     {"title": "TelemetryValueTypeUtils.ValueTypeBitmaskRemove", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValueTypeBitmaskRemove"},
     {"title": "TelemetryValueTypeUtils.SecondaryValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SecondaryValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.SecondaryValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SecondaryValueTypes"},
     {"title": "TelemetryValueTypeUtils.SecondaryValueTypesCount", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SecondaryValueTypesCount"},
     {"title": "TelemetryValueTypeUtils.SupportedValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SupportedValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.SupportedValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SupportedValueTypes"},
     {"title": "TelemetryValueTypeUtils.ValidateSecondaryValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValidateSecondaryValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.ValidateSupportedValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#ValidateSupportedValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.MakeValidSecondaryValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#MakeValidSecondaryValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.MakeValidSupportedValueTypesBitmask", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#MakeValidSupportedValueTypesBitmask"},
     {"title": "TelemetryValueTypeUtils.SelectSupportedValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SelectSupportedValueTypes"},
     {"title": "TelemetryValueTypeUtils.SelectSupportedValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SelectSupportedValueTypes"},
     {"title": "TelemetryValueTypeUtils.SelectSecondaryValueTypes", "text": "    ", "tags": "", "loc": "TelemetryValueTypeUtils.html#SelectSecondaryValueTypes"},
     {"title": "TelemetryValueTypeUtils.TValueTypeBitmask", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TValueTypeBitmask"},
     {"title": "TelemetryValueTypeUtils.TValueTypesArray", "text": " ", "tags": "", "loc": "TelemetryValueTypeUtils.html#TValueTypesArray"},
     {"title": "TelemetryVersionObjects", "text": "<hr>        <p><b>TelemetryVersionObjects</b>    <p>©František Milt, all rights reserved.    <p>Classes in this unit (for details, refer to declaration of individual class): </p>    <pre class=\"preformatted\">    TTelemetryAbstractVersionObject     |- TTelemetryVersionObject         |- TTelemetryVersionPrepareObject  </pre>    <p>    <p>Last change: 2015-06-28    <p>Change List:</p>    <ul class=\"paragraph_spacing\">    <li><p>2013-10-17 - First stable version.</p></li>    <li><p>2014-04-06 - Type of parameters <code>GameName</code> and <code>GameID</code> in method <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForGameVersion\">TTelemetryVersionPrepareObject.PrepareForGameVersion</a> changed to <code>TelemetryString</code>.</p></li>    <li><p>2014-04-06 - Added support for eut2 1.8.</p></li>    <li><p>2014-05-01 - Added method <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#HighestSupportedGameVersion\">TTelemetryAbstractVersionObject.HighestSupportedGameVersion</a> and its variants in descendant classes.</p></li>    <li><p>2014-10-23 - Added support for eut2 1.9.</p></li>    <li><p>2014-10-23 - Repaired bug in implementation of method <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionObject.html#HighestSupportedGameVersion\">TTelemetryVersionObject.HighestSupportedGameVersion</a>.</p></li>    <li><p>2014-10-23 - Following methods were moved to public section:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForTelemetryVersion\">TTelemetryVersionPrepareObject.PrepareForTelemetryVersion</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForGameVersion\">TTelemetryVersionPrepareObject.PrepareForGameVersion</a></p></li>  </ul>    <p></p></li>    <li><p>2014-10-23 - Added following methods:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareFor\">TTelemetryVersionPrepareObject.PrepareFor</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForParam\">TTelemetryVersionPrepareObject.PrepareForParam</a></p></li>  </ul>    <p></p></li>    <li><p>2014-10-23 - Type of parameter <code>GameID</code> in following methods changed to <code>TelemetryString</code>:</p>    <ul class=\"compact_spacing\">    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#HighestSupportedGameVersion\">TTelemetryAbstractVersionObject.HighestSupportedGameVersion</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsGameVersion\">TTelemetryAbstractVersionObject.SupportsGameVersion</a></p></li>    <li><p><a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsTelemetryAndGameVersion\">TTelemetryAbstractVersionObject.SupportsTelemetryAndGameVersion</a></p></li>  </ul>    <p></p></li>    <li><p>2014-11-07 - Added support for eut2 1.10.</p></li>    <li><p>2015-06-28 - Small implementation changes.</p></li>  </ul>    <p>    <p><hr> František Milt <fmilt@seznam.cz>  ", "tags": "", "loc": "TelemetryVersionObjects.html"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject", "text": "    <p>This class defines set of methods used to check version support. Use it as an ancestor for classes where you want to fully control methods implementation or for classes that supports different set of versions than is defined for <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryVersionObject.html\">TTelemetryVersionObject</a>.<br> All methods must be called directly on class. They are intended to be used to check whether the class supports required telemetry and game version before instantiation (creation of class instance). ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.HighestSupportedTelemetryVersion", "text": "   Highest supported telemetry version. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#HighestSupportedTelemetryVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.HighestSupportedGameVersion", "text": "  GameID Game identifier. Highest supported version of passed game. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#HighestSupportedGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.SupportsTelemetryVersion", "text": "  TelemetryVersion Version of telemetry. <code>True</code> when given telemetry version is supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsTelemetryVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.SupportsTelemetryMajorVersion", "text": "  TelemetryVersion Version of telemetry. <code>True</code> when given telemetry major version is supported (minor part is ignored), otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsTelemetryMajorVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.SupportsGameVersion", "text": "  GameID Game identifier. GameVersion Version of game. <code>True</code> when given game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.SupportsTelemetryAndGameVersion", "text": "  TelemetryVersion Version of telemetry. GameID Game identifier. GameVersion Version of game. <code>True</code> when given telemetry, game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsTelemetryAndGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.SupportsTelemetryAndGameVersionParam", "text": "  TelemetryVersion Version of telemetry. Parameters Structure containing other version informations. <code>True</code> when given telemetry, game and its version are supported, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryAbstractVersionObject.html#SupportsTelemetryAndGameVersionParam"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject", "text": "    <p>This class implements all methods from <a class=\"normal\" href=\"TelemetryVersionObjects.TTelemetryAbstractVersionObject.html\">TTelemetryAbstractVersionObject</a>. Used as an ancestor for classes that supports exactly the same versions set as this class.<br> All methods must be called directly on class. They are intended to be used to check whether the class supports required telemetry and game version before instantiation (creation of class instance).    <p>Supported versions as of 2014-11-07: </p>    <ul class=\"compact_spacing\">    <li><p>Telemetry 1.0</p></li>    <li><p>eut2 1.0</p></li>    <li><p>eut2 1.1</p></li>    <li><p>eut2 1.2</p></li>    <li><p>eut2 1.3</p></li>    <li><p>eut2 1.4</p></li>    <li><p>eut2 1.5</p></li>    <li><p>eut2 1.6</p></li>    <li><p>eut2 1.7</p></li>    <li><p>eut2 1.8</p></li>    <li><p>eut2 1.9</p></li>    <li><p>eut2 1.10</p></li>  </ul>    <p> ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.HighestSupportedTelemetryVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#HighestSupportedTelemetryVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.HighestSupportedGameVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#HighestSupportedGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.SupportsTelemetryVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#SupportsTelemetryVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.SupportsTelemetryMajorVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#SupportsTelemetryMajorVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.SupportsGameVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#SupportsGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.SupportsTelemetryAndGameVersion", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#SupportsTelemetryAndGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionObject.SupportsTelemetryAndGameVersionParam", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionObject.html#SupportsTelemetryAndGameVersionParam"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject", "text": "    <p>Methods beginning with <code>Prepare_</code> are called to prepare created object for specific telemetry/game version.<br> Each telemetry/game version has its own method, even if no action is needed. For each version, all lower or equal version methods are called in ascending order (every method calls its predecessor at the beginning of its own code). For example, for version 1.2, methods 1_0, 1_1 and 1_2 would be called. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Telemetry_1_0", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Telemetry_1_0"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_0", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_0"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_1", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_1"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_2", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_2"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_3", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_3"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_4", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_4"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_5", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_5"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_6", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_6"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_7", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_7"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_8", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_8"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_9", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_9"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.Prepare_Game_eut2_1_10", "text": "    ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#Prepare_Game_eut2_1_10"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.PrepareForTelemetryVersion", "text": "    <p>    <p>  TelemetryVersion Version of telemetry for which the object should be prepared. <code>True</code> when preparation for given version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForTelemetryVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.PrepareForGameVersion", "text": "    <p>      <p>  GameName Name of the game. GameID Game identifier. GameVersion Version of game. <code>True</code> when preparation for given game and its version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForGameVersion"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.PrepareFor", "text": "    <p>       <p>  TelemetryVersion Version of telemetry for which the object should be prepared. GameName Name of the game. GameID Game identifier. GameVersion Version of game. <code>True</code> when preparation for given telemetry version and game and its version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareFor"},
     {"title": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.PrepareForParam", "text": "    <p>     <p>  TelemetryVersion Version of telemetry for which the object should be prepared. Parameters Structure containing other necessary game and version informations. <code>True</code> when preparation for given telemetry version and game and its version were done successfully, otherwise <code>False</code>. ", "tags": "", "loc": "TelemetryVersionObjects.TTelemetryVersionPrepareObject.html#PrepareForParam"}
]};
